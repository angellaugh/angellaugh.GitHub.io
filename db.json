{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.jpg","path":"images/avatar.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/ES.md","hash":"d6e0c14556636c81473b6126dbf94cafa4584359","modified":1676119603100},{"_id":"source/_posts/django.md","hash":"92a419246d00cd90b54f8c6874e5c79624eb3234","modified":1676118839481},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1676118839481},{"_id":"source/_posts/flask.md","hash":"7e399eb589914ec7f58dd8683c062df8a6c60f2b","modified":1676118839481},{"_id":"source/_posts/es-suse.md","hash":"48d56b931153e82dd4282a345a7f0dbfebf6cc5b","modified":1676119130595},{"_id":"source/categories/index.md","hash":"4e309817da92e7655c9a4f8b07644ec953cc1a04","modified":1676118839487},{"_id":"source/tags/index.md","hash":"1d7534f233eb34e14a541820fb7ee119754442d3","modified":1676118839484},{"_id":"source/_posts/metadata.md","hash":"9b736a50437de63a81533d6bf1c746e8b8ce3d33","modified":1676119376586},{"_id":"source/about/index.md","hash":"c95dd53936e03b914296b98ae39de19011a82488","modified":1676118839482},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1676118839544},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1676118839556},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1676118839556},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1676118839581},{"_id":"themes/next/_config.yml","hash":"68d8bd6ac0e16c5dbb47ef500ca074b8a9479dce","modified":1676120174714},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1676118839548},{"_id":"themes/next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1676118839580},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1676118839554},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1676118839556},{"_id":"themes/next/.gitignore","hash":"7b68ca7a46104cf9aa84ec0541a4856ab1836eca","modified":1676118839547},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1676118839547},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1676118839554},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1676118839555},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1676118839556},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1676118839488},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1676118839554},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1676118839556},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1676118839554},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1676118839544},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1676118839554},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1676118839555},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1676118839556},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1676118839554},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1676118839542},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1676118839541},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1676118839544},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1676118839544},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1676118839540},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1676118839540},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1676118839544},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1676118839542},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1676118839541},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1676118839547},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1676118839546},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1676118839546},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1676118839545},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1676118839546},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1676118839545},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1676118839546},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1676118839545},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1676118839546},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1676118839545},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1676118839545},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1676118839545},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1676118839547},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1676118839546},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1676118839545},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1676118839546},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1676118839545},{"_id":"themes/next/languages/tr.yml","hash":"fe793f4c2608e3f85f0b872fd0ac1fb93e6155e2","modified":1676118839547},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1676118839546},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1676118839546},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1676118839547},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1676118839547},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1676118839489},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1676118839489},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1676118839551},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1676118839492},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1676118839488},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1676118839492},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1676118839500},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1676118839493},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1676118839555},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1676118839555},{"_id":"themes/next/source/.DS_Store","hash":"8076dcbf8a1fb41558e32f65b5f2a86d94c4824f","modified":1676118839511},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1676118839542},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1676118839542},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1676118839542},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1676118839555},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1676118839555},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1676118839543},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1676118839542},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1676118839543},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1676118839543},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1676118839543},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1676118839544},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1676118839543},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1676118839543},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1676118839543},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1676118839491},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1676118839491},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1676118839543},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1676118839491},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"8627c8c8b031ecee16c522433b66fa4d6979b8ea","modified":1676118839508},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1676118839491},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1676118839490},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1676118839509},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1676118839507},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1676118839506},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1676118839499},{"_id":"themes/next/layout/_partials/footer.swig","hash":"1a4d3e9d6dfaba15a205bff8bdbb4def6e26e2b3","modified":1676118839498},{"_id":"themes/next/scripts/events/index.js","hash":"bf5e93f9209d111a014a7a6a17e86c05be552d13","modified":1676118839552},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1676118839498},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1676118839496},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1676118839550},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1676118839550},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1676118839510},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1676118839495},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"c4ec5822d644ddcedf2401837e6f6e6d3b63fbcd","modified":1676118839510},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1676118839550},{"_id":"themes/next/scripts/filters/post.js","hash":"d86849559ae54a4098aef4e2ab9dc8f99a1d186c","modified":1676118839550},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1676118839553},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1676118839550},{"_id":"themes/next/scripts/tags/button.js","hash":"946dd7beede408d1f090d5e9774d74763828b97c","modified":1676118839552},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1676118839551},{"_id":"themes/next/scripts/helpers/engine.js","hash":"22d77bd511fc7c1bbd12339d65004ed5bfb0713c","modified":1676118839553},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"0f133f27b61e8351cfd0959ba8a1b8551a9a8cc6","modified":1676118839551},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1676118839553},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1676118839552},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1676118839553},{"_id":"themes/next/layout/_macro/post.swig","hash":"71e4dc5a56cbc403d9785526f7719d824f4c8911","modified":1676118839510},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1676118839551},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1676118839551},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1676118839552},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1676118839552},{"_id":"themes/next/source/css/_mixins.styl","hash":"b79ff3debd5709397b122292fc7e551ae9d40782","modified":1676118839527},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1676118839551},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1676118839551},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1676118839532},{"_id":"themes/next/source/css/_colors.styl","hash":"19c836f367977fb712b9868f3281ff5d757a8d5c","modified":1676118839527},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1676118839527},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1676118839532},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1676118839533},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1676118839533},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1676118839532},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1676118839532},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1676118839534},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1676118839534},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1676118839534},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1676118839534},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1676118839534},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1676118839533},{"_id":"themes/next/source/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1676118839535},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1676118839532},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1676118839534},{"_id":"themes/next/source/js/local-search.js","hash":"b42bd1c883ce91db8632d96e0f0e062cb6b73adc","modified":1676118839535},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1676118839536},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1676118839533},{"_id":"themes/next/source/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1676118839536},{"_id":"themes/next/source/js/utils.js","hash":"95c5d37aa06521675afcf8619cfc5dbba3d2e18a","modified":1676118839535},{"_id":"themes/next/source/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1676118839535},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1676118839490},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1676118839490},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1676118839490},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1676118839490},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1676118839491},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1676118839536},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1676118839509},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1676118839509},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1676118839506},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1676118839506},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1676118839504},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1676118839503},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1676118839509},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1676118839509},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1676118839504},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1676118839503},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1676118839507},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1676118839504},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1676118839508},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1676118839507},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1676118839508},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1676118839508},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1676118839505},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1676118839507},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d7258d02bcf0dac6c0fd8377c0909ddecb09d1d4","modified":1676118839501},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1676118839502},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1676118839502},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1676118839508},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1676118839502},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1676118839501},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1676118839508},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"12aeb9ee0d1d49d347f82a91e6bab568e1b59037","modified":1676118839499},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1676118839499},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1676118839497},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1676118839499},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1676118839499},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"ecbac5f5ed26ea7505834bd298ef2b07a3cf9729","modified":1676118839498},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"958e097790551c9520426a1233add03515034f35","modified":1676118839499},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1676118839494},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"94d54b0c65d504f772af1e62424952e092b6c21d","modified":1676118839495},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1676118839494},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1676118839494},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"12cd9adb0c33adc484201f9e8a4e64ccf3011bae","modified":1676118839495},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1676118839494},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1676118839553},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1676118839497},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1676118839497},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1676118839553},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"1f20213af8da3127701e6bb9da995e5c91be2051","modified":1676118839549},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1676118839553},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"0803d4f4d3d02c24417c163ad0b27b60fda79250","modified":1676118839550},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"19cbd24880d0fbbd4d5698cd54da598f03b942da","modified":1676118839549},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1676118839495},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1676118839549},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1676118839549},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6a72b5928cdab9526a288177991e4b2aedd028cf","modified":1676118839549},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1676118839550},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"ec20ff43845723e0ac2a245047c7a7e5aead6e88","modified":1676118839493},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1676118839497},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1676118839550},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1676118839526},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"799fdf4f258a51d45d1e2b02fb59b337e46b5b3c","modified":1676118839526},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1676118839526},{"_id":"themes/next/source/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1676118839535},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1676118839535},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1676118839538},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1676118839527},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1676118839538},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1676118839537},{"_id":"themes/next/source/css/_variables/base.styl","hash":"dae390efcb5da9c021ad7f25fe2d39ff36938cc6","modified":1676118839526},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1676118839539},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1676118839537},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1676118839519},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1676118839538},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1676118839516},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1676118839520},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1676118839524},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1676118839524},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"220da37051ed5dac9cf7bd126451f6aba4f94d21","modified":1676118839514},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1676118839513},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1676118839519},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1676118839514},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1676118839515},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1676118839516},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"b3bea92eef0e1fe2e7e294dac2184d16b5b8d666","modified":1676118839516},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1676118839512},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1676118839514},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1676118839529},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1676118839531},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1676118839530},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1676118839531},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1676118839531},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1676118839531},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1676118839528},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1676118839528},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"5e644b1303ab6dcd1b65ee0fd6b91309b04ce64d","modified":1676118839528},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1676118839528},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1676118839528},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1676118839528},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1676118839530},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1676118839529},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"ccb71d732b12acd02ac26ed6bbda4861d027857d","modified":1676118839530},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e4f958677a75de87ee1caf7e22ba46a0602f22dd","modified":1676118839530},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1676118839537},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1676118839537},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1676118839529},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1676118839538},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"82025c3ad7af12e532e2e81be98deb0a74ff23ac","modified":1676118839530},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1676118839538},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"c1daeb60c23945f745703ac2c3f4bf99d0ea3d95","modified":1676118839521},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1676118839522},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"7ddb7453bf9b85b01bff136e9d10a7f06baac9e8","modified":1676118839521},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1676118839518},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1676118839521},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1676118839521},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1676118839519},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"89f76380091f1be49936c69bac02e984dae5ff87","modified":1676118839518},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1676118839518},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1676118839518},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"796eb941ba0ca03fd5ca6d15a1f6a56afd9aa174","modified":1676118839518},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1676118839519},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"66211794e4ed47e779ca81150cef588e0b4f2fc5","modified":1676118839517},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1676118839517},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1676118839519},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"47d4726cab5deeedaae2caaa6e761a1194a17713","modified":1676118839517},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"eca4d80dd0df1c3b1bc06bd39e6a4bd6c56198df","modified":1676118839517},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1676118839521},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1676118839520},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1676118839518},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1676118839520},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1676118839520},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1676118839521},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e02b1097a72a7d2ddc45ea8d53aa6d77c25ac407","modified":1676118839525},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1676118839525},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1676118839524},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"555762730f1f31451113e8fdc84ec438ea738d90","modified":1676118839525},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1676118839525},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1676118839525},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1676118839522},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1676118839525},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1676118839524},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"a237c290e8934d1a8cbbf22b3f30503d9663021d","modified":1676118839523},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1676118839522},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1676118839523},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1676118839522},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1676118839523},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1676118839524},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1676118839523},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1676118839523},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1676118839513},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1676118839513},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1676118839523},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1676118839513},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"7213e3d0ad7c95717ecd4e701d6ee9248ef2bf9f","modified":1676118839515},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1676118839515},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1676118839513},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"9b3cce30c58e57b59e45d3f668a71a4129d3a8e4","modified":1676118839515},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1676118839515},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1676118839515},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1676118839515},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1676118839514},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1676118839539},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1676118839539},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1676118839540},{"_id":"themes/next/source/images/avatar.jpg","hash":"82646c418247122062ff10b9b27bbac5dcd06773","modified":1676118839533},{"_id":"public/atom.xml","hash":"c1a72f3ec05cf6bf51096de8ecde8d78b2516414","modified":1676120185095},{"_id":"public/search.xml","hash":"89167d9cac8df7d18171b9ecfd95abcba91cff7d","modified":1676120185095},{"_id":"public/tags/index.html","hash":"8cc6157ae23f341d6720c1d261959354a319e809","modified":1676120185095},{"_id":"public/about/index.html","hash":"af51b2f99652c54c79a2eb34736b96ce1ab1e3b4","modified":1676120185095},{"_id":"public/categories/index.html","hash":"7e2b43a19164bbdd9d60b0a80801940638d04853","modified":1676120185095},{"_id":"public/2023/02/11/metadata/index.html","hash":"da50a334acd584e6e82f31ecf83f394b4aaf90e7","modified":1676120185095},{"_id":"public/categories/Teckknowledge/index.html","hash":"40b9329b44b6bbc69fba621286d2142a897009be","modified":1676120185095},{"_id":"public/archives/index.html","hash":"52810327d8b2db90d9eee62aec25342ed7c3ef00","modified":1676120185095},{"_id":"public/archives/2023/index.html","hash":"974743e147817c95f38512d074d21df781664ce6","modified":1676120185095},{"_id":"public/archives/2023/02/index.html","hash":"a08611628454a85df55a7d32245316b6503ea126","modified":1676120185095},{"_id":"public/tags/ES/index.html","hash":"23f4d3ff92c75b6cda704a6494b8c4d39e35cc9c","modified":1676120185095},{"_id":"public/tags/django/index.html","hash":"85fa32a4b9c26679e666ec287279fa59305e8794","modified":1676120185095},{"_id":"public/tags/metadata/index.html","hash":"d7e287925d7849b535bafa72168405258ccf5e66","modified":1676120185095},{"_id":"public/tags/flask/index.html","hash":"6026591fcda2c9c7e9e8b659e3d1497848ef4ca8","modified":1676120185095},{"_id":"public/2023/02/11/es-suse/index.html","hash":"77b5b68b36078597ed710c8a5b13f8b72150a459","modified":1676120185095},{"_id":"public/2023/02/11/ES/index.html","hash":"7cd4628eb8c1809498eff043a9a36fb94ee7e150","modified":1676120185095},{"_id":"public/2023/02/11/hello-world/index.html","hash":"ac529e022edf14e8e3a86931e1216b33f8a0269b","modified":1676120185095},{"_id":"public/2023/02/11/django/index.html","hash":"2653fe41a4201d1b854bc522303962769ec324b6","modified":1676120185095},{"_id":"public/2023/02/11/flask/index.html","hash":"0a5b2f1116a91e2c59127181a7ebe022ab65e8cf","modified":1676120185095},{"_id":"public/index.html","hash":"aebbb571048346c3b2d536a9af051969c227f44d","modified":1676120185095},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1676120185095},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1676120185095},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1676120185095},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1676120185095},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1676120185095},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1676120185095},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1676120185095},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1676120185095},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1676120185095},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1676120185095},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1676120185095},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1676120185095},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1676120185095},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1676120185095},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1676120185095},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1676120185095},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1676120185095},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1676120185095},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1676120185095},{"_id":"public/js/algolia-search.js","hash":"23cc3c013185eb97ef347c3b4c92d928f2f3398f","modified":1676120185095},{"_id":"public/js/bookmark.js","hash":"a00945ff886e9f6f835731cdaf29a3a3727c8877","modified":1676120185095},{"_id":"public/js/local-search.js","hash":"b42bd1c883ce91db8632d96e0f0e062cb6b73adc","modified":1676120185095},{"_id":"public/js/next-boot.js","hash":"a22eeb6048ddd6b9224c8a671cbcfa303a2f7a1a","modified":1676120185095},{"_id":"public/js/utils.js","hash":"95c5d37aa06521675afcf8619cfc5dbba3d2e18a","modified":1676120185095},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1676120185095},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1676120185095},{"_id":"public/js/schemes/muse.js","hash":"47c4f60eb7f7dc3303e84914b611dc34827069e1","modified":1676120185095},{"_id":"public/js/schemes/pisces.js","hash":"3d9d3c14b77044d66be1898a9a934696e9127c82","modified":1676120185095},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1676120185095},{"_id":"public/css/main.css","hash":"ba739b652fdbdf0a61305f0e1bb01210d267dd85","modified":1676120185095},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1676120185095},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1676120185095},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1676120185095},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1676120185095},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1676120185095},{"_id":"public/images/avatar.jpg","hash":"82646c418247122062ff10b9b27bbac5dcd06773","modified":1676120185095}],"Category":[{"name":"Teckknowledge","_id":"cldzyok750004c6oa4va5dl5q"}],"Data":[],"Page":[{"title":"tags","date":"2023-02-11T04:33:38.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-02-11 12:33:38\ntype: tags\n---\n","updated":"2023-02-11T12:33:59.484Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cldzyok6l0000c6oa10wk73cw","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2023-02-11T04:34:33.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2023-02-11 12:34:33\n---\n","updated":"2023-02-11T12:33:59.482Z","path":"about/index.html","comments":1,"layout":"page","_id":"cldzyok6y0002c6oacwf71c24","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2023-02-11T04:32:51.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2023-02-11 12:32:51\ntype: categories\n---\n","updated":"2023-02-11T12:33:59.487Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cldzyok7a0006c6oag11rd3w8","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"layout":"posts","title":"ES","date":"2023-02-11T12:37:46.000Z","_content":"\nsudo zypper refresh\nsudo zypper update -y\nsudo zypper install yum\n\n\n### Import the Elasticsearch GPG Key\n`sudo rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch`\n\n\n### Install Elasticsearch from the RPM repository\n\ncreate elasticsearch.repo and config the es install repo\n\n`sudo vim /etc/zypp/repos.d/elasticsearch.repo`\n\n\n<!--more-->\n\n```\n[elasticsearch]\nname=Elasticsearch repository for 8.x packages\nbaseurl=https://artifacts.elastic.co/packages/8.x/yum\ngpgcheck=1\ngpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch\nenabled=0\nautorefresh=1\ntype=rpm-md\n\n```\n\ninstall ES\n```\nsudo zypper modifyrepo --enable elasticsearch && \\\n  sudo zypper install elasticsearch; \\\n  sudo zypper modifyrepo --disable elasticsearch \n```\n\ndownload and install RPM \n```\nwget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.5.2-x86_64.rpm\nwget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.5.2-x86_64.rpm.sha512\nshasum -a 512 -c elasticsearch-8.5.2-x86_64.rpm.sha512 \nsudo rpm --install elasticsearch-8.5.2-x86_64.rpm\n```\n\nconfig the es start automatically when system boots up\n```\nES-suse:/etc/zypp/repos.d # sudo /bin/systemctl daemon-reload\nES-suse:/etc/zypp/repos.d # sudo /bin/systemctl enable elasticsearch.service\nCreated symlink /etc/systemd/system/multi-user.target.wants/elasticsearch.service → /usr/lib/systemd/system/elasticsearch.service.\n\n```\n\n\ncheck the ES\n```\nES-suse:/etc/zypp/repos.d # rpm -qi elasticsearch\nName        : elasticsearch\nEpoch       : 0\nVersion     : 7.17.7\nRelease     : 1\nArchitecture: x86_64\nInstall Date: Sun Dec  4 21:37:47 2022\nGroup       : Application/Internet\nSize        : 525810397\nLicense     : Elastic License\nSignature   : RSA/SHA512, Mon Oct 17 14:57:09 2022, Key ID d27d666cd88e42b4\nSource RPM  : elasticsearch-7.17.7-1-src.rpm\nBuild Date  : Mon Oct 17 11:35:59 2022\nBuild Host  : packer-virtualbox-iso-1646848364\nRelocations : /usr\nPackager    : Elasticsearch\nVendor      : Elasticsearch\nURL         : https://www.elastic.co/\nSummary     : Distributed RESTful search engine built for the cloud\nDescription :\nReference documentation can be found at\n  https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html\n  and the 'Elasticsearch: The Definitive Guide' book can be found at\n  https://www.elastic.co/guide/en/elasticsearch/guide/current/index.html\nDistribution: Elasticsearch\n\n```\n\nstart es server\n\n```\nES-suse:/etc/zypp/repos.d # sudo systemctl start elasticsearch\nES-suse:/etc/zypp/repos.d # sudo systemctl status elasticsearch\n● elasticsearch.service - Elasticsearch\n     Loaded: loaded (/usr/lib/systemd/system/elasticsearch.service; disabled; vendor preset: disabled)\n     Active: active (running) since Sun 2022-12-04 21:39:35 EST; 21s ago\n       Docs: https://www.elastic.co\n   Main PID: 8555 (java)\n      Tasks: 97 (limit: 4915)\n     CGroup: /system.slice/elasticsearch.service\n             ├─ 8555 /usr/share/elasticsearch/jdk/bin/java -Xshare:auto -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+Always>\n             └─ 8767 /usr/share/elasticsearch/modules/x-pack-ml/platform/linux-x86_64/bin/controller\n\nDec 04 21:39:17 ES-suse systemd[1]: Starting Elasticsearch...\nDec 04 21:39:35 ES-suse systemd[1]: Started Elasticsearch.\n\n```\n\nrelated log:\n` vi /var/log/elasticsearch/elasticsearch.log`\n\n\ndatapath\n`/var/lib/elasticsearch`\n\nTo list journal entries for the elasticsearch service:\n\n`sudo journalctl --unit elasticsearch`\n\n\nverify es installation\n1. `ss -antpl | grep 9200`\n2. `curl -X GET \"localhost:9200/\"`\n\n```\nES-suse:/etc/zypp/repos.d # ss -antpl | grep 9200\nLISTEN 0      4096   [::ffff:127.0.0.1]:9200             *:*    users:((\"java\",pid=8555,fd=305))\nLISTEN 0      4096                [::1]:9200          [::]:*    users:((\"java\",pid=8555,fd=304))\nES-suse:/etc/zypp/repos.d # curl -X GET \"localhost:9200/\"\n{\n  \"name\" : \"ES-suse\",\n  \"cluster_name\" : \"elasticsearch\",\n  \"cluster_uuid\" : \"0zL15OxVTY6SrXO2aQ6qGQ\",\n  \"version\" : {\n    \"number\" : \"7.17.7\",\n    \"build_flavor\" : \"default\",\n    \"build_type\" : \"rpm\",\n    \"build_hash\" : \"78dcaaa8cee33438b91eca7f5c7f56a70fec9e80\",\n    \"build_date\" : \"2022-10-17T15:29:54.167373105Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"8.11.1\",\n    \"minimum_wire_compatibility_version\" : \"6.8.0\",\n    \"minimum_index_compatibility_version\" : \"6.0.0-beta1\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\n\n```\n\ninput one data:\n```\n curl -H 'Content-Type: application/json' -X POST 'http://localhost:9200/todo/task/1' -d '{ \"name\": \"Go to the mall.\" }'\n```\nand read it again:\n```\nES-suse:/etc/zypp/repos.d # curl -X GET 'http://localhost:9200/todo/task/1?pretty'\n{\n  \"_index\" : \"todo\",\n  \"_type\" : \"task\",\n  \"_id\" : \"1\",\n  \"_version\" : 1,\n  \"_seq_no\" : 0,\n  \"_primary_term\" : 1,\n  \"found\" : true,\n  \"_source\" : {\n    \"name\" : \"Go to the mall.\"\n  }\n}\n\n```\n\n\n\n\n\n\n\n\n\n\n curl -XGET 'http://localhost:9200/_nodes/stats?pretty' | grep thread\n```\n}ES-suse:/etc/zypp/repos.d #  curl -XGET 'http://localhost:9200/_nodes/stats?pretty' | grep thread\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 39463  100 39463    0     0  1144k      0 --:--:-- --:--:--        \"threads\" : {\n --:--:--      \"thread_pool\" : {\n 1          \"threads\" : 0,\n16          \"threads\" : 0,\n7          \"threads\" : 0,\nk          \"threads\" : 0,\n\n          \"threads\" : 0,\n          \"threads\" : 1,\n          \"threads\" : 0,\n          \"threads\" : 11,\n          \"threads\" : 2,\n          \"threads\" : 0,\n          \"threads\" : 2,\n          \"threads\" : 0,\n          \"threads\" : 0,\n          \"threads\" : 1,\n          \"threads\" : 3,\n          \"threads\" : 0,\n          \"threads\" : 0,\n          \"threads\" : 0,\n\n```\n\n\n\n```\n\nES-suse:/etc # ll /usr/share/elasticsearch/bin\ntotal 3028\n-rwxr-xr-x 1 root root     101 Nov 17 14:04 elasticsearch\n-rwxr-xr-x 1 root root     376 Nov 17 13:59 elasticsearch-certgen\n-rwxr-xr-x 1 root root     376 Nov 17 13:59 elasticsearch-certutil\n-rwxr-xr-x 1 root root     674 Nov 17 14:04 elasticsearch-cli\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-create-enrollment-token\n-rwxr-xr-x 1 root root     352 Nov 17 13:59 elasticsearch-croneval\n-rwxr-xr-x 1 root root    2340 Nov 17 14:04 elasticsearch-env\n-rwxr-xr-x 1 root root    2595 Nov 17 14:04 elasticsearch-env-from-file\n-rwxr-xr-x 1 root root      84 Nov 17 14:04 elasticsearch-geoip\n-rwxr-xr-x 1 root root      87 Nov 17 14:04 elasticsearch-keystore\n-rwxr-xr-x 1 root root      55 Nov 17 14:04 elasticsearch-node\n-rwxr-xr-x 1 root root     172 Nov 17 14:04 elasticsearch-plugin\n-rwxr-xr-x 1 root root     376 Nov 17 13:59 elasticsearch-reconfigure-node\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-reset-password\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-saml-metadata\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-service-tokens\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-setup-passwords\n-rwxr-xr-x 1 root root      55 Nov 17 14:04 elasticsearch-shard\n-rwxr-xr-x 1 root root     403 Nov 17 13:59 elasticsearch-sql-cli\n-rwxr-xr-x 1 root root 3008975 Nov 17 13:59 elasticsearch-sql-cli-8.5.2.jar\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-syskeygen\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-users\n-rwxr-xr-x 1 root root     332 Nov 17 14:01 systemd-entrypoint\n\n```\n\n\n\n\n\n### health check\n```\ncurl 'localhost:9200/_cat/health?v'\n```\n\n### nodes list\n```\ncurl 'localhost:9200/_cat/nodes?v'\n```\n\n### index list\n```\ncurl 'localhost:9200/_cat/indices?v'\n```\n\n### search detail data using index\n\n`curl -X GET http://localhost:9200/je_index_1663720218/`\n\n```\nroot@powerload-es-2:~ # curl -X GET http://localhost:9200/je_index_1663720218/_search?pretty\n{\n  \"took\" : 7,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 0,\n    \"max_score\" : null,\n    \"hits\" : [ ]\n  }\n}\n```\n\n# 查看集群全部节点的指标\n$ curl \"localhost:9200/_nodes/stats\"\n\n\n\n\n\n\n\n--------------------------------------------------------------------------\n\nIssue1\n\n```\nES-suse:/etc/zypp/repos.d # sudo systemctl enable elasticsearch\nSynchronizing state of elasticsearch.service with SysV service script with /usr/lib/systemd/systemd-sysv-install.\nExecuting: /usr/lib/systemd/systemd-sysv-install enable elasticsearch\nln -sf ../elasticsearch /etc/init.d/rc2.d/S50elasticsearch\nln: failed to create symbolic link '/etc/init.d/rc2.d/S50elasticsearch': No such file or directory\n```\n\nIt seems that this product is not from the standard openSUSE OSS repo.\n\nIt tries to use /etc/init.d/rc2.d which directory belongs to the old SystemV ways of doing (as the message also says). but in openSUSE that directory is no longer in use and most probably not available anymore.\n\n\nIssue2: refused了\n\nroot@ldm-controller-01:/usr/local/stress_test/Island_TPPC # curl -X GET \"http://10.219.61.175:9200/_cat/indices?v\"\ncurl: (7) Failed connect to 10.219.61.175:9200; Connection refused\n\n\n---------------------------------------Dry run es-opensuse on powerload------------------------\nConfig ES-suse to powerload json file\n\n```\nroot@ldm-controller-01:/usr/local/stress_test/Island_TPPC # nslookup ES-suse.west.isilon.com\nServer:         10.231.252.14\nAddress:        10.231.252.14#53\n\nNon-authoritative answer:\nName:   ES-suse.west.isilon.com\nAddress: 10.219.61.175\n```\n\n![](vx_images/65815239672.png =800x)\n\n\n### cat methods\n\n`curl http://localhost:9200/_cat`\n\nES-suse:/var/lib/elasticsearch #  curl http://localhost:9200/_cat\n=^.^=\n/_cat/allocation\n/_cat/shards\n/_cat/shards/{index}\n/_cat/master\n/_cat/nodes\n/_cat/tasks\n/_cat/indices\n/_cat/indices/{index}\n/_cat/segments\n/_cat/segments/{index}\n/_cat/count\n/_cat/count/{index}\n/_cat/recovery\n/_cat/recovery/{index}\n/_cat/health\n/_cat/pending_tasks\n/_cat/aliases\n/_cat/aliases/{alias}\n/_cat/thread_pool\n/_cat/thread_pool/{thread_pools}\n/_cat/plugins\n/_cat/fielddata\n/_cat/fielddata/{fields}\n/_cat/nodeattrs\n/_cat/repositories\n/_cat/snapshots/{repository}\n/_cat/templates\n/_cat/ml/anomaly_detectors\n/_cat/ml/anomaly_detectors/{job_id}\n/_cat/ml/trained_models\n/_cat/ml/trained_models/{model_id}\n/_cat/ml/datafeeds\n/_cat/ml/datafeeds/{datafeed_id}\n/_cat/ml/data_frame/analytics\n/_cat/ml/data_frame/analytics/{id}\n/_cat/transforms\n/_cat/transforms/{transform_id}\n\n\n\nhttps://juejin.cn/post/7145773678649671694\n\ncurl localhost:9200/_cat/nodes?help\n# 指定查看每个节点的堆内存使用率，段数量和合并数量\n$ curl \"http://localhost:9200/_cat/nodes?h=http,heapPercent,segmentsCount,mergesTotal\"\n172.16.71.231:9200 56 99 108182\n172.16.71.229:9200 31 95 122551\n172.16.71.232:9200 50 66  73871\n172.16.71.230:9200 41 63  76470\n172.16.71.234:9200 32 64  93256\n172.16.71.233:9200 14 90 136450\n\n\n当集群为red或者yellow的时候怎么办\n集群为RED表示集群中有primary shard没有分配，yellow表示有replica没有分配\n\nroot@powerload-es-2:/var/lib/elasticsearch/nodes # curl -X GET \"http://localhost:9200/_cluster/allocation/explain?pretty\"\n{\n  \"index\" : \"je_index_1664986024\",\n  \"shard\" : 3,\n  \"primary\" : false,\n  \"current_state\" : \"unassigned\",\n  \"unassigned_info\" : {\n    \"reason\" : \"CLUSTER_RECOVERED\",\n    \"at\" : \"2022-12-05T02:18:25.712Z\",\n    \"last_allocation_status\" : \"no_attempt\"\n  },\n  \"can_allocate\" : \"no\",\n  \"allocate_explanation\" : \"cannot allocate because allocation is not permitted to any of the nodes\",\n  \"node_allocation_decisions\" : [\n    {\n      \"node_id\" : \"R2DFntg7RLiwYsEN4mwYuw\",\n      \"node_name\" : \"R2DFntg\",\n      \"transport_address\" : \"10.219.61.247:9300\",\n      \"node_attributes\" : {\n        \"ml.machine_memory\" : \"16656269312\",\n        \"xpack.installed\" : \"true\",\n        \"ml.max_open_jobs\" : \"20\",\n        \"ml.enabled\" : \"true\"\n      },\n      \"node_decision\" : \"no\",\n      \"deciders\" : [\n        {\n          \"decider\" : \"same_shard\",\n          \"decision\" : \"NO\",\n          \"explanation\" : \"the shard cannot be allocated to the same node on which a copy of the shard already exists [[je_index_1664986024][3], node[R2DFntg7RLiwYsEN4mwYuw], [P], s[STARTED], a[id=488Lf_8lTI2raran4YNWoQ]]\"\n        }\n      ]\n    }\n  ]\n}\n\n\n分片长时间处于未分配状态 ES内部会对一个unassigned 分片尝试5次进行分配,失败后不再尝试进行分配，这时候需要调用进行手动控制集群处理 unassigned 分片：\n\n\n\n\n\n\n\n```\nBefore starting Elasticsearch for the first time\nSet xpack.security.enabled: false and then start Elasticsearch\n\nAfter you have started Elasticsearch for the first time\nYou have two options here\n\nSet\n\nxpack.security.enabled: false\nxpack.security.transport.ssl.enabled: false\nxpack.security.http.ssl.enabled: false\nand then start Elasticsearch.\n\nRun\n\nbin/elasticsearch-keystore remove xpack.security.transport.ssl.keystore.secure_password\nbin/elasticsearch-keystore remove xpack.security.transport.ssl.truststore.secure_password\nbin/elasticsearch-keystore remove xpack.security.http.ssl.keystore.secure_password\nSet\n\nxpack.security.enabled: false\n```\n\n\n### change timezone\n\nstep1: vi /etc/sysconfig/clock\n```\nDEFAULT_TIMEZONE=\"Etc/GMT\"\nZONE=\"Etc/GMT\"\n~\n```  \nstep2: zic -l Etc/GMT\nstep3: date\n\n```\nES-suse:/var/log/elasticsearch # date\nTue Dec  6 03:46:47 EST 2022\nES-suse:/var/log/elasticsearch # vi /etc/sysconfig/clock\nES-suse:/var/log/elasticsearch # zic -l Etc/GMT\nES-suse:/var/log/elasticsearch # date\nTue Dec  6 08:55:46 GMT 2022\n\n```\n\n\n","source":"_posts/ES.md","raw":"---\nlayout: posts\ntitle: ES\ndate: 2023-02-11 20:37:46\ntags: ES\ncategories: Teckknowledge\n---\n\nsudo zypper refresh\nsudo zypper update -y\nsudo zypper install yum\n\n\n### Import the Elasticsearch GPG Key\n`sudo rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch`\n\n\n### Install Elasticsearch from the RPM repository\n\ncreate elasticsearch.repo and config the es install repo\n\n`sudo vim /etc/zypp/repos.d/elasticsearch.repo`\n\n\n<!--more-->\n\n```\n[elasticsearch]\nname=Elasticsearch repository for 8.x packages\nbaseurl=https://artifacts.elastic.co/packages/8.x/yum\ngpgcheck=1\ngpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch\nenabled=0\nautorefresh=1\ntype=rpm-md\n\n```\n\ninstall ES\n```\nsudo zypper modifyrepo --enable elasticsearch && \\\n  sudo zypper install elasticsearch; \\\n  sudo zypper modifyrepo --disable elasticsearch \n```\n\ndownload and install RPM \n```\nwget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.5.2-x86_64.rpm\nwget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.5.2-x86_64.rpm.sha512\nshasum -a 512 -c elasticsearch-8.5.2-x86_64.rpm.sha512 \nsudo rpm --install elasticsearch-8.5.2-x86_64.rpm\n```\n\nconfig the es start automatically when system boots up\n```\nES-suse:/etc/zypp/repos.d # sudo /bin/systemctl daemon-reload\nES-suse:/etc/zypp/repos.d # sudo /bin/systemctl enable elasticsearch.service\nCreated symlink /etc/systemd/system/multi-user.target.wants/elasticsearch.service → /usr/lib/systemd/system/elasticsearch.service.\n\n```\n\n\ncheck the ES\n```\nES-suse:/etc/zypp/repos.d # rpm -qi elasticsearch\nName        : elasticsearch\nEpoch       : 0\nVersion     : 7.17.7\nRelease     : 1\nArchitecture: x86_64\nInstall Date: Sun Dec  4 21:37:47 2022\nGroup       : Application/Internet\nSize        : 525810397\nLicense     : Elastic License\nSignature   : RSA/SHA512, Mon Oct 17 14:57:09 2022, Key ID d27d666cd88e42b4\nSource RPM  : elasticsearch-7.17.7-1-src.rpm\nBuild Date  : Mon Oct 17 11:35:59 2022\nBuild Host  : packer-virtualbox-iso-1646848364\nRelocations : /usr\nPackager    : Elasticsearch\nVendor      : Elasticsearch\nURL         : https://www.elastic.co/\nSummary     : Distributed RESTful search engine built for the cloud\nDescription :\nReference documentation can be found at\n  https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html\n  and the 'Elasticsearch: The Definitive Guide' book can be found at\n  https://www.elastic.co/guide/en/elasticsearch/guide/current/index.html\nDistribution: Elasticsearch\n\n```\n\nstart es server\n\n```\nES-suse:/etc/zypp/repos.d # sudo systemctl start elasticsearch\nES-suse:/etc/zypp/repos.d # sudo systemctl status elasticsearch\n● elasticsearch.service - Elasticsearch\n     Loaded: loaded (/usr/lib/systemd/system/elasticsearch.service; disabled; vendor preset: disabled)\n     Active: active (running) since Sun 2022-12-04 21:39:35 EST; 21s ago\n       Docs: https://www.elastic.co\n   Main PID: 8555 (java)\n      Tasks: 97 (limit: 4915)\n     CGroup: /system.slice/elasticsearch.service\n             ├─ 8555 /usr/share/elasticsearch/jdk/bin/java -Xshare:auto -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+Always>\n             └─ 8767 /usr/share/elasticsearch/modules/x-pack-ml/platform/linux-x86_64/bin/controller\n\nDec 04 21:39:17 ES-suse systemd[1]: Starting Elasticsearch...\nDec 04 21:39:35 ES-suse systemd[1]: Started Elasticsearch.\n\n```\n\nrelated log:\n` vi /var/log/elasticsearch/elasticsearch.log`\n\n\ndatapath\n`/var/lib/elasticsearch`\n\nTo list journal entries for the elasticsearch service:\n\n`sudo journalctl --unit elasticsearch`\n\n\nverify es installation\n1. `ss -antpl | grep 9200`\n2. `curl -X GET \"localhost:9200/\"`\n\n```\nES-suse:/etc/zypp/repos.d # ss -antpl | grep 9200\nLISTEN 0      4096   [::ffff:127.0.0.1]:9200             *:*    users:((\"java\",pid=8555,fd=305))\nLISTEN 0      4096                [::1]:9200          [::]:*    users:((\"java\",pid=8555,fd=304))\nES-suse:/etc/zypp/repos.d # curl -X GET \"localhost:9200/\"\n{\n  \"name\" : \"ES-suse\",\n  \"cluster_name\" : \"elasticsearch\",\n  \"cluster_uuid\" : \"0zL15OxVTY6SrXO2aQ6qGQ\",\n  \"version\" : {\n    \"number\" : \"7.17.7\",\n    \"build_flavor\" : \"default\",\n    \"build_type\" : \"rpm\",\n    \"build_hash\" : \"78dcaaa8cee33438b91eca7f5c7f56a70fec9e80\",\n    \"build_date\" : \"2022-10-17T15:29:54.167373105Z\",\n    \"build_snapshot\" : false,\n    \"lucene_version\" : \"8.11.1\",\n    \"minimum_wire_compatibility_version\" : \"6.8.0\",\n    \"minimum_index_compatibility_version\" : \"6.0.0-beta1\"\n  },\n  \"tagline\" : \"You Know, for Search\"\n}\n\n```\n\ninput one data:\n```\n curl -H 'Content-Type: application/json' -X POST 'http://localhost:9200/todo/task/1' -d '{ \"name\": \"Go to the mall.\" }'\n```\nand read it again:\n```\nES-suse:/etc/zypp/repos.d # curl -X GET 'http://localhost:9200/todo/task/1?pretty'\n{\n  \"_index\" : \"todo\",\n  \"_type\" : \"task\",\n  \"_id\" : \"1\",\n  \"_version\" : 1,\n  \"_seq_no\" : 0,\n  \"_primary_term\" : 1,\n  \"found\" : true,\n  \"_source\" : {\n    \"name\" : \"Go to the mall.\"\n  }\n}\n\n```\n\n\n\n\n\n\n\n\n\n\n curl -XGET 'http://localhost:9200/_nodes/stats?pretty' | grep thread\n```\n}ES-suse:/etc/zypp/repos.d #  curl -XGET 'http://localhost:9200/_nodes/stats?pretty' | grep thread\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100 39463  100 39463    0     0  1144k      0 --:--:-- --:--:--        \"threads\" : {\n --:--:--      \"thread_pool\" : {\n 1          \"threads\" : 0,\n16          \"threads\" : 0,\n7          \"threads\" : 0,\nk          \"threads\" : 0,\n\n          \"threads\" : 0,\n          \"threads\" : 1,\n          \"threads\" : 0,\n          \"threads\" : 11,\n          \"threads\" : 2,\n          \"threads\" : 0,\n          \"threads\" : 2,\n          \"threads\" : 0,\n          \"threads\" : 0,\n          \"threads\" : 1,\n          \"threads\" : 3,\n          \"threads\" : 0,\n          \"threads\" : 0,\n          \"threads\" : 0,\n\n```\n\n\n\n```\n\nES-suse:/etc # ll /usr/share/elasticsearch/bin\ntotal 3028\n-rwxr-xr-x 1 root root     101 Nov 17 14:04 elasticsearch\n-rwxr-xr-x 1 root root     376 Nov 17 13:59 elasticsearch-certgen\n-rwxr-xr-x 1 root root     376 Nov 17 13:59 elasticsearch-certutil\n-rwxr-xr-x 1 root root     674 Nov 17 14:04 elasticsearch-cli\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-create-enrollment-token\n-rwxr-xr-x 1 root root     352 Nov 17 13:59 elasticsearch-croneval\n-rwxr-xr-x 1 root root    2340 Nov 17 14:04 elasticsearch-env\n-rwxr-xr-x 1 root root    2595 Nov 17 14:04 elasticsearch-env-from-file\n-rwxr-xr-x 1 root root      84 Nov 17 14:04 elasticsearch-geoip\n-rwxr-xr-x 1 root root      87 Nov 17 14:04 elasticsearch-keystore\n-rwxr-xr-x 1 root root      55 Nov 17 14:04 elasticsearch-node\n-rwxr-xr-x 1 root root     172 Nov 17 14:04 elasticsearch-plugin\n-rwxr-xr-x 1 root root     376 Nov 17 13:59 elasticsearch-reconfigure-node\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-reset-password\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-saml-metadata\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-service-tokens\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-setup-passwords\n-rwxr-xr-x 1 root root      55 Nov 17 14:04 elasticsearch-shard\n-rwxr-xr-x 1 root root     403 Nov 17 13:59 elasticsearch-sql-cli\n-rwxr-xr-x 1 root root 3008975 Nov 17 13:59 elasticsearch-sql-cli-8.5.2.jar\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-syskeygen\n-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-users\n-rwxr-xr-x 1 root root     332 Nov 17 14:01 systemd-entrypoint\n\n```\n\n\n\n\n\n### health check\n```\ncurl 'localhost:9200/_cat/health?v'\n```\n\n### nodes list\n```\ncurl 'localhost:9200/_cat/nodes?v'\n```\n\n### index list\n```\ncurl 'localhost:9200/_cat/indices?v'\n```\n\n### search detail data using index\n\n`curl -X GET http://localhost:9200/je_index_1663720218/`\n\n```\nroot@powerload-es-2:~ # curl -X GET http://localhost:9200/je_index_1663720218/_search?pretty\n{\n  \"took\" : 7,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 0,\n    \"max_score\" : null,\n    \"hits\" : [ ]\n  }\n}\n```\n\n# 查看集群全部节点的指标\n$ curl \"localhost:9200/_nodes/stats\"\n\n\n\n\n\n\n\n--------------------------------------------------------------------------\n\nIssue1\n\n```\nES-suse:/etc/zypp/repos.d # sudo systemctl enable elasticsearch\nSynchronizing state of elasticsearch.service with SysV service script with /usr/lib/systemd/systemd-sysv-install.\nExecuting: /usr/lib/systemd/systemd-sysv-install enable elasticsearch\nln -sf ../elasticsearch /etc/init.d/rc2.d/S50elasticsearch\nln: failed to create symbolic link '/etc/init.d/rc2.d/S50elasticsearch': No such file or directory\n```\n\nIt seems that this product is not from the standard openSUSE OSS repo.\n\nIt tries to use /etc/init.d/rc2.d which directory belongs to the old SystemV ways of doing (as the message also says). but in openSUSE that directory is no longer in use and most probably not available anymore.\n\n\nIssue2: refused了\n\nroot@ldm-controller-01:/usr/local/stress_test/Island_TPPC # curl -X GET \"http://10.219.61.175:9200/_cat/indices?v\"\ncurl: (7) Failed connect to 10.219.61.175:9200; Connection refused\n\n\n---------------------------------------Dry run es-opensuse on powerload------------------------\nConfig ES-suse to powerload json file\n\n```\nroot@ldm-controller-01:/usr/local/stress_test/Island_TPPC # nslookup ES-suse.west.isilon.com\nServer:         10.231.252.14\nAddress:        10.231.252.14#53\n\nNon-authoritative answer:\nName:   ES-suse.west.isilon.com\nAddress: 10.219.61.175\n```\n\n![](vx_images/65815239672.png =800x)\n\n\n### cat methods\n\n`curl http://localhost:9200/_cat`\n\nES-suse:/var/lib/elasticsearch #  curl http://localhost:9200/_cat\n=^.^=\n/_cat/allocation\n/_cat/shards\n/_cat/shards/{index}\n/_cat/master\n/_cat/nodes\n/_cat/tasks\n/_cat/indices\n/_cat/indices/{index}\n/_cat/segments\n/_cat/segments/{index}\n/_cat/count\n/_cat/count/{index}\n/_cat/recovery\n/_cat/recovery/{index}\n/_cat/health\n/_cat/pending_tasks\n/_cat/aliases\n/_cat/aliases/{alias}\n/_cat/thread_pool\n/_cat/thread_pool/{thread_pools}\n/_cat/plugins\n/_cat/fielddata\n/_cat/fielddata/{fields}\n/_cat/nodeattrs\n/_cat/repositories\n/_cat/snapshots/{repository}\n/_cat/templates\n/_cat/ml/anomaly_detectors\n/_cat/ml/anomaly_detectors/{job_id}\n/_cat/ml/trained_models\n/_cat/ml/trained_models/{model_id}\n/_cat/ml/datafeeds\n/_cat/ml/datafeeds/{datafeed_id}\n/_cat/ml/data_frame/analytics\n/_cat/ml/data_frame/analytics/{id}\n/_cat/transforms\n/_cat/transforms/{transform_id}\n\n\n\nhttps://juejin.cn/post/7145773678649671694\n\ncurl localhost:9200/_cat/nodes?help\n# 指定查看每个节点的堆内存使用率，段数量和合并数量\n$ curl \"http://localhost:9200/_cat/nodes?h=http,heapPercent,segmentsCount,mergesTotal\"\n172.16.71.231:9200 56 99 108182\n172.16.71.229:9200 31 95 122551\n172.16.71.232:9200 50 66  73871\n172.16.71.230:9200 41 63  76470\n172.16.71.234:9200 32 64  93256\n172.16.71.233:9200 14 90 136450\n\n\n当集群为red或者yellow的时候怎么办\n集群为RED表示集群中有primary shard没有分配，yellow表示有replica没有分配\n\nroot@powerload-es-2:/var/lib/elasticsearch/nodes # curl -X GET \"http://localhost:9200/_cluster/allocation/explain?pretty\"\n{\n  \"index\" : \"je_index_1664986024\",\n  \"shard\" : 3,\n  \"primary\" : false,\n  \"current_state\" : \"unassigned\",\n  \"unassigned_info\" : {\n    \"reason\" : \"CLUSTER_RECOVERED\",\n    \"at\" : \"2022-12-05T02:18:25.712Z\",\n    \"last_allocation_status\" : \"no_attempt\"\n  },\n  \"can_allocate\" : \"no\",\n  \"allocate_explanation\" : \"cannot allocate because allocation is not permitted to any of the nodes\",\n  \"node_allocation_decisions\" : [\n    {\n      \"node_id\" : \"R2DFntg7RLiwYsEN4mwYuw\",\n      \"node_name\" : \"R2DFntg\",\n      \"transport_address\" : \"10.219.61.247:9300\",\n      \"node_attributes\" : {\n        \"ml.machine_memory\" : \"16656269312\",\n        \"xpack.installed\" : \"true\",\n        \"ml.max_open_jobs\" : \"20\",\n        \"ml.enabled\" : \"true\"\n      },\n      \"node_decision\" : \"no\",\n      \"deciders\" : [\n        {\n          \"decider\" : \"same_shard\",\n          \"decision\" : \"NO\",\n          \"explanation\" : \"the shard cannot be allocated to the same node on which a copy of the shard already exists [[je_index_1664986024][3], node[R2DFntg7RLiwYsEN4mwYuw], [P], s[STARTED], a[id=488Lf_8lTI2raran4YNWoQ]]\"\n        }\n      ]\n    }\n  ]\n}\n\n\n分片长时间处于未分配状态 ES内部会对一个unassigned 分片尝试5次进行分配,失败后不再尝试进行分配，这时候需要调用进行手动控制集群处理 unassigned 分片：\n\n\n\n\n\n\n\n```\nBefore starting Elasticsearch for the first time\nSet xpack.security.enabled: false and then start Elasticsearch\n\nAfter you have started Elasticsearch for the first time\nYou have two options here\n\nSet\n\nxpack.security.enabled: false\nxpack.security.transport.ssl.enabled: false\nxpack.security.http.ssl.enabled: false\nand then start Elasticsearch.\n\nRun\n\nbin/elasticsearch-keystore remove xpack.security.transport.ssl.keystore.secure_password\nbin/elasticsearch-keystore remove xpack.security.transport.ssl.truststore.secure_password\nbin/elasticsearch-keystore remove xpack.security.http.ssl.keystore.secure_password\nSet\n\nxpack.security.enabled: false\n```\n\n\n### change timezone\n\nstep1: vi /etc/sysconfig/clock\n```\nDEFAULT_TIMEZONE=\"Etc/GMT\"\nZONE=\"Etc/GMT\"\n~\n```  \nstep2: zic -l Etc/GMT\nstep3: date\n\n```\nES-suse:/var/log/elasticsearch # date\nTue Dec  6 03:46:47 EST 2022\nES-suse:/var/log/elasticsearch # vi /etc/sysconfig/clock\nES-suse:/var/log/elasticsearch # zic -l Etc/GMT\nES-suse:/var/log/elasticsearch # date\nTue Dec  6 08:55:46 GMT 2022\n\n```\n\n\n","slug":"ES","published":1,"updated":"2023-02-11T12:46:43.100Z","comments":1,"photos":[],"link":"","_id":"cldzyok6r0001c6oac8ua0i6t","content":"<p>sudo zypper refresh<br>sudo zypper update -y<br>sudo zypper install yum</p>\n<h3 id=\"Import-the-Elasticsearch-GPG-Key\"><a href=\"#Import-the-Elasticsearch-GPG-Key\" class=\"headerlink\" title=\"Import the Elasticsearch GPG Key\"></a>Import the Elasticsearch GPG Key</h3><p><code>sudo rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch</code></p>\n<h3 id=\"Install-Elasticsearch-from-the-RPM-repository\"><a href=\"#Install-Elasticsearch-from-the-RPM-repository\" class=\"headerlink\" title=\"Install Elasticsearch from the RPM repository\"></a>Install Elasticsearch from the RPM repository</h3><p>create elasticsearch.repo and config the es install repo</p>\n<p><code>sudo vim /etc/zypp/repos.d/elasticsearch.repo</code></p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[elasticsearch]</span><br><span class=\"line\">name=Elasticsearch repository for 8.x packages</span><br><span class=\"line\">baseurl=https://artifacts.elastic.co/packages/8.x/yum</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">autorefresh=1</span><br><span class=\"line\">type=rpm-md</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>install ES</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo zypper modifyrepo --enable elasticsearch &amp;&amp; \\</span><br><span class=\"line\">  sudo zypper install elasticsearch; \\</span><br><span class=\"line\">  sudo zypper modifyrepo --disable elasticsearch </span><br></pre></td></tr></table></figure>\n\n<p>download and install RPM </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.5.2-x86_64.rpm</span><br><span class=\"line\">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.5.2-x86_64.rpm.sha512</span><br><span class=\"line\">shasum -a 512 -c elasticsearch-8.5.2-x86_64.rpm.sha512 </span><br><span class=\"line\">sudo rpm --install elasticsearch-8.5.2-x86_64.rpm</span><br></pre></td></tr></table></figure>\n\n<p>config the es start automatically when system boots up</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES-suse:/etc/zypp/repos.d # sudo /bin/systemctl daemon-reload</span><br><span class=\"line\">ES-suse:/etc/zypp/repos.d # sudo /bin/systemctl enable elasticsearch.service</span><br><span class=\"line\">Created symlink /etc/systemd/system/multi-user.target.wants/elasticsearch.service → /usr/lib/systemd/system/elasticsearch.service.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>check the ES</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES-suse:/etc/zypp/repos.d # rpm -qi elasticsearch</span><br><span class=\"line\">Name        : elasticsearch</span><br><span class=\"line\">Epoch       : 0</span><br><span class=\"line\">Version     : 7.17.7</span><br><span class=\"line\">Release     : 1</span><br><span class=\"line\">Architecture: x86_64</span><br><span class=\"line\">Install Date: Sun Dec  4 21:37:47 2022</span><br><span class=\"line\">Group       : Application/Internet</span><br><span class=\"line\">Size        : 525810397</span><br><span class=\"line\">License     : Elastic License</span><br><span class=\"line\">Signature   : RSA/SHA512, Mon Oct 17 14:57:09 2022, Key ID d27d666cd88e42b4</span><br><span class=\"line\">Source RPM  : elasticsearch-7.17.7-1-src.rpm</span><br><span class=\"line\">Build Date  : Mon Oct 17 11:35:59 2022</span><br><span class=\"line\">Build Host  : packer-virtualbox-iso-1646848364</span><br><span class=\"line\">Relocations : /usr</span><br><span class=\"line\">Packager    : Elasticsearch</span><br><span class=\"line\">Vendor      : Elasticsearch</span><br><span class=\"line\">URL         : https://www.elastic.co/</span><br><span class=\"line\">Summary     : Distributed RESTful search engine built for the cloud</span><br><span class=\"line\">Description :</span><br><span class=\"line\">Reference documentation can be found at</span><br><span class=\"line\">  https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html</span><br><span class=\"line\">  and the &#x27;Elasticsearch: The Definitive Guide&#x27; book can be found at</span><br><span class=\"line\">  https://www.elastic.co/guide/en/elasticsearch/guide/current/index.html</span><br><span class=\"line\">Distribution: Elasticsearch</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>start es server</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES-suse:/etc/zypp/repos.d # sudo systemctl start elasticsearch</span><br><span class=\"line\">ES-suse:/etc/zypp/repos.d # sudo systemctl status elasticsearch</span><br><span class=\"line\">● elasticsearch.service - Elasticsearch</span><br><span class=\"line\">     Loaded: loaded (/usr/lib/systemd/system/elasticsearch.service; disabled; vendor preset: disabled)</span><br><span class=\"line\">     Active: active (running) since Sun 2022-12-04 21:39:35 EST; 21s ago</span><br><span class=\"line\">       Docs: https://www.elastic.co</span><br><span class=\"line\">   Main PID: 8555 (java)</span><br><span class=\"line\">      Tasks: 97 (limit: 4915)</span><br><span class=\"line\">     CGroup: /system.slice/elasticsearch.service</span><br><span class=\"line\">             ├─ 8555 /usr/share/elasticsearch/jdk/bin/java -Xshare:auto -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+Always&gt;</span><br><span class=\"line\">             └─ 8767 /usr/share/elasticsearch/modules/x-pack-ml/platform/linux-x86_64/bin/controller</span><br><span class=\"line\"></span><br><span class=\"line\">Dec 04 21:39:17 ES-suse systemd[1]: Starting Elasticsearch...</span><br><span class=\"line\">Dec 04 21:39:35 ES-suse systemd[1]: Started Elasticsearch.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>related log:<br><code> vi /var/log/elasticsearch/elasticsearch.log</code></p>\n<p>datapath<br><code>/var/lib/elasticsearch</code></p>\n<p>To list journal entries for the elasticsearch service:</p>\n<p><code>sudo journalctl --unit elasticsearch</code></p>\n<p>verify es installation</p>\n<ol>\n<li><code>ss -antpl | grep 9200</code></li>\n<li><code>curl -X GET &quot;localhost:9200/&quot;</code></li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES-suse:/etc/zypp/repos.d # ss -antpl | grep 9200</span><br><span class=\"line\">LISTEN 0      4096   [::ffff:127.0.0.1]:9200             *:*    users:((&quot;java&quot;,pid=8555,fd=305))</span><br><span class=\"line\">LISTEN 0      4096                [::1]:9200          [::]:*    users:((&quot;java&quot;,pid=8555,fd=304))</span><br><span class=\"line\">ES-suse:/etc/zypp/repos.d # curl -X GET &quot;localhost:9200/&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;name&quot; : &quot;ES-suse&quot;,</span><br><span class=\"line\">  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,</span><br><span class=\"line\">  &quot;cluster_uuid&quot; : &quot;0zL15OxVTY6SrXO2aQ6qGQ&quot;,</span><br><span class=\"line\">  &quot;version&quot; : &#123;</span><br><span class=\"line\">    &quot;number&quot; : &quot;7.17.7&quot;,</span><br><span class=\"line\">    &quot;build_flavor&quot; : &quot;default&quot;,</span><br><span class=\"line\">    &quot;build_type&quot; : &quot;rpm&quot;,</span><br><span class=\"line\">    &quot;build_hash&quot; : &quot;78dcaaa8cee33438b91eca7f5c7f56a70fec9e80&quot;,</span><br><span class=\"line\">    &quot;build_date&quot; : &quot;2022-10-17T15:29:54.167373105Z&quot;,</span><br><span class=\"line\">    &quot;build_snapshot&quot; : false,</span><br><span class=\"line\">    &quot;lucene_version&quot; : &quot;8.11.1&quot;,</span><br><span class=\"line\">    &quot;minimum_wire_compatibility_version&quot; : &quot;6.8.0&quot;,</span><br><span class=\"line\">    &quot;minimum_index_compatibility_version&quot; : &quot;6.0.0-beta1&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>input one data:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -H &#x27;Content-Type: application/json&#x27; -X POST &#x27;http://localhost:9200/todo/task/1&#x27; -d &#x27;&#123; &quot;name&quot;: &quot;Go to the mall.&quot; &#125;&#x27;</span><br></pre></td></tr></table></figure>\n<p>and read it again:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES-suse:/etc/zypp/repos.d # curl -X GET &#x27;http://localhost:9200/todo/task/1?pretty&#x27;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;_index&quot; : &quot;todo&quot;,</span><br><span class=\"line\">  &quot;_type&quot; : &quot;task&quot;,</span><br><span class=\"line\">  &quot;_id&quot; : &quot;1&quot;,</span><br><span class=\"line\">  &quot;_version&quot; : 1,</span><br><span class=\"line\">  &quot;_seq_no&quot; : 0,</span><br><span class=\"line\">  &quot;_primary_term&quot; : 1,</span><br><span class=\"line\">  &quot;found&quot; : true,</span><br><span class=\"line\">  &quot;_source&quot; : &#123;</span><br><span class=\"line\">    &quot;name&quot; : &quot;Go to the mall.&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n<p> curl -XGET ‘<a href=\"http://localhost:9200/_nodes/stats?pretty&#39;\">http://localhost:9200/_nodes/stats?pretty&#39;</a> | grep thread</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;ES-suse:/etc/zypp/repos.d #  curl -XGET &#x27;http://localhost:9200/_nodes/stats?pretty&#x27; | grep thread</span><br><span class=\"line\">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class=\"line\">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class=\"line\">100 39463  100 39463    0     0  1144k      0 --:--:-- --:--:--        &quot;threads&quot; : &#123;</span><br><span class=\"line\"> --:--:--      &quot;thread_pool&quot; : &#123;</span><br><span class=\"line\"> 1          &quot;threads&quot; : 0,</span><br><span class=\"line\">16          &quot;threads&quot; : 0,</span><br><span class=\"line\">7          &quot;threads&quot; : 0,</span><br><span class=\"line\">k          &quot;threads&quot; : 0,</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 1,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 11,</span><br><span class=\"line\">          &quot;threads&quot; : 2,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 2,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 1,</span><br><span class=\"line\">          &quot;threads&quot; : 3,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ES-suse:/etc # ll /usr/share/elasticsearch/bin</span><br><span class=\"line\">total 3028</span><br><span class=\"line\">-rwxr-xr-x 1 root root     101 Nov 17 14:04 elasticsearch</span><br><span class=\"line\">-rwxr-xr-x 1 root root     376 Nov 17 13:59 elasticsearch-certgen</span><br><span class=\"line\">-rwxr-xr-x 1 root root     376 Nov 17 13:59 elasticsearch-certutil</span><br><span class=\"line\">-rwxr-xr-x 1 root root     674 Nov 17 14:04 elasticsearch-cli</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-create-enrollment-token</span><br><span class=\"line\">-rwxr-xr-x 1 root root     352 Nov 17 13:59 elasticsearch-croneval</span><br><span class=\"line\">-rwxr-xr-x 1 root root    2340 Nov 17 14:04 elasticsearch-env</span><br><span class=\"line\">-rwxr-xr-x 1 root root    2595 Nov 17 14:04 elasticsearch-env-from-file</span><br><span class=\"line\">-rwxr-xr-x 1 root root      84 Nov 17 14:04 elasticsearch-geoip</span><br><span class=\"line\">-rwxr-xr-x 1 root root      87 Nov 17 14:04 elasticsearch-keystore</span><br><span class=\"line\">-rwxr-xr-x 1 root root      55 Nov 17 14:04 elasticsearch-node</span><br><span class=\"line\">-rwxr-xr-x 1 root root     172 Nov 17 14:04 elasticsearch-plugin</span><br><span class=\"line\">-rwxr-xr-x 1 root root     376 Nov 17 13:59 elasticsearch-reconfigure-node</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-reset-password</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-saml-metadata</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-service-tokens</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-setup-passwords</span><br><span class=\"line\">-rwxr-xr-x 1 root root      55 Nov 17 14:04 elasticsearch-shard</span><br><span class=\"line\">-rwxr-xr-x 1 root root     403 Nov 17 13:59 elasticsearch-sql-cli</span><br><span class=\"line\">-rwxr-xr-x 1 root root 3008975 Nov 17 13:59 elasticsearch-sql-cli-8.5.2.jar</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-syskeygen</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-users</span><br><span class=\"line\">-rwxr-xr-x 1 root root     332 Nov 17 14:01 systemd-entrypoint</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"health-check\"><a href=\"#health-check\" class=\"headerlink\" title=\"health check\"></a>health check</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl &#x27;localhost:9200/_cat/health?v&#x27;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"nodes-list\"><a href=\"#nodes-list\" class=\"headerlink\" title=\"nodes list\"></a>nodes list</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl &#x27;localhost:9200/_cat/nodes?v&#x27;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"index-list\"><a href=\"#index-list\" class=\"headerlink\" title=\"index list\"></a>index list</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl &#x27;localhost:9200/_cat/indices?v&#x27;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"search-detail-data-using-index\"><a href=\"#search-detail-data-using-index\" class=\"headerlink\" title=\"search detail data using index\"></a>search detail data using index</h3><p><code>curl -X GET http://localhost:9200/je_index_1663720218/</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@powerload-es-2:~ # curl -X GET http://localhost:9200/je_index_1663720218/_search?pretty</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;took&quot; : 7,</span><br><span class=\"line\">  &quot;timed_out&quot; : false,</span><br><span class=\"line\">  &quot;_shards&quot; : &#123;</span><br><span class=\"line\">    &quot;total&quot; : 5,</span><br><span class=\"line\">    &quot;successful&quot; : 5,</span><br><span class=\"line\">    &quot;skipped&quot; : 0,</span><br><span class=\"line\">    &quot;failed&quot; : 0</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;hits&quot; : &#123;</span><br><span class=\"line\">    &quot;total&quot; : 0,</span><br><span class=\"line\">    &quot;max_score&quot; : null,</span><br><span class=\"line\">    &quot;hits&quot; : [ ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"查看集群全部节点的指标\"><a href=\"#查看集群全部节点的指标\" class=\"headerlink\" title=\"查看集群全部节点的指标\"></a>查看集群全部节点的指标</h1><p>$ curl “localhost:9200/_nodes/stats”</p>\n<hr>\n<p>Issue1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES-suse:/etc/zypp/repos.d # sudo systemctl enable elasticsearch</span><br><span class=\"line\">Synchronizing state of elasticsearch.service with SysV service script with /usr/lib/systemd/systemd-sysv-install.</span><br><span class=\"line\">Executing: /usr/lib/systemd/systemd-sysv-install enable elasticsearch</span><br><span class=\"line\">ln -sf ../elasticsearch /etc/init.d/rc2.d/S50elasticsearch</span><br><span class=\"line\">ln: failed to create symbolic link &#x27;/etc/init.d/rc2.d/S50elasticsearch&#x27;: No such file or directory</span><br></pre></td></tr></table></figure>\n\n<p>It seems that this product is not from the standard openSUSE OSS repo.</p>\n<p>It tries to use /etc/init.d/rc2.d which directory belongs to the old SystemV ways of doing (as the message also says). but in openSUSE that directory is no longer in use and most probably not available anymore.</p>\n<p>Issue2: refused了</p>\n<p>root@ldm-controller-01:/usr/local/stress_test/Island_TPPC # curl -X GET “<a href=\"http://10.219.61.175:9200/_cat/indices?v&quot;\">http://10.219.61.175:9200/_cat/indices?v&quot;</a><br>curl: (7) Failed connect to 10.219.61.175:9200; Connection refused</p>\n<p>—————————————Dry run es-opensuse on powerload————————<br>Config ES-suse to powerload json file</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ldm-controller-01:/usr/local/stress_test/Island_TPPC # nslookup ES-suse.west.isilon.com</span><br><span class=\"line\">Server:         10.231.252.14</span><br><span class=\"line\">Address:        10.231.252.14#53</span><br><span class=\"line\"></span><br><span class=\"line\">Non-authoritative answer:</span><br><span class=\"line\">Name:   ES-suse.west.isilon.com</span><br><span class=\"line\">Address: 10.219.61.175</span><br></pre></td></tr></table></figure>\n\n<p>![](vx_images/65815239672.png =800x)</p>\n<h3 id=\"cat-methods\"><a href=\"#cat-methods\" class=\"headerlink\" title=\"cat methods\"></a>cat methods</h3><p><code>curl http://localhost:9200/_cat</code></p>\n<p>ES-suse:/var/lib/elasticsearch #  curl <a href=\"http://localhost:9200/_cat\">http://localhost:9200/_cat</a><br>=^.^=<br>/_cat/allocation<br>/_cat/shards<br>/_cat/shards/{index}<br>/_cat/master<br>/_cat/nodes<br>/_cat/tasks<br>/_cat/indices<br>/_cat/indices/{index}<br>/_cat/segments<br>/_cat/segments/{index}<br>/_cat/count<br>/_cat/count/{index}<br>/_cat/recovery<br>/_cat/recovery/{index}<br>/_cat/health<br>/_cat/pending_tasks<br>/_cat/aliases<br>/_cat/aliases/{alias}<br>/_cat/thread_pool<br>/_cat/thread_pool/{thread_pools}<br>/_cat/plugins<br>/_cat/fielddata<br>/_cat/fielddata/{fields}<br>/_cat/nodeattrs<br>/_cat/repositories<br>/_cat/snapshots/{repository}<br>/_cat/templates<br>/_cat/ml/anomaly_detectors<br>/_cat/ml/anomaly_detectors/{job_id}<br>/_cat/ml/trained_models<br>/_cat/ml/trained_models/{model_id}<br>/_cat/ml/datafeeds<br>/_cat/ml/datafeeds/{datafeed_id}<br>/_cat/ml/data_frame/analytics<br>/_cat/ml/data_frame/analytics/{id}<br>/_cat/transforms<br>/_cat/transforms/{transform_id}</p>\n<p><a href=\"https://juejin.cn/post/7145773678649671694\">https://juejin.cn/post/7145773678649671694</a></p>\n<p>curl localhost:9200/_cat/nodes?help</p>\n<h1 id=\"指定查看每个节点的堆内存使用率，段数量和合并数量\"><a href=\"#指定查看每个节点的堆内存使用率，段数量和合并数量\" class=\"headerlink\" title=\"指定查看每个节点的堆内存使用率，段数量和合并数量\"></a>指定查看每个节点的堆内存使用率，段数量和合并数量</h1><p>$ curl “<a href=\"http://localhost:9200/_cat/nodes?h=http,heapPercent,segmentsCount,mergesTotal&quot;\">http://localhost:9200/_cat/nodes?h=http,heapPercent,segmentsCount,mergesTotal&quot;</a><br>172.16.71.231:9200 56 99 108182<br>172.16.71.229:9200 31 95 122551<br>172.16.71.232:9200 50 66  73871<br>172.16.71.230:9200 41 63  76470<br>172.16.71.234:9200 32 64  93256<br>172.16.71.233:9200 14 90 136450</p>\n<p>当集群为red或者yellow的时候怎么办<br>集群为RED表示集群中有primary shard没有分配，yellow表示有replica没有分配</p>\n<p>root@powerload-es-2:/var/lib/elasticsearch/nodes # curl -X GET “<a href=\"http://localhost:9200/_cluster/allocation/explain?pretty&quot;\">http://localhost:9200/_cluster/allocation/explain?pretty&quot;</a><br>{<br>  “index” : “je_index_1664986024”,<br>  “shard” : 3,<br>  “primary” : false,<br>  “current_state” : “unassigned”,<br>  “unassigned_info” : {<br>    “reason” : “CLUSTER_RECOVERED”,<br>    “at” : “2022-12-05T02:18:25.712Z”,<br>    “last_allocation_status” : “no_attempt”<br>  },<br>  “can_allocate” : “no”,<br>  “allocate_explanation” : “cannot allocate because allocation is not permitted to any of the nodes”,<br>  “node_allocation_decisions” : [<br>    {<br>      “node_id” : “R2DFntg7RLiwYsEN4mwYuw”,<br>      “node_name” : “R2DFntg”,<br>      “transport_address” : “10.219.61.247:9300”,<br>      “node_attributes” : {<br>        “ml.machine_memory” : “16656269312”,<br>        “xpack.installed” : “true”,<br>        “ml.max_open_jobs” : “20”,<br>        “ml.enabled” : “true”<br>      },<br>      “node_decision” : “no”,<br>      “deciders” : [<br>        {<br>          “decider” : “same_shard”,<br>          “decision” : “NO”,<br>          “explanation” : “the shard cannot be allocated to the same node on which a copy of the shard already exists [[je_index_1664986024][3], node[R2DFntg7RLiwYsEN4mwYuw], [P], s[STARTED], a[id=488Lf_8lTI2raran4YNWoQ]]”<br>        }<br>      ]<br>    }<br>  ]<br>}</p>\n<p>分片长时间处于未分配状态 ES内部会对一个unassigned 分片尝试5次进行分配,失败后不再尝试进行分配，这时候需要调用进行手动控制集群处理 unassigned 分片：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Before starting Elasticsearch for the first time</span><br><span class=\"line\">Set xpack.security.enabled: false and then start Elasticsearch</span><br><span class=\"line\"></span><br><span class=\"line\">After you have started Elasticsearch for the first time</span><br><span class=\"line\">You have two options here</span><br><span class=\"line\"></span><br><span class=\"line\">Set</span><br><span class=\"line\"></span><br><span class=\"line\">xpack.security.enabled: false</span><br><span class=\"line\">xpack.security.transport.ssl.enabled: false</span><br><span class=\"line\">xpack.security.http.ssl.enabled: false</span><br><span class=\"line\">and then start Elasticsearch.</span><br><span class=\"line\"></span><br><span class=\"line\">Run</span><br><span class=\"line\"></span><br><span class=\"line\">bin/elasticsearch-keystore remove xpack.security.transport.ssl.keystore.secure_password</span><br><span class=\"line\">bin/elasticsearch-keystore remove xpack.security.transport.ssl.truststore.secure_password</span><br><span class=\"line\">bin/elasticsearch-keystore remove xpack.security.http.ssl.keystore.secure_password</span><br><span class=\"line\">Set</span><br><span class=\"line\"></span><br><span class=\"line\">xpack.security.enabled: false</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"change-timezone\"><a href=\"#change-timezone\" class=\"headerlink\" title=\"change timezone\"></a>change timezone</h3><p>step1: vi /etc/sysconfig/clock</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEFAULT_TIMEZONE=&quot;Etc/GMT&quot;</span><br><span class=\"line\">ZONE=&quot;Etc/GMT&quot;</span><br><span class=\"line\">~</span><br><span class=\"line\">```  </span><br><span class=\"line\">step2: zic -l Etc/GMT</span><br><span class=\"line\">step3: date</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>ES-suse:/var/log/elasticsearch # date<br>Tue Dec  6 03:46:47 EST 2022<br>ES-suse:/var/log/elasticsearch # vi /etc/sysconfig/clock<br>ES-suse:/var/log/elasticsearch # zic -l Etc/GMT<br>ES-suse:/var/log/elasticsearch # date<br>Tue Dec  6 08:55:46 GMT 2022</p>\n<pre><code>\n</code></pre>\n","site":{"data":{}},"excerpt":"<p>sudo zypper refresh<br>sudo zypper update -y<br>sudo zypper install yum</p>\n<h3 id=\"Import-the-Elasticsearch-GPG-Key\"><a href=\"#Import-the-Elasticsearch-GPG-Key\" class=\"headerlink\" title=\"Import the Elasticsearch GPG Key\"></a>Import the Elasticsearch GPG Key</h3><p><code>sudo rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch</code></p>\n<h3 id=\"Install-Elasticsearch-from-the-RPM-repository\"><a href=\"#Install-Elasticsearch-from-the-RPM-repository\" class=\"headerlink\" title=\"Install Elasticsearch from the RPM repository\"></a>Install Elasticsearch from the RPM repository</h3><p>create elasticsearch.repo and config the es install repo</p>\n<p><code>sudo vim /etc/zypp/repos.d/elasticsearch.repo</code></p>","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[elasticsearch]</span><br><span class=\"line\">name=Elasticsearch repository for 8.x packages</span><br><span class=\"line\">baseurl=https://artifacts.elastic.co/packages/8.x/yum</span><br><span class=\"line\">gpgcheck=1</span><br><span class=\"line\">gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch</span><br><span class=\"line\">enabled=0</span><br><span class=\"line\">autorefresh=1</span><br><span class=\"line\">type=rpm-md</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>install ES</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo zypper modifyrepo --enable elasticsearch &amp;&amp; \\</span><br><span class=\"line\">  sudo zypper install elasticsearch; \\</span><br><span class=\"line\">  sudo zypper modifyrepo --disable elasticsearch </span><br></pre></td></tr></table></figure>\n\n<p>download and install RPM </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.5.2-x86_64.rpm</span><br><span class=\"line\">wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-8.5.2-x86_64.rpm.sha512</span><br><span class=\"line\">shasum -a 512 -c elasticsearch-8.5.2-x86_64.rpm.sha512 </span><br><span class=\"line\">sudo rpm --install elasticsearch-8.5.2-x86_64.rpm</span><br></pre></td></tr></table></figure>\n\n<p>config the es start automatically when system boots up</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES-suse:/etc/zypp/repos.d # sudo /bin/systemctl daemon-reload</span><br><span class=\"line\">ES-suse:/etc/zypp/repos.d # sudo /bin/systemctl enable elasticsearch.service</span><br><span class=\"line\">Created symlink /etc/systemd/system/multi-user.target.wants/elasticsearch.service → /usr/lib/systemd/system/elasticsearch.service.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>check the ES</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES-suse:/etc/zypp/repos.d # rpm -qi elasticsearch</span><br><span class=\"line\">Name        : elasticsearch</span><br><span class=\"line\">Epoch       : 0</span><br><span class=\"line\">Version     : 7.17.7</span><br><span class=\"line\">Release     : 1</span><br><span class=\"line\">Architecture: x86_64</span><br><span class=\"line\">Install Date: Sun Dec  4 21:37:47 2022</span><br><span class=\"line\">Group       : Application/Internet</span><br><span class=\"line\">Size        : 525810397</span><br><span class=\"line\">License     : Elastic License</span><br><span class=\"line\">Signature   : RSA/SHA512, Mon Oct 17 14:57:09 2022, Key ID d27d666cd88e42b4</span><br><span class=\"line\">Source RPM  : elasticsearch-7.17.7-1-src.rpm</span><br><span class=\"line\">Build Date  : Mon Oct 17 11:35:59 2022</span><br><span class=\"line\">Build Host  : packer-virtualbox-iso-1646848364</span><br><span class=\"line\">Relocations : /usr</span><br><span class=\"line\">Packager    : Elasticsearch</span><br><span class=\"line\">Vendor      : Elasticsearch</span><br><span class=\"line\">URL         : https://www.elastic.co/</span><br><span class=\"line\">Summary     : Distributed RESTful search engine built for the cloud</span><br><span class=\"line\">Description :</span><br><span class=\"line\">Reference documentation can be found at</span><br><span class=\"line\">  https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html</span><br><span class=\"line\">  and the &#x27;Elasticsearch: The Definitive Guide&#x27; book can be found at</span><br><span class=\"line\">  https://www.elastic.co/guide/en/elasticsearch/guide/current/index.html</span><br><span class=\"line\">Distribution: Elasticsearch</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>start es server</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES-suse:/etc/zypp/repos.d # sudo systemctl start elasticsearch</span><br><span class=\"line\">ES-suse:/etc/zypp/repos.d # sudo systemctl status elasticsearch</span><br><span class=\"line\">● elasticsearch.service - Elasticsearch</span><br><span class=\"line\">     Loaded: loaded (/usr/lib/systemd/system/elasticsearch.service; disabled; vendor preset: disabled)</span><br><span class=\"line\">     Active: active (running) since Sun 2022-12-04 21:39:35 EST; 21s ago</span><br><span class=\"line\">       Docs: https://www.elastic.co</span><br><span class=\"line\">   Main PID: 8555 (java)</span><br><span class=\"line\">      Tasks: 97 (limit: 4915)</span><br><span class=\"line\">     CGroup: /system.slice/elasticsearch.service</span><br><span class=\"line\">             ├─ 8555 /usr/share/elasticsearch/jdk/bin/java -Xshare:auto -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+Always&gt;</span><br><span class=\"line\">             └─ 8767 /usr/share/elasticsearch/modules/x-pack-ml/platform/linux-x86_64/bin/controller</span><br><span class=\"line\"></span><br><span class=\"line\">Dec 04 21:39:17 ES-suse systemd[1]: Starting Elasticsearch...</span><br><span class=\"line\">Dec 04 21:39:35 ES-suse systemd[1]: Started Elasticsearch.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>related log:<br><code> vi /var/log/elasticsearch/elasticsearch.log</code></p>\n<p>datapath<br><code>/var/lib/elasticsearch</code></p>\n<p>To list journal entries for the elasticsearch service:</p>\n<p><code>sudo journalctl --unit elasticsearch</code></p>\n<p>verify es installation</p>\n<ol>\n<li><code>ss -antpl | grep 9200</code></li>\n<li><code>curl -X GET &quot;localhost:9200/&quot;</code></li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES-suse:/etc/zypp/repos.d # ss -antpl | grep 9200</span><br><span class=\"line\">LISTEN 0      4096   [::ffff:127.0.0.1]:9200             *:*    users:((&quot;java&quot;,pid=8555,fd=305))</span><br><span class=\"line\">LISTEN 0      4096                [::1]:9200          [::]:*    users:((&quot;java&quot;,pid=8555,fd=304))</span><br><span class=\"line\">ES-suse:/etc/zypp/repos.d # curl -X GET &quot;localhost:9200/&quot;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;name&quot; : &quot;ES-suse&quot;,</span><br><span class=\"line\">  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,</span><br><span class=\"line\">  &quot;cluster_uuid&quot; : &quot;0zL15OxVTY6SrXO2aQ6qGQ&quot;,</span><br><span class=\"line\">  &quot;version&quot; : &#123;</span><br><span class=\"line\">    &quot;number&quot; : &quot;7.17.7&quot;,</span><br><span class=\"line\">    &quot;build_flavor&quot; : &quot;default&quot;,</span><br><span class=\"line\">    &quot;build_type&quot; : &quot;rpm&quot;,</span><br><span class=\"line\">    &quot;build_hash&quot; : &quot;78dcaaa8cee33438b91eca7f5c7f56a70fec9e80&quot;,</span><br><span class=\"line\">    &quot;build_date&quot; : &quot;2022-10-17T15:29:54.167373105Z&quot;,</span><br><span class=\"line\">    &quot;build_snapshot&quot; : false,</span><br><span class=\"line\">    &quot;lucene_version&quot; : &quot;8.11.1&quot;,</span><br><span class=\"line\">    &quot;minimum_wire_compatibility_version&quot; : &quot;6.8.0&quot;,</span><br><span class=\"line\">    &quot;minimum_index_compatibility_version&quot; : &quot;6.0.0-beta1&quot;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;tagline&quot; : &quot;You Know, for Search&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>input one data:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -H &#x27;Content-Type: application/json&#x27; -X POST &#x27;http://localhost:9200/todo/task/1&#x27; -d &#x27;&#123; &quot;name&quot;: &quot;Go to the mall.&quot; &#125;&#x27;</span><br></pre></td></tr></table></figure>\n<p>and read it again:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES-suse:/etc/zypp/repos.d # curl -X GET &#x27;http://localhost:9200/todo/task/1?pretty&#x27;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;_index&quot; : &quot;todo&quot;,</span><br><span class=\"line\">  &quot;_type&quot; : &quot;task&quot;,</span><br><span class=\"line\">  &quot;_id&quot; : &quot;1&quot;,</span><br><span class=\"line\">  &quot;_version&quot; : 1,</span><br><span class=\"line\">  &quot;_seq_no&quot; : 0,</span><br><span class=\"line\">  &quot;_primary_term&quot; : 1,</span><br><span class=\"line\">  &quot;found&quot; : true,</span><br><span class=\"line\">  &quot;_source&quot; : &#123;</span><br><span class=\"line\">    &quot;name&quot; : &quot;Go to the mall.&quot;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n\n\n\n\n<p> curl -XGET ‘<a href=\"http://localhost:9200/_nodes/stats?pretty&#39;\">http://localhost:9200/_nodes/stats?pretty&#39;</a> | grep thread</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#125;ES-suse:/etc/zypp/repos.d #  curl -XGET &#x27;http://localhost:9200/_nodes/stats?pretty&#x27; | grep thread</span><br><span class=\"line\">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class=\"line\">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class=\"line\">100 39463  100 39463    0     0  1144k      0 --:--:-- --:--:--        &quot;threads&quot; : &#123;</span><br><span class=\"line\"> --:--:--      &quot;thread_pool&quot; : &#123;</span><br><span class=\"line\"> 1          &quot;threads&quot; : 0,</span><br><span class=\"line\">16          &quot;threads&quot; : 0,</span><br><span class=\"line\">7          &quot;threads&quot; : 0,</span><br><span class=\"line\">k          &quot;threads&quot; : 0,</span><br><span class=\"line\"></span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 1,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 11,</span><br><span class=\"line\">          &quot;threads&quot; : 2,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 2,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 1,</span><br><span class=\"line\">          &quot;threads&quot; : 3,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\">          &quot;threads&quot; : 0,</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">ES-suse:/etc # ll /usr/share/elasticsearch/bin</span><br><span class=\"line\">total 3028</span><br><span class=\"line\">-rwxr-xr-x 1 root root     101 Nov 17 14:04 elasticsearch</span><br><span class=\"line\">-rwxr-xr-x 1 root root     376 Nov 17 13:59 elasticsearch-certgen</span><br><span class=\"line\">-rwxr-xr-x 1 root root     376 Nov 17 13:59 elasticsearch-certutil</span><br><span class=\"line\">-rwxr-xr-x 1 root root     674 Nov 17 14:04 elasticsearch-cli</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-create-enrollment-token</span><br><span class=\"line\">-rwxr-xr-x 1 root root     352 Nov 17 13:59 elasticsearch-croneval</span><br><span class=\"line\">-rwxr-xr-x 1 root root    2340 Nov 17 14:04 elasticsearch-env</span><br><span class=\"line\">-rwxr-xr-x 1 root root    2595 Nov 17 14:04 elasticsearch-env-from-file</span><br><span class=\"line\">-rwxr-xr-x 1 root root      84 Nov 17 14:04 elasticsearch-geoip</span><br><span class=\"line\">-rwxr-xr-x 1 root root      87 Nov 17 14:04 elasticsearch-keystore</span><br><span class=\"line\">-rwxr-xr-x 1 root root      55 Nov 17 14:04 elasticsearch-node</span><br><span class=\"line\">-rwxr-xr-x 1 root root     172 Nov 17 14:04 elasticsearch-plugin</span><br><span class=\"line\">-rwxr-xr-x 1 root root     376 Nov 17 13:59 elasticsearch-reconfigure-node</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-reset-password</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-saml-metadata</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-service-tokens</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-setup-passwords</span><br><span class=\"line\">-rwxr-xr-x 1 root root      55 Nov 17 14:04 elasticsearch-shard</span><br><span class=\"line\">-rwxr-xr-x 1 root root     403 Nov 17 13:59 elasticsearch-sql-cli</span><br><span class=\"line\">-rwxr-xr-x 1 root root 3008975 Nov 17 13:59 elasticsearch-sql-cli-8.5.2.jar</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-syskeygen</span><br><span class=\"line\">-rwxr-xr-x 1 root root     353 Nov 17 13:59 elasticsearch-users</span><br><span class=\"line\">-rwxr-xr-x 1 root root     332 Nov 17 14:01 systemd-entrypoint</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h3 id=\"health-check\"><a href=\"#health-check\" class=\"headerlink\" title=\"health check\"></a>health check</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl &#x27;localhost:9200/_cat/health?v&#x27;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"nodes-list\"><a href=\"#nodes-list\" class=\"headerlink\" title=\"nodes list\"></a>nodes list</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl &#x27;localhost:9200/_cat/nodes?v&#x27;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"index-list\"><a href=\"#index-list\" class=\"headerlink\" title=\"index list\"></a>index list</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl &#x27;localhost:9200/_cat/indices?v&#x27;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"search-detail-data-using-index\"><a href=\"#search-detail-data-using-index\" class=\"headerlink\" title=\"search detail data using index\"></a>search detail data using index</h3><p><code>curl -X GET http://localhost:9200/je_index_1663720218/</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@powerload-es-2:~ # curl -X GET http://localhost:9200/je_index_1663720218/_search?pretty</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;took&quot; : 7,</span><br><span class=\"line\">  &quot;timed_out&quot; : false,</span><br><span class=\"line\">  &quot;_shards&quot; : &#123;</span><br><span class=\"line\">    &quot;total&quot; : 5,</span><br><span class=\"line\">    &quot;successful&quot; : 5,</span><br><span class=\"line\">    &quot;skipped&quot; : 0,</span><br><span class=\"line\">    &quot;failed&quot; : 0</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;hits&quot; : &#123;</span><br><span class=\"line\">    &quot;total&quot; : 0,</span><br><span class=\"line\">    &quot;max_score&quot; : null,</span><br><span class=\"line\">    &quot;hits&quot; : [ ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"查看集群全部节点的指标\"><a href=\"#查看集群全部节点的指标\" class=\"headerlink\" title=\"查看集群全部节点的指标\"></a>查看集群全部节点的指标</h1><p>$ curl “localhost:9200/_nodes/stats”</p>\n<hr>\n<p>Issue1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ES-suse:/etc/zypp/repos.d # sudo systemctl enable elasticsearch</span><br><span class=\"line\">Synchronizing state of elasticsearch.service with SysV service script with /usr/lib/systemd/systemd-sysv-install.</span><br><span class=\"line\">Executing: /usr/lib/systemd/systemd-sysv-install enable elasticsearch</span><br><span class=\"line\">ln -sf ../elasticsearch /etc/init.d/rc2.d/S50elasticsearch</span><br><span class=\"line\">ln: failed to create symbolic link &#x27;/etc/init.d/rc2.d/S50elasticsearch&#x27;: No such file or directory</span><br></pre></td></tr></table></figure>\n\n<p>It seems that this product is not from the standard openSUSE OSS repo.</p>\n<p>It tries to use /etc/init.d/rc2.d which directory belongs to the old SystemV ways of doing (as the message also says). but in openSUSE that directory is no longer in use and most probably not available anymore.</p>\n<p>Issue2: refused了</p>\n<p>root@ldm-controller-01:/usr/local/stress_test/Island_TPPC # curl -X GET “<a href=\"http://10.219.61.175:9200/_cat/indices?v&quot;\">http://10.219.61.175:9200/_cat/indices?v&quot;</a><br>curl: (7) Failed connect to 10.219.61.175:9200; Connection refused</p>\n<p>—————————————Dry run es-opensuse on powerload————————<br>Config ES-suse to powerload json file</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@ldm-controller-01:/usr/local/stress_test/Island_TPPC # nslookup ES-suse.west.isilon.com</span><br><span class=\"line\">Server:         10.231.252.14</span><br><span class=\"line\">Address:        10.231.252.14#53</span><br><span class=\"line\"></span><br><span class=\"line\">Non-authoritative answer:</span><br><span class=\"line\">Name:   ES-suse.west.isilon.com</span><br><span class=\"line\">Address: 10.219.61.175</span><br></pre></td></tr></table></figure>\n\n<p>![](vx_images/65815239672.png =800x)</p>\n<h3 id=\"cat-methods\"><a href=\"#cat-methods\" class=\"headerlink\" title=\"cat methods\"></a>cat methods</h3><p><code>curl http://localhost:9200/_cat</code></p>\n<p>ES-suse:/var/lib/elasticsearch #  curl <a href=\"http://localhost:9200/_cat\">http://localhost:9200/_cat</a><br>=^.^=<br>/_cat/allocation<br>/_cat/shards<br>/_cat/shards/{index}<br>/_cat/master<br>/_cat/nodes<br>/_cat/tasks<br>/_cat/indices<br>/_cat/indices/{index}<br>/_cat/segments<br>/_cat/segments/{index}<br>/_cat/count<br>/_cat/count/{index}<br>/_cat/recovery<br>/_cat/recovery/{index}<br>/_cat/health<br>/_cat/pending_tasks<br>/_cat/aliases<br>/_cat/aliases/{alias}<br>/_cat/thread_pool<br>/_cat/thread_pool/{thread_pools}<br>/_cat/plugins<br>/_cat/fielddata<br>/_cat/fielddata/{fields}<br>/_cat/nodeattrs<br>/_cat/repositories<br>/_cat/snapshots/{repository}<br>/_cat/templates<br>/_cat/ml/anomaly_detectors<br>/_cat/ml/anomaly_detectors/{job_id}<br>/_cat/ml/trained_models<br>/_cat/ml/trained_models/{model_id}<br>/_cat/ml/datafeeds<br>/_cat/ml/datafeeds/{datafeed_id}<br>/_cat/ml/data_frame/analytics<br>/_cat/ml/data_frame/analytics/{id}<br>/_cat/transforms<br>/_cat/transforms/{transform_id}</p>\n<p><a href=\"https://juejin.cn/post/7145773678649671694\">https://juejin.cn/post/7145773678649671694</a></p>\n<p>curl localhost:9200/_cat/nodes?help</p>\n<h1 id=\"指定查看每个节点的堆内存使用率，段数量和合并数量\"><a href=\"#指定查看每个节点的堆内存使用率，段数量和合并数量\" class=\"headerlink\" title=\"指定查看每个节点的堆内存使用率，段数量和合并数量\"></a>指定查看每个节点的堆内存使用率，段数量和合并数量</h1><p>$ curl “<a href=\"http://localhost:9200/_cat/nodes?h=http,heapPercent,segmentsCount,mergesTotal&quot;\">http://localhost:9200/_cat/nodes?h=http,heapPercent,segmentsCount,mergesTotal&quot;</a><br>172.16.71.231:9200 56 99 108182<br>172.16.71.229:9200 31 95 122551<br>172.16.71.232:9200 50 66  73871<br>172.16.71.230:9200 41 63  76470<br>172.16.71.234:9200 32 64  93256<br>172.16.71.233:9200 14 90 136450</p>\n<p>当集群为red或者yellow的时候怎么办<br>集群为RED表示集群中有primary shard没有分配，yellow表示有replica没有分配</p>\n<p>root@powerload-es-2:/var/lib/elasticsearch/nodes # curl -X GET “<a href=\"http://localhost:9200/_cluster/allocation/explain?pretty&quot;\">http://localhost:9200/_cluster/allocation/explain?pretty&quot;</a><br>{<br>  “index” : “je_index_1664986024”,<br>  “shard” : 3,<br>  “primary” : false,<br>  “current_state” : “unassigned”,<br>  “unassigned_info” : {<br>    “reason” : “CLUSTER_RECOVERED”,<br>    “at” : “2022-12-05T02:18:25.712Z”,<br>    “last_allocation_status” : “no_attempt”<br>  },<br>  “can_allocate” : “no”,<br>  “allocate_explanation” : “cannot allocate because allocation is not permitted to any of the nodes”,<br>  “node_allocation_decisions” : [<br>    {<br>      “node_id” : “R2DFntg7RLiwYsEN4mwYuw”,<br>      “node_name” : “R2DFntg”,<br>      “transport_address” : “10.219.61.247:9300”,<br>      “node_attributes” : {<br>        “ml.machine_memory” : “16656269312”,<br>        “xpack.installed” : “true”,<br>        “ml.max_open_jobs” : “20”,<br>        “ml.enabled” : “true”<br>      },<br>      “node_decision” : “no”,<br>      “deciders” : [<br>        {<br>          “decider” : “same_shard”,<br>          “decision” : “NO”,<br>          “explanation” : “the shard cannot be allocated to the same node on which a copy of the shard already exists [[je_index_1664986024][3], node[R2DFntg7RLiwYsEN4mwYuw], [P], s[STARTED], a[id=488Lf_8lTI2raran4YNWoQ]]”<br>        }<br>      ]<br>    }<br>  ]<br>}</p>\n<p>分片长时间处于未分配状态 ES内部会对一个unassigned 分片尝试5次进行分配,失败后不再尝试进行分配，这时候需要调用进行手动控制集群处理 unassigned 分片：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Before starting Elasticsearch for the first time</span><br><span class=\"line\">Set xpack.security.enabled: false and then start Elasticsearch</span><br><span class=\"line\"></span><br><span class=\"line\">After you have started Elasticsearch for the first time</span><br><span class=\"line\">You have two options here</span><br><span class=\"line\"></span><br><span class=\"line\">Set</span><br><span class=\"line\"></span><br><span class=\"line\">xpack.security.enabled: false</span><br><span class=\"line\">xpack.security.transport.ssl.enabled: false</span><br><span class=\"line\">xpack.security.http.ssl.enabled: false</span><br><span class=\"line\">and then start Elasticsearch.</span><br><span class=\"line\"></span><br><span class=\"line\">Run</span><br><span class=\"line\"></span><br><span class=\"line\">bin/elasticsearch-keystore remove xpack.security.transport.ssl.keystore.secure_password</span><br><span class=\"line\">bin/elasticsearch-keystore remove xpack.security.transport.ssl.truststore.secure_password</span><br><span class=\"line\">bin/elasticsearch-keystore remove xpack.security.http.ssl.keystore.secure_password</span><br><span class=\"line\">Set</span><br><span class=\"line\"></span><br><span class=\"line\">xpack.security.enabled: false</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"change-timezone\"><a href=\"#change-timezone\" class=\"headerlink\" title=\"change timezone\"></a>change timezone</h3><p>step1: vi /etc/sysconfig/clock</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEFAULT_TIMEZONE=&quot;Etc/GMT&quot;</span><br><span class=\"line\">ZONE=&quot;Etc/GMT&quot;</span><br><span class=\"line\">~</span><br><span class=\"line\">```  </span><br><span class=\"line\">step2: zic -l Etc/GMT</span><br><span class=\"line\">step3: date</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>ES-suse:/var/log/elasticsearch # date<br>Tue Dec  6 03:46:47 EST 2022<br>ES-suse:/var/log/elasticsearch # vi /etc/sysconfig/clock<br>ES-suse:/var/log/elasticsearch # zic -l Etc/GMT<br>ES-suse:/var/log/elasticsearch # date<br>Tue Dec  6 08:55:46 GMT 2022</p>\n<pre><code>\n</code></pre>"},{"layout":"posts","title":"diango","date":"2023-02-11T05:43:46.000Z","password":"lantian","_content":"\n# 1. django\n\n1. pip3.8 install djangon\n2. python3.8 -m django --version\n3. django-admin\n4. django-admin startproject  ~~myprojectname~~  Multicorn_project  | on desktop\n5. cd ~~myprojectname~~ Multicorn_project\n6. tree\n![](_v_images/20201001165628417_1726437634.png =200x)\n\n7. python manage.py runserver\n```\nOctober 01, 2020 - 08:57:22\nDjango version 3.1.2, using settings 'Multicorn_project.settings'\nStarting development server at http://127.0.0.1:8000/\n```\n8. python manage.py runserver 9999   | grep 端口\n9. python manage.py startapp ~~yourappname~~ mouticorn\n\n10. dirs:   multicorn -> templates -> multicorn -> 2 files: home.html  and multicornjson.html\n11. in home.html,  just input \"html + tab\"\n12. look at the apps.py in the multicorn app \n13. in project settings.py,  add multicorn.apps.MulticornConfig into the top of 'INSTALLED_APPS'\n![](_v_images/20201003160503076_808966192.png =320x)\n\n14. dirs: multicorn -> static -> multicorn   \n<!--more-->\n15. python manage.py makemigrations\n16. python manage.py migrate\n17. \n16.  python manage.py createsuperuser  创建一个 admin user\nusername: ali1\npassword: lantian\nemail: annie.li1@dell.com\n\n```\n/Desktop/Multicorn_project 🔥» python manage.py createsuperuser                                                                      vivi@vivideMacBook-Pro\nUsername (leave blank to use 'vivi'): ali1\nEmail address: annie.li1@dell.com\nPassword:\nPassword (again):\nThis password is too short. It must contain at least 8 characters.\nBypass password validation and create user anyway? [y/N]: y\nSuperuser created successfully.\n```\n\n> [一个有用的css网站](https://getbootstrap.com/docs/4.5/getting-started/introduction/)\n18.  在base.css中，把Login的 href 改成 **href=\"/admin/\"**, 即可登录\n![](_v_images/20201004152628847_575819787.png =520x)\n\nusername: TestUser   password: django123\n\n![](_v_images/20201004154036210_1241846727.png =220x)\n\n19. models.py\n\n\n```pythonx\nfrom django.db import models\nfrom django.utils import timezone\nfrom django.contrib.auth.models import User\n\nclass Post(models.Model):\n    title = models.CharField(max_length=100)\n    content = models.TextField()\n    # auto_now, auto_now_add, default\n    date_posted = models.DateTimeField(default=timezone.now)\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\n```\n\n\n20. python manage.py makemigrations    muticorn -> migrations -> 0001_initial.py & __init__.py\n在 0001_initial.py中是 建表语句\n\n```\n~/Desktop/Multicorn_project 🔥» python manage.py makemigrations                                                                       vivi@vivideMacBook-Pro\nMigrations for 'multicorn':\n  multicorn/migrations/0001_initial.py\n    - Create model Post\n```\n\n21.  python manage.py sqlmigrate multicorn 0001_initial  \n执行建表语句并且commit 到db中\n\n```\n~/Desktop/Multicorn_project 🔥» python manage.py sqlmigrate multicorn 0001_initial                                                    vivi@vivideMacBook-Pro\nBEGIN;\n--\n-- Create model Post\n--\nCREATE TABLE \"multicorn_post\" (\"id\" integer NOT NULL PRIMARY KEY AUTOINCREMENT, \"title\" varchar(100) NOT NULL, \"content\" text NOT NULL, \"date_posted\" datetime NOT NULL, \"author_id\" integer NOT NULL REFERENCES \"auth_user\" (\"id\") DEFERRABLE INITIALLY DEFERRED);\nCREATE INDEX \"multicorn_post_author_id_82a8e3b2\" ON \"multicorn_post\" (\"author_id\");\nCOMMIT;\n```\n22. python manage.py migrate\n```\n~/Desktop/Multicorn_project 🔥» python manage.py migrate                                   vivi@vivideMacBook-Pro\nOperations to perform:\n  Apply all migrations: admin, auth, contenttypes, multicorn, sessions\nRunning migrations:\n  Applying multicorn.0001_initial... OK\n```\n\n23. 进入 django shell 模式\n24. python manage.py shell\n\n```python\nfrom multicorn.models import Post\nfrom django.contrib.auth.models import User\nUser.objects.all()\n\n>> <QuerySet [<User: ali1>, <User: TestUser>]>\n```\n\n可以在shell模式下，筛选\n    1. User.objects.all()        -->     <QuerySet [<User: ali1>, <User: TestUser>]>\n    2. User.objects.first()         -->           <User: ali1>\n    3. User.objects.filter(username='ali1')            -->               <QuerySet [<User: ali1>]>\n    4. User.objects.filter(username='ali1').first()      -->           <User: ali1>\n\n可以 赋值 user 做各种操作：\n    1. user = User.objects.filter(username='ali1').first() \n        ![](_v_images/20201004221441020_1148517328.png =300x)\n    2. user.id \n    3. user.pk\n    4. user = User.objects.get(id=1)\n    5. user   --->   <User: ali1>\n    ![](_v_images/20201004222758993_1547712460.png =200x)\nctrl + l  python中的清屏\n\n可以给新表 Post 增加数据：\n```python\n>>> Post.objects.all()\n<QuerySet []>\n>>> post_1 = Post(title='blog 1', content='First Post Content!', author=user)\n>>> Post.objects.all()\n<QuerySet []>\n>>> post_1.save()\n>>> Post.objects.all()\n<QuerySet [<Post: Post object (1)>]>\n```\n25. 因为打印出来的 Post.objects.all()  没有展示title\n进入 multicorn -> models.py  在class Post中添加\ndef __str__(self):\n        return self.title\n\n```python\nclass Post(models.Model):\n    title = models.CharField(max_length=100)\n    content = models.TextField()\n    # auto_now, auto_now_add, default\n    date_posted = models.DateTimeField(default=timezone.now)\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.title\n```\n\n\n26. 重新打开shell：\n```python\npython manage.py shell\n>>> from multicorn.models import Post\n>>> from django.contrib.auth.models import User\n>>> Post.objects.all()\n<QuerySet [<Post: blog 1>]>\n```\n\n27. 添加第二个blog,  注意`post_2.save()`, 注意 `author_id = user.id`\n\n```python\n>>> user = User.objects.filter(username='ali1').first()\n>>> user\n<User: ali1>\n>>> post_2 = Post(title='Blog 2', content='Second Post Content!', author=user)\n>>> post_2 = Post(title='Blog 2', content='Second Post Content!', author_id=user.id)\n>>> post_2.save()\n>>> Post.objects.all()\n<QuerySet [<Post: blog 1>, <Post: Blog 2>]>\n>>>\n```\n28. 可以查看post的各种属性，包括 `date_posted`,  和 `内建的user`, 和 `email`\n```python\n>>> Post.objects.all()\n<QuerySet [<Post: blog 1>, <Post: Blog 2>]>\n>>> post = Post.objects.first()\n>>> post.content\n'First Post Content!'\n>>> post.date_posted\ndatetime.datetime(2020, 10, 4, 14, 30, 35, 354395, tzinfo=<UTC>)\n>>> post.author\n<User: ali1>\n>>> post.author.email\n'annie.li1@dell.com'\n```\n29. 可以查看同一个user的 所有 Post\n\n\n```python\n>>> user.post_set\n<django.db.models.fields.related_descriptors.create_reverse_many_to_one_manager.<locals>.RelatedManager object at 0x7ff829552640>\n>>> user.post_set.all()\n<QuerySet [<Post: blog 1>, <Post: Blog 2>]>\n```\n30. 可以用 user 来create 第三个blog，并且，无需像调用Post那样 `调用save来保存`\n\n```python\n>>> user.post_set.all()\n<QuerySet [<Post: blog 1>, <Post: Blog 2>]>\n>>> user.post_set.create(title='Blog 3', content='Third Post Content!')\n<Post: Blog 3>\n>>> user.post_set.all()\n<QuerySet [<Post: blog 1>, <Post: Blog 2>, <Post: Blog 3>]>\n>>> Post.objects.all()\n<QuerySet [<Post: blog 1>, <Post: Blog 2>, <Post: Blog 3>]>\n```\n31. 回到views里改代码，把dummy data 换成 DB中的Post， 然后傻眼了哈哈哈\n因为，我之前dummy data 用的字段是工作中的， 和templates 里的 html 兼容\n现在要回到， home 中，把  for post in posts_parameters_key 下的字段都换成与Post表一致的内容\n\n**views.py**\n\n```python\ndef home(request):\n    context = {\n        # 把 嵌套在views.py中的dummy data posts 换成了DB data Post.objects.all()\n        #'posts_parameters_key': posts\n        'posts_parameters_key': Post.objects.all()\n    }\n    return render(request, 'multicorn/home.html', context)\n\n```\n31. 重新启动网站， python manage.py runserver 9999\n![](_v_images/20201004231145556_2081382756.png =300x)\n\n31.1 \n\n```html\n<small class=\"text-muted\">{{ post.date_posted | date:\"F d, Y\" }}</small>\n```\n![](_v_images/20201004231458499_7661096.png =200x)\n\n```html\n<small class=\"text-muted\">{{ post.date_posted }}</small>\n```\n\n![](_v_images/20201004231410304_1438854109.png =200x)\n\n\n32.  进入admin.py 注册Post， 这样就可以在admin 页面看到Post的 blog了\n\n```python\nfrom django.contrib import admin\nfrom .models import Post\n\nadmin.site.register(Post)\n```\n \n![](_v_images/20201004233353387_2058505299.png =300x)\n\n变更一下 blog3的 author， 回到multicorn/home中，发现作者已变\n![](_v_images/20201004233623918_1337007123.png =200x)\n","source":"_posts/django.md","raw":"---\nlayout: posts\ntitle: diango\ndate: 2023-02-11 13:43:46\n#updated: 2023-02-11 13:31:43\ntags: django \ncategories: Teckknowledge\npassword: lantian\n\n---\n\n# 1. django\n\n1. pip3.8 install djangon\n2. python3.8 -m django --version\n3. django-admin\n4. django-admin startproject  ~~myprojectname~~  Multicorn_project  | on desktop\n5. cd ~~myprojectname~~ Multicorn_project\n6. tree\n![](_v_images/20201001165628417_1726437634.png =200x)\n\n7. python manage.py runserver\n```\nOctober 01, 2020 - 08:57:22\nDjango version 3.1.2, using settings 'Multicorn_project.settings'\nStarting development server at http://127.0.0.1:8000/\n```\n8. python manage.py runserver 9999   | grep 端口\n9. python manage.py startapp ~~yourappname~~ mouticorn\n\n10. dirs:   multicorn -> templates -> multicorn -> 2 files: home.html  and multicornjson.html\n11. in home.html,  just input \"html + tab\"\n12. look at the apps.py in the multicorn app \n13. in project settings.py,  add multicorn.apps.MulticornConfig into the top of 'INSTALLED_APPS'\n![](_v_images/20201003160503076_808966192.png =320x)\n\n14. dirs: multicorn -> static -> multicorn   \n<!--more-->\n15. python manage.py makemigrations\n16. python manage.py migrate\n17. \n16.  python manage.py createsuperuser  创建一个 admin user\nusername: ali1\npassword: lantian\nemail: annie.li1@dell.com\n\n```\n/Desktop/Multicorn_project 🔥» python manage.py createsuperuser                                                                      vivi@vivideMacBook-Pro\nUsername (leave blank to use 'vivi'): ali1\nEmail address: annie.li1@dell.com\nPassword:\nPassword (again):\nThis password is too short. It must contain at least 8 characters.\nBypass password validation and create user anyway? [y/N]: y\nSuperuser created successfully.\n```\n\n> [一个有用的css网站](https://getbootstrap.com/docs/4.5/getting-started/introduction/)\n18.  在base.css中，把Login的 href 改成 **href=\"/admin/\"**, 即可登录\n![](_v_images/20201004152628847_575819787.png =520x)\n\nusername: TestUser   password: django123\n\n![](_v_images/20201004154036210_1241846727.png =220x)\n\n19. models.py\n\n\n```pythonx\nfrom django.db import models\nfrom django.utils import timezone\nfrom django.contrib.auth.models import User\n\nclass Post(models.Model):\n    title = models.CharField(max_length=100)\n    content = models.TextField()\n    # auto_now, auto_now_add, default\n    date_posted = models.DateTimeField(default=timezone.now)\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\n```\n\n\n20. python manage.py makemigrations    muticorn -> migrations -> 0001_initial.py & __init__.py\n在 0001_initial.py中是 建表语句\n\n```\n~/Desktop/Multicorn_project 🔥» python manage.py makemigrations                                                                       vivi@vivideMacBook-Pro\nMigrations for 'multicorn':\n  multicorn/migrations/0001_initial.py\n    - Create model Post\n```\n\n21.  python manage.py sqlmigrate multicorn 0001_initial  \n执行建表语句并且commit 到db中\n\n```\n~/Desktop/Multicorn_project 🔥» python manage.py sqlmigrate multicorn 0001_initial                                                    vivi@vivideMacBook-Pro\nBEGIN;\n--\n-- Create model Post\n--\nCREATE TABLE \"multicorn_post\" (\"id\" integer NOT NULL PRIMARY KEY AUTOINCREMENT, \"title\" varchar(100) NOT NULL, \"content\" text NOT NULL, \"date_posted\" datetime NOT NULL, \"author_id\" integer NOT NULL REFERENCES \"auth_user\" (\"id\") DEFERRABLE INITIALLY DEFERRED);\nCREATE INDEX \"multicorn_post_author_id_82a8e3b2\" ON \"multicorn_post\" (\"author_id\");\nCOMMIT;\n```\n22. python manage.py migrate\n```\n~/Desktop/Multicorn_project 🔥» python manage.py migrate                                   vivi@vivideMacBook-Pro\nOperations to perform:\n  Apply all migrations: admin, auth, contenttypes, multicorn, sessions\nRunning migrations:\n  Applying multicorn.0001_initial... OK\n```\n\n23. 进入 django shell 模式\n24. python manage.py shell\n\n```python\nfrom multicorn.models import Post\nfrom django.contrib.auth.models import User\nUser.objects.all()\n\n>> <QuerySet [<User: ali1>, <User: TestUser>]>\n```\n\n可以在shell模式下，筛选\n    1. User.objects.all()        -->     <QuerySet [<User: ali1>, <User: TestUser>]>\n    2. User.objects.first()         -->           <User: ali1>\n    3. User.objects.filter(username='ali1')            -->               <QuerySet [<User: ali1>]>\n    4. User.objects.filter(username='ali1').first()      -->           <User: ali1>\n\n可以 赋值 user 做各种操作：\n    1. user = User.objects.filter(username='ali1').first() \n        ![](_v_images/20201004221441020_1148517328.png =300x)\n    2. user.id \n    3. user.pk\n    4. user = User.objects.get(id=1)\n    5. user   --->   <User: ali1>\n    ![](_v_images/20201004222758993_1547712460.png =200x)\nctrl + l  python中的清屏\n\n可以给新表 Post 增加数据：\n```python\n>>> Post.objects.all()\n<QuerySet []>\n>>> post_1 = Post(title='blog 1', content='First Post Content!', author=user)\n>>> Post.objects.all()\n<QuerySet []>\n>>> post_1.save()\n>>> Post.objects.all()\n<QuerySet [<Post: Post object (1)>]>\n```\n25. 因为打印出来的 Post.objects.all()  没有展示title\n进入 multicorn -> models.py  在class Post中添加\ndef __str__(self):\n        return self.title\n\n```python\nclass Post(models.Model):\n    title = models.CharField(max_length=100)\n    content = models.TextField()\n    # auto_now, auto_now_add, default\n    date_posted = models.DateTimeField(default=timezone.now)\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.title\n```\n\n\n26. 重新打开shell：\n```python\npython manage.py shell\n>>> from multicorn.models import Post\n>>> from django.contrib.auth.models import User\n>>> Post.objects.all()\n<QuerySet [<Post: blog 1>]>\n```\n\n27. 添加第二个blog,  注意`post_2.save()`, 注意 `author_id = user.id`\n\n```python\n>>> user = User.objects.filter(username='ali1').first()\n>>> user\n<User: ali1>\n>>> post_2 = Post(title='Blog 2', content='Second Post Content!', author=user)\n>>> post_2 = Post(title='Blog 2', content='Second Post Content!', author_id=user.id)\n>>> post_2.save()\n>>> Post.objects.all()\n<QuerySet [<Post: blog 1>, <Post: Blog 2>]>\n>>>\n```\n28. 可以查看post的各种属性，包括 `date_posted`,  和 `内建的user`, 和 `email`\n```python\n>>> Post.objects.all()\n<QuerySet [<Post: blog 1>, <Post: Blog 2>]>\n>>> post = Post.objects.first()\n>>> post.content\n'First Post Content!'\n>>> post.date_posted\ndatetime.datetime(2020, 10, 4, 14, 30, 35, 354395, tzinfo=<UTC>)\n>>> post.author\n<User: ali1>\n>>> post.author.email\n'annie.li1@dell.com'\n```\n29. 可以查看同一个user的 所有 Post\n\n\n```python\n>>> user.post_set\n<django.db.models.fields.related_descriptors.create_reverse_many_to_one_manager.<locals>.RelatedManager object at 0x7ff829552640>\n>>> user.post_set.all()\n<QuerySet [<Post: blog 1>, <Post: Blog 2>]>\n```\n30. 可以用 user 来create 第三个blog，并且，无需像调用Post那样 `调用save来保存`\n\n```python\n>>> user.post_set.all()\n<QuerySet [<Post: blog 1>, <Post: Blog 2>]>\n>>> user.post_set.create(title='Blog 3', content='Third Post Content!')\n<Post: Blog 3>\n>>> user.post_set.all()\n<QuerySet [<Post: blog 1>, <Post: Blog 2>, <Post: Blog 3>]>\n>>> Post.objects.all()\n<QuerySet [<Post: blog 1>, <Post: Blog 2>, <Post: Blog 3>]>\n```\n31. 回到views里改代码，把dummy data 换成 DB中的Post， 然后傻眼了哈哈哈\n因为，我之前dummy data 用的字段是工作中的， 和templates 里的 html 兼容\n现在要回到， home 中，把  for post in posts_parameters_key 下的字段都换成与Post表一致的内容\n\n**views.py**\n\n```python\ndef home(request):\n    context = {\n        # 把 嵌套在views.py中的dummy data posts 换成了DB data Post.objects.all()\n        #'posts_parameters_key': posts\n        'posts_parameters_key': Post.objects.all()\n    }\n    return render(request, 'multicorn/home.html', context)\n\n```\n31. 重新启动网站， python manage.py runserver 9999\n![](_v_images/20201004231145556_2081382756.png =300x)\n\n31.1 \n\n```html\n<small class=\"text-muted\">{{ post.date_posted | date:\"F d, Y\" }}</small>\n```\n![](_v_images/20201004231458499_7661096.png =200x)\n\n```html\n<small class=\"text-muted\">{{ post.date_posted }}</small>\n```\n\n![](_v_images/20201004231410304_1438854109.png =200x)\n\n\n32.  进入admin.py 注册Post， 这样就可以在admin 页面看到Post的 blog了\n\n```python\nfrom django.contrib import admin\nfrom .models import Post\n\nadmin.site.register(Post)\n```\n \n![](_v_images/20201004233353387_2058505299.png =300x)\n\n变更一下 blog3的 author， 回到multicorn/home中，发现作者已变\n![](_v_images/20201004233623918_1337007123.png =200x)\n","slug":"django","published":1,"updated":"2023-02-11T12:33:59.481Z","comments":1,"photos":[],"link":"","_id":"cldzyok700003c6oa1rrqfj83","content":"<h1 id=\"1-django\"><a href=\"#1-django\" class=\"headerlink\" title=\"1. django\"></a>1. django</h1><ol>\n<li><p>pip3.8 install djangon</p>\n</li>\n<li><p>python3.8 -m django –version</p>\n</li>\n<li><p>django-admin</p>\n</li>\n<li><p>django-admin startproject  <del>myprojectname</del>  Multicorn_project  | on desktop</p>\n</li>\n<li><p>cd <del>myprojectname</del> Multicorn_project</p>\n</li>\n<li><p>tree<br>![](_v_images/20201001165628417_1726437634.png =200x)</p>\n</li>\n<li><p>python manage.py runserver</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">October 01, 2020 - 08:57:22</span><br><span class=\"line\">Django version 3.1.2, using settings &#x27;Multicorn_project.settings&#x27;</span><br><span class=\"line\">Starting development server at http://127.0.0.1:8000/</span><br></pre></td></tr></table></figure></li>\n<li><p>python manage.py runserver 9999   | grep 端口</p>\n</li>\n<li><p>python manage.py startapp <del>yourappname</del> mouticorn</p>\n</li>\n<li><p>dirs:   multicorn -&gt; templates -&gt; multicorn -&gt; 2 files: home.html  and multicornjson.html</p>\n</li>\n<li><p>in home.html,  just input “html + tab”</p>\n</li>\n<li><p>look at the apps.py in the multicorn app </p>\n</li>\n<li><p>in project settings.py,  add multicorn.apps.MulticornConfig into the top of ‘INSTALLED_APPS’<br>![](_v_images/20201003160503076_808966192.png =320x)</p>\n</li>\n<li><p>dirs: multicorn -&gt; static -&gt; multicorn   </p>\n<span id=\"more\"></span></li>\n<li><p>python manage.py makemigrations</p>\n</li>\n<li><p>python manage.py migrate</p>\n</li>\n<li></li>\n<li><p> python manage.py createsuperuser  创建一个 admin user<br>username: ali1<br>password: lantian<br>email: <a href=\"mailto:&#x61;&#x6e;&#x6e;&#x69;&#101;&#46;&#x6c;&#105;&#x31;&#64;&#x64;&#x65;&#x6c;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#x61;&#x6e;&#x6e;&#x69;&#101;&#46;&#x6c;&#105;&#x31;&#64;&#x64;&#x65;&#x6c;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/Desktop/Multicorn_project 🔥» python manage.py createsuperuser                                                                      vivi@vivideMacBook-Pro</span><br><span class=\"line\">Username (leave blank to use &#x27;vivi&#x27;): ali1</span><br><span class=\"line\">Email address: annie.li1@dell.com</span><br><span class=\"line\">Password:</span><br><span class=\"line\">Password (again):</span><br><span class=\"line\">This password is too short. It must contain at least 8 characters.</span><br><span class=\"line\">Bypass password validation and create user anyway? [y/N]: y</span><br><span class=\"line\">Superuser created successfully.</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://getbootstrap.com/docs/4.5/getting-started/introduction/\">一个有用的css网站</a><br>18.  在base.css中，把Login的 href 改成 <strong>href=”/admin/“</strong>, 即可登录<br>![](_v_images/20201004152628847_575819787.png =520x)</p>\n</blockquote>\n<p>username: TestUser   password: django123</p>\n<p>![](_v_images/20201004154036210_1241846727.png =220x)</p>\n<ol start=\"19\">\n<li>models.py</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.db import models</span><br><span class=\"line\">from django.utils import timezone</span><br><span class=\"line\">from django.contrib.auth.models import User</span><br><span class=\"line\"></span><br><span class=\"line\">class Post(models.Model):</span><br><span class=\"line\">    title = models.CharField(max_length=100)</span><br><span class=\"line\">    content = models.TextField()</span><br><span class=\"line\">    # auto_now, auto_now_add, default</span><br><span class=\"line\">    date_posted = models.DateTimeField(default=timezone.now)</span><br><span class=\"line\">    author = models.ForeignKey(User, on_delete=models.CASCADE)</span><br></pre></td></tr></table></figure>\n\n\n<ol start=\"20\">\n<li>python manage.py makemigrations    muticorn -&gt; migrations -&gt; 0001_initial.py &amp; <strong>init</strong>.py<br>在 0001_initial.py中是 建表语句</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Desktop/Multicorn_project 🔥» python manage.py makemigrations                                                                       vivi@vivideMacBook-Pro</span><br><span class=\"line\">Migrations for &#x27;multicorn&#x27;:</span><br><span class=\"line\">  multicorn/migrations/0001_initial.py</span><br><span class=\"line\">    - Create model Post</span><br></pre></td></tr></table></figure>\n\n<ol start=\"21\">\n<li> python manage.py sqlmigrate multicorn 0001_initial<br>执行建表语句并且commit 到db中</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Desktop/Multicorn_project 🔥» python manage.py sqlmigrate multicorn 0001_initial                                                    vivi@vivideMacBook-Pro</span><br><span class=\"line\">BEGIN;</span><br><span class=\"line\">--</span><br><span class=\"line\">-- Create model Post</span><br><span class=\"line\">--</span><br><span class=\"line\">CREATE TABLE &quot;multicorn_post&quot; (&quot;id&quot; integer NOT NULL PRIMARY KEY AUTOINCREMENT, &quot;title&quot; varchar(100) NOT NULL, &quot;content&quot; text NOT NULL, &quot;date_posted&quot; datetime NOT NULL, &quot;author_id&quot; integer NOT NULL REFERENCES &quot;auth_user&quot; (&quot;id&quot;) DEFERRABLE INITIALLY DEFERRED);</span><br><span class=\"line\">CREATE INDEX &quot;multicorn_post_author_id_82a8e3b2&quot; ON &quot;multicorn_post&quot; (&quot;author_id&quot;);</span><br><span class=\"line\">COMMIT;</span><br></pre></td></tr></table></figure>\n<ol start=\"22\">\n<li><p>python manage.py migrate</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Desktop/Multicorn_project 🔥» python manage.py migrate                                   vivi@vivideMacBook-Pro</span><br><span class=\"line\">Operations to perform:</span><br><span class=\"line\">  Apply all migrations: admin, auth, contenttypes, multicorn, sessions</span><br><span class=\"line\">Running migrations:</span><br><span class=\"line\">  Applying multicorn.0001_initial... OK</span><br></pre></td></tr></table></figure></li>\n<li><p>进入 django shell 模式</p>\n</li>\n<li><p>python manage.py shell</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> multicorn.models <span class=\"keyword\">import</span> Post</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.contrib.auth.models <span class=\"keyword\">import</span> User</span><br><span class=\"line\">User.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt; &lt;QuerySet [&lt;User: ali1&gt;, &lt;User: TestUser&gt;]&gt;</span><br></pre></td></tr></table></figure>\n\n<p>可以在shell模式下，筛选<br>    1. User.objects.all()        –&gt;     &lt;QuerySet [&lt;User: ali1&gt;, &lt;User: TestUser&gt;]&gt;<br>    2. User.objects.first()         –&gt;           &lt;User: ali1&gt;<br>    3. User.objects.filter(username=’ali1’)            –&gt;               &lt;QuerySet [&lt;User: ali1&gt;]&gt;<br>    4. User.objects.filter(username=’ali1’).first()      –&gt;           &lt;User: ali1&gt;</p>\n<p>可以 赋值 user 做各种操作：<br>    1. user = User.objects.filter(username=’ali1’).first()<br>        ![](_v_images/20201004221441020_1148517328.png =300x)<br>    2. user.id<br>    3. user.pk<br>    4. user = User.objects.get(id=1)<br>    5. user   —&gt;   &lt;User: ali1&gt;<br>    ![](_v_images/20201004222758993_1547712460.png =200x)<br>ctrl + l  python中的清屏</p>\n<p>可以给新表 Post 增加数据：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet []&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post_1 = Post(title=<span class=\"string\">&#x27;blog 1&#x27;</span>, content=<span class=\"string\">&#x27;First Post Content!&#x27;</span>, author=user)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet []&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post_1.save()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: Post <span class=\"built_in\">object</span> (<span class=\"number\">1</span>)&gt;]&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"25\">\n<li>因为打印出来的 Post.objects.all()  没有展示title<br>进入 multicorn -&gt; models.py  在class Post中添加<br>def <strong>str</strong>(self):<pre><code>return self.title\n</code></pre>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Post</span>(models.Model):</span><br><span class=\"line\">    title = models.CharField(max_length=<span class=\"number\">100</span>)</span><br><span class=\"line\">    content = models.TextField()</span><br><span class=\"line\">    <span class=\"comment\"># auto_now, auto_now_add, default</span></span><br><span class=\"line\">    date_posted = models.DateTimeField(default=timezone.now)</span><br><span class=\"line\">    author = models.ForeignKey(User, on_delete=models.CASCADE)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.title</span><br></pre></td></tr></table></figure>\n\n\n<ol start=\"26\">\n<li><p>重新打开shell：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py shell</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> multicorn.models <span class=\"keyword\">import</span> Post</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> django.contrib.auth.models <span class=\"keyword\">import</span> User</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;]&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p>添加第二个blog,  注意<code>post_2.save()</code>, 注意 <code>author_id = user.id</code></p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user = User.objects.<span class=\"built_in\">filter</span>(username=<span class=\"string\">&#x27;ali1&#x27;</span>).first()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user</span><br><span class=\"line\">&lt;User: ali1&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post_2 = Post(title=<span class=\"string\">&#x27;Blog 2&#x27;</span>, content=<span class=\"string\">&#x27;Second Post Content!&#x27;</span>, author=user)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post_2 = Post(title=<span class=\"string\">&#x27;Blog 2&#x27;</span>, content=<span class=\"string\">&#x27;Second Post Content!&#x27;</span>, author_id=user.<span class=\"built_in\">id</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post_2.save()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;, &lt;Post: Blog <span class=\"number\">2</span>&gt;]&gt;</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"28\">\n<li>可以查看post的各种属性，包括 <code>date_posted</code>,  和 <code>内建的user</code>, 和 <code>email</code><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;, &lt;Post: Blog <span class=\"number\">2</span>&gt;]&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post = Post.objects.first()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post.content</span><br><span class=\"line\"><span class=\"string\">&#x27;First Post Content!&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post.date_posted</span><br><span class=\"line\">datetime.datetime(<span class=\"number\">2020</span>, <span class=\"number\">10</span>, <span class=\"number\">4</span>, <span class=\"number\">14</span>, <span class=\"number\">30</span>, <span class=\"number\">35</span>, <span class=\"number\">354395</span>, tzinfo=&lt;UTC&gt;)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post.author</span><br><span class=\"line\">&lt;User: ali1&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post.author.email</span><br><span class=\"line\"><span class=\"string\">&#x27;annie.li1@dell.com&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li>可以查看同一个user的 所有 Post</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user.post_set</span><br><span class=\"line\">&lt;django.db.models.fields.related_descriptors.create_reverse_many_to_one_manager.&lt;<span class=\"built_in\">locals</span>&gt;.RelatedManager <span class=\"built_in\">object</span> at <span class=\"number\">0x7ff829552640</span>&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user.post_set.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;, &lt;Post: Blog <span class=\"number\">2</span>&gt;]&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"30\">\n<li>可以用 user 来create 第三个blog，并且，无需像调用Post那样 <code>调用save来保存</code></li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user.post_set.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;, &lt;Post: Blog <span class=\"number\">2</span>&gt;]&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user.post_set.create(title=<span class=\"string\">&#x27;Blog 3&#x27;</span>, content=<span class=\"string\">&#x27;Third Post Content!&#x27;</span>)</span><br><span class=\"line\">&lt;Post: Blog <span class=\"number\">3</span>&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user.post_set.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;, &lt;Post: Blog <span class=\"number\">2</span>&gt;, &lt;Post: Blog <span class=\"number\">3</span>&gt;]&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;, &lt;Post: Blog <span class=\"number\">2</span>&gt;, &lt;Post: Blog <span class=\"number\">3</span>&gt;]&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"31\">\n<li>回到views里改代码，把dummy data 换成 DB中的Post， 然后傻眼了哈哈哈<br>因为，我之前dummy data 用的字段是工作中的， 和templates 里的 html 兼容<br>现在要回到， home 中，把  for post in posts_parameters_key 下的字段都换成与Post表一致的内容</li>\n</ol>\n<p><strong>views.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">home</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    context = &#123;</span><br><span class=\"line\">        <span class=\"comment\"># 把 嵌套在views.py中的dummy data posts 换成了DB data Post.objects.all()</span></span><br><span class=\"line\">        <span class=\"comment\">#&#x27;posts_parameters_key&#x27;: posts</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;posts_parameters_key&#x27;</span>: Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request, <span class=\"string\">&#x27;multicorn/home.html&#x27;</span>, context)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ol start=\"31\">\n<li>重新启动网站， python manage.py runserver 9999<br>![](_v_images/20201004231145556_2081382756.png =300x)</li>\n</ol>\n<p>31.1 </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">small</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-muted&quot;</span>&gt;</span>&#123;&#123; post.date_posted | date:&quot;F d, Y&quot; &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>![](_v_images/20201004231458499_7661096.png =200x)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">small</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-muted&quot;</span>&gt;</span>&#123;&#123; post.date_posted &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>![](_v_images/20201004231410304_1438854109.png =200x)</p>\n<ol start=\"32\">\n<li> 进入admin.py 注册Post， 这样就可以在admin 页面看到Post的 blog了</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.contrib <span class=\"keyword\">import</span> admin</span><br><span class=\"line\"><span class=\"keyword\">from</span> .models <span class=\"keyword\">import</span> Post</span><br><span class=\"line\"></span><br><span class=\"line\">admin.site.register(Post)</span><br></pre></td></tr></table></figure>\n<p>![](_v_images/20201004233353387_2058505299.png =300x)</p>\n<p>变更一下 blog3的 author， 回到multicorn/home中，发现作者已变<br>![](_v_images/20201004233623918_1337007123.png =200x)</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"1-django\"><a href=\"#1-django\" class=\"headerlink\" title=\"1. django\"></a>1. django</h1><ol>\n<li><p>pip3.8 install djangon</p>\n</li>\n<li><p>python3.8 -m django –version</p>\n</li>\n<li><p>django-admin</p>\n</li>\n<li><p>django-admin startproject  <del>myprojectname</del>  Multicorn_project  | on desktop</p>\n</li>\n<li><p>cd <del>myprojectname</del> Multicorn_project</p>\n</li>\n<li><p>tree<br>![](_v_images/20201001165628417_1726437634.png =200x)</p>\n</li>\n<li><p>python manage.py runserver</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">October 01, 2020 - 08:57:22</span><br><span class=\"line\">Django version 3.1.2, using settings &#x27;Multicorn_project.settings&#x27;</span><br><span class=\"line\">Starting development server at http://127.0.0.1:8000/</span><br></pre></td></tr></table></figure></li>\n<li><p>python manage.py runserver 9999   | grep 端口</p>\n</li>\n<li><p>python manage.py startapp <del>yourappname</del> mouticorn</p>\n</li>\n<li><p>dirs:   multicorn -&gt; templates -&gt; multicorn -&gt; 2 files: home.html  and multicornjson.html</p>\n</li>\n<li><p>in home.html,  just input “html + tab”</p>\n</li>\n<li><p>look at the apps.py in the multicorn app </p>\n</li>\n<li><p>in project settings.py,  add multicorn.apps.MulticornConfig into the top of ‘INSTALLED_APPS’<br>![](_v_images/20201003160503076_808966192.png =320x)</p>\n</li>\n<li><p>dirs: multicorn -&gt; static -&gt; multicorn   </p>","more":"</li>\n<li><p>python manage.py makemigrations</p>\n</li>\n<li><p>python manage.py migrate</p>\n</li>\n<li></li>\n<li><p> python manage.py createsuperuser  创建一个 admin user<br>username: ali1<br>password: lantian<br>email: <a href=\"mailto:&#x61;&#x6e;&#x6e;&#x69;&#101;&#46;&#x6c;&#105;&#x31;&#64;&#x64;&#x65;&#x6c;&#x6c;&#x2e;&#x63;&#111;&#x6d;\">&#x61;&#x6e;&#x6e;&#x69;&#101;&#46;&#x6c;&#105;&#x31;&#64;&#x64;&#x65;&#x6c;&#x6c;&#x2e;&#x63;&#111;&#x6d;</a></p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/Desktop/Multicorn_project 🔥» python manage.py createsuperuser                                                                      vivi@vivideMacBook-Pro</span><br><span class=\"line\">Username (leave blank to use &#x27;vivi&#x27;): ali1</span><br><span class=\"line\">Email address: annie.li1@dell.com</span><br><span class=\"line\">Password:</span><br><span class=\"line\">Password (again):</span><br><span class=\"line\">This password is too short. It must contain at least 8 characters.</span><br><span class=\"line\">Bypass password validation and create user anyway? [y/N]: y</span><br><span class=\"line\">Superuser created successfully.</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><a href=\"https://getbootstrap.com/docs/4.5/getting-started/introduction/\">一个有用的css网站</a><br>18.  在base.css中，把Login的 href 改成 <strong>href=”/admin/“</strong>, 即可登录<br>![](_v_images/20201004152628847_575819787.png =520x)</p>\n</blockquote>\n<p>username: TestUser   password: django123</p>\n<p>![](_v_images/20201004154036210_1241846727.png =220x)</p>\n<ol start=\"19\">\n<li>models.py</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.db import models</span><br><span class=\"line\">from django.utils import timezone</span><br><span class=\"line\">from django.contrib.auth.models import User</span><br><span class=\"line\"></span><br><span class=\"line\">class Post(models.Model):</span><br><span class=\"line\">    title = models.CharField(max_length=100)</span><br><span class=\"line\">    content = models.TextField()</span><br><span class=\"line\">    # auto_now, auto_now_add, default</span><br><span class=\"line\">    date_posted = models.DateTimeField(default=timezone.now)</span><br><span class=\"line\">    author = models.ForeignKey(User, on_delete=models.CASCADE)</span><br></pre></td></tr></table></figure>\n\n\n<ol start=\"20\">\n<li>python manage.py makemigrations    muticorn -&gt; migrations -&gt; 0001_initial.py &amp; <strong>init</strong>.py<br>在 0001_initial.py中是 建表语句</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Desktop/Multicorn_project 🔥» python manage.py makemigrations                                                                       vivi@vivideMacBook-Pro</span><br><span class=\"line\">Migrations for &#x27;multicorn&#x27;:</span><br><span class=\"line\">  multicorn/migrations/0001_initial.py</span><br><span class=\"line\">    - Create model Post</span><br></pre></td></tr></table></figure>\n\n<ol start=\"21\">\n<li> python manage.py sqlmigrate multicorn 0001_initial<br>执行建表语句并且commit 到db中</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Desktop/Multicorn_project 🔥» python manage.py sqlmigrate multicorn 0001_initial                                                    vivi@vivideMacBook-Pro</span><br><span class=\"line\">BEGIN;</span><br><span class=\"line\">--</span><br><span class=\"line\">-- Create model Post</span><br><span class=\"line\">--</span><br><span class=\"line\">CREATE TABLE &quot;multicorn_post&quot; (&quot;id&quot; integer NOT NULL PRIMARY KEY AUTOINCREMENT, &quot;title&quot; varchar(100) NOT NULL, &quot;content&quot; text NOT NULL, &quot;date_posted&quot; datetime NOT NULL, &quot;author_id&quot; integer NOT NULL REFERENCES &quot;auth_user&quot; (&quot;id&quot;) DEFERRABLE INITIALLY DEFERRED);</span><br><span class=\"line\">CREATE INDEX &quot;multicorn_post_author_id_82a8e3b2&quot; ON &quot;multicorn_post&quot; (&quot;author_id&quot;);</span><br><span class=\"line\">COMMIT;</span><br></pre></td></tr></table></figure>\n<ol start=\"22\">\n<li><p>python manage.py migrate</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Desktop/Multicorn_project 🔥» python manage.py migrate                                   vivi@vivideMacBook-Pro</span><br><span class=\"line\">Operations to perform:</span><br><span class=\"line\">  Apply all migrations: admin, auth, contenttypes, multicorn, sessions</span><br><span class=\"line\">Running migrations:</span><br><span class=\"line\">  Applying multicorn.0001_initial... OK</span><br></pre></td></tr></table></figure></li>\n<li><p>进入 django shell 模式</p>\n</li>\n<li><p>python manage.py shell</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> multicorn.models <span class=\"keyword\">import</span> Post</span><br><span class=\"line\"><span class=\"keyword\">from</span> django.contrib.auth.models <span class=\"keyword\">import</span> User</span><br><span class=\"line\">User.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt; &lt;QuerySet [&lt;User: ali1&gt;, &lt;User: TestUser&gt;]&gt;</span><br></pre></td></tr></table></figure>\n\n<p>可以在shell模式下，筛选<br>    1. User.objects.all()        –&gt;     &lt;QuerySet [&lt;User: ali1&gt;, &lt;User: TestUser&gt;]&gt;<br>    2. User.objects.first()         –&gt;           &lt;User: ali1&gt;<br>    3. User.objects.filter(username=’ali1’)            –&gt;               &lt;QuerySet [&lt;User: ali1&gt;]&gt;<br>    4. User.objects.filter(username=’ali1’).first()      –&gt;           &lt;User: ali1&gt;</p>\n<p>可以 赋值 user 做各种操作：<br>    1. user = User.objects.filter(username=’ali1’).first()<br>        ![](_v_images/20201004221441020_1148517328.png =300x)<br>    2. user.id<br>    3. user.pk<br>    4. user = User.objects.get(id=1)<br>    5. user   —&gt;   &lt;User: ali1&gt;<br>    ![](_v_images/20201004222758993_1547712460.png =200x)<br>ctrl + l  python中的清屏</p>\n<p>可以给新表 Post 增加数据：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet []&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post_1 = Post(title=<span class=\"string\">&#x27;blog 1&#x27;</span>, content=<span class=\"string\">&#x27;First Post Content!&#x27;</span>, author=user)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet []&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post_1.save()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: Post <span class=\"built_in\">object</span> (<span class=\"number\">1</span>)&gt;]&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"25\">\n<li>因为打印出来的 Post.objects.all()  没有展示title<br>进入 multicorn -&gt; models.py  在class Post中添加<br>def <strong>str</strong>(self):<pre><code>return self.title\n</code></pre>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Post</span>(models.Model):</span><br><span class=\"line\">    title = models.CharField(max_length=<span class=\"number\">100</span>)</span><br><span class=\"line\">    content = models.TextField()</span><br><span class=\"line\">    <span class=\"comment\"># auto_now, auto_now_add, default</span></span><br><span class=\"line\">    date_posted = models.DateTimeField(default=timezone.now)</span><br><span class=\"line\">    author = models.ForeignKey(User, on_delete=models.CASCADE)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> self.title</span><br></pre></td></tr></table></figure>\n\n\n<ol start=\"26\">\n<li><p>重新打开shell：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python manage.py shell</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> multicorn.models <span class=\"keyword\">import</span> Post</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> django.contrib.auth.models <span class=\"keyword\">import</span> User</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;]&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p>添加第二个blog,  注意<code>post_2.save()</code>, 注意 <code>author_id = user.id</code></p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user = User.objects.<span class=\"built_in\">filter</span>(username=<span class=\"string\">&#x27;ali1&#x27;</span>).first()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user</span><br><span class=\"line\">&lt;User: ali1&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post_2 = Post(title=<span class=\"string\">&#x27;Blog 2&#x27;</span>, content=<span class=\"string\">&#x27;Second Post Content!&#x27;</span>, author=user)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post_2 = Post(title=<span class=\"string\">&#x27;Blog 2&#x27;</span>, content=<span class=\"string\">&#x27;Second Post Content!&#x27;</span>, author_id=user.<span class=\"built_in\">id</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post_2.save()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;, &lt;Post: Blog <span class=\"number\">2</span>&gt;]&gt;</span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"28\">\n<li>可以查看post的各种属性，包括 <code>date_posted</code>,  和 <code>内建的user</code>, 和 <code>email</code><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;, &lt;Post: Blog <span class=\"number\">2</span>&gt;]&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post = Post.objects.first()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post.content</span><br><span class=\"line\"><span class=\"string\">&#x27;First Post Content!&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post.date_posted</span><br><span class=\"line\">datetime.datetime(<span class=\"number\">2020</span>, <span class=\"number\">10</span>, <span class=\"number\">4</span>, <span class=\"number\">14</span>, <span class=\"number\">30</span>, <span class=\"number\">35</span>, <span class=\"number\">354395</span>, tzinfo=&lt;UTC&gt;)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post.author</span><br><span class=\"line\">&lt;User: ali1&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>post.author.email</span><br><span class=\"line\"><span class=\"string\">&#x27;annie.li1@dell.com&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li>可以查看同一个user的 所有 Post</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user.post_set</span><br><span class=\"line\">&lt;django.db.models.fields.related_descriptors.create_reverse_many_to_one_manager.&lt;<span class=\"built_in\">locals</span>&gt;.RelatedManager <span class=\"built_in\">object</span> at <span class=\"number\">0x7ff829552640</span>&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user.post_set.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;, &lt;Post: Blog <span class=\"number\">2</span>&gt;]&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"30\">\n<li>可以用 user 来create 第三个blog，并且，无需像调用Post那样 <code>调用save来保存</code></li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user.post_set.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;, &lt;Post: Blog <span class=\"number\">2</span>&gt;]&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user.post_set.create(title=<span class=\"string\">&#x27;Blog 3&#x27;</span>, content=<span class=\"string\">&#x27;Third Post Content!&#x27;</span>)</span><br><span class=\"line\">&lt;Post: Blog <span class=\"number\">3</span>&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user.post_set.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;, &lt;Post: Blog <span class=\"number\">2</span>&gt;, &lt;Post: Blog <span class=\"number\">3</span>&gt;]&gt;</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">&lt;QuerySet [&lt;Post: blog <span class=\"number\">1</span>&gt;, &lt;Post: Blog <span class=\"number\">2</span>&gt;, &lt;Post: Blog <span class=\"number\">3</span>&gt;]&gt;</span><br></pre></td></tr></table></figure>\n<ol start=\"31\">\n<li>回到views里改代码，把dummy data 换成 DB中的Post， 然后傻眼了哈哈哈<br>因为，我之前dummy data 用的字段是工作中的， 和templates 里的 html 兼容<br>现在要回到， home 中，把  for post in posts_parameters_key 下的字段都换成与Post表一致的内容</li>\n</ol>\n<p><strong>views.py</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">home</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    context = &#123;</span><br><span class=\"line\">        <span class=\"comment\"># 把 嵌套在views.py中的dummy data posts 换成了DB data Post.objects.all()</span></span><br><span class=\"line\">        <span class=\"comment\">#&#x27;posts_parameters_key&#x27;: posts</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;posts_parameters_key&#x27;</span>: Post.objects.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render(request, <span class=\"string\">&#x27;multicorn/home.html&#x27;</span>, context)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ol start=\"31\">\n<li>重新启动网站， python manage.py runserver 9999<br>![](_v_images/20201004231145556_2081382756.png =300x)</li>\n</ol>\n<p>31.1 </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">small</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-muted&quot;</span>&gt;</span>&#123;&#123; post.date_posted | date:&quot;F d, Y&quot; &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>![](_v_images/20201004231458499_7661096.png =200x)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">small</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-muted&quot;</span>&gt;</span>&#123;&#123; post.date_posted &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>![](_v_images/20201004231410304_1438854109.png =200x)</p>\n<ol start=\"32\">\n<li> 进入admin.py 注册Post， 这样就可以在admin 页面看到Post的 blog了</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> django.contrib <span class=\"keyword\">import</span> admin</span><br><span class=\"line\"><span class=\"keyword\">from</span> .models <span class=\"keyword\">import</span> Post</span><br><span class=\"line\"></span><br><span class=\"line\">admin.site.register(Post)</span><br></pre></td></tr></table></figure>\n<p>![](_v_images/20201004233353387_2058505299.png =300x)</p>\n<p>变更一下 blog3的 author， 回到multicorn/home中，发现作者已变<br>![](_v_images/20201004233623918_1337007123.png =200x)</p>"},{"layout":"posts","title":"es-suse","date":"2023-02-11T12:39:46.000Z","_content":"\n### 1. `hostnamectl set-hostname ES-suse`\n\n### 2. `reboot`\n\n\n### 3. change the network config to generate ip\n\n#### 3.1 `vi /etc/sysconfig/network/ifcfg-eth0`\n#### 3.2 add one line `ZONE=public`\n  ```\n  \"/etc/sysconfig/network/ifcfg-eth0\" 3L, 46B                                                                                        3,11         \n  BOOTPROTO='dhcp'\n  STARTMODE='auto'\n  ZONE=public\n  ~\n  ```\n\n### 4. `zypper update`\n### 5. `zypper install net-tools-deprecated`\n### 6. `zypper install cnf`\n### 7. `cnf yum`\n","source":"_posts/es-suse.md","raw":"---\nlayout: posts\ntitle: es-suse\ndate: 2023-02-11 20:39:46\ntags: ES \ncategories: Teckknowledge\n---\n\n### 1. `hostnamectl set-hostname ES-suse`\n\n### 2. `reboot`\n\n\n### 3. change the network config to generate ip\n\n#### 3.1 `vi /etc/sysconfig/network/ifcfg-eth0`\n#### 3.2 add one line `ZONE=public`\n  ```\n  \"/etc/sysconfig/network/ifcfg-eth0\" 3L, 46B                                                                                        3,11         \n  BOOTPROTO='dhcp'\n  STARTMODE='auto'\n  ZONE=public\n  ~\n  ```\n\n### 4. `zypper update`\n### 5. `zypper install net-tools-deprecated`\n### 6. `zypper install cnf`\n### 7. `cnf yum`\n","slug":"es-suse","published":1,"updated":"2023-02-11T12:38:50.595Z","comments":1,"photos":[],"link":"","_id":"cldzyok7d0007c6oacthk5ch8","content":"<h3 id=\"1-hostnamectl-set-hostname-ES-suse\"><a href=\"#1-hostnamectl-set-hostname-ES-suse\" class=\"headerlink\" title=\"1. hostnamectl set-hostname ES-suse\"></a>1. <code>hostnamectl set-hostname ES-suse</code></h3><h3 id=\"2-reboot\"><a href=\"#2-reboot\" class=\"headerlink\" title=\"2. reboot\"></a>2. <code>reboot</code></h3><h3 id=\"3-change-the-network-config-to-generate-ip\"><a href=\"#3-change-the-network-config-to-generate-ip\" class=\"headerlink\" title=\"3. change the network config to generate ip\"></a>3. change the network config to generate ip</h3><h4 id=\"3-1-vi-etc-sysconfig-network-ifcfg-eth0\"><a href=\"#3-1-vi-etc-sysconfig-network-ifcfg-eth0\" class=\"headerlink\" title=\"3.1 vi /etc/sysconfig/network/ifcfg-eth0\"></a>3.1 <code>vi /etc/sysconfig/network/ifcfg-eth0</code></h4><h4 id=\"3-2-add-one-line-ZONE-public\"><a href=\"#3-2-add-one-line-ZONE-public\" class=\"headerlink\" title=\"3.2 add one line ZONE=public\"></a>3.2 add one line <code>ZONE=public</code></h4>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;/etc/sysconfig/network/ifcfg-eth0&quot; 3L, 46B                                                                                        3,11         </span><br><span class=\"line\">BOOTPROTO=&#x27;dhcp&#x27;</span><br><span class=\"line\">STARTMODE=&#x27;auto&#x27;</span><br><span class=\"line\">ZONE=public</span><br><span class=\"line\">~</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-zypper-update\"><a href=\"#4-zypper-update\" class=\"headerlink\" title=\"4. zypper update\"></a>4. <code>zypper update</code></h3><h3 id=\"5-zypper-install-net-tools-deprecated\"><a href=\"#5-zypper-install-net-tools-deprecated\" class=\"headerlink\" title=\"5. zypper install net-tools-deprecated\"></a>5. <code>zypper install net-tools-deprecated</code></h3><h3 id=\"6-zypper-install-cnf\"><a href=\"#6-zypper-install-cnf\" class=\"headerlink\" title=\"6. zypper install cnf\"></a>6. <code>zypper install cnf</code></h3><h3 id=\"7-cnf-yum\"><a href=\"#7-cnf-yum\" class=\"headerlink\" title=\"7. cnf yum\"></a>7. <code>cnf yum</code></h3>","site":{"data":{}},"excerpt":"","more":"<h3 id=\"1-hostnamectl-set-hostname-ES-suse\"><a href=\"#1-hostnamectl-set-hostname-ES-suse\" class=\"headerlink\" title=\"1. hostnamectl set-hostname ES-suse\"></a>1. <code>hostnamectl set-hostname ES-suse</code></h3><h3 id=\"2-reboot\"><a href=\"#2-reboot\" class=\"headerlink\" title=\"2. reboot\"></a>2. <code>reboot</code></h3><h3 id=\"3-change-the-network-config-to-generate-ip\"><a href=\"#3-change-the-network-config-to-generate-ip\" class=\"headerlink\" title=\"3. change the network config to generate ip\"></a>3. change the network config to generate ip</h3><h4 id=\"3-1-vi-etc-sysconfig-network-ifcfg-eth0\"><a href=\"#3-1-vi-etc-sysconfig-network-ifcfg-eth0\" class=\"headerlink\" title=\"3.1 vi /etc/sysconfig/network/ifcfg-eth0\"></a>3.1 <code>vi /etc/sysconfig/network/ifcfg-eth0</code></h4><h4 id=\"3-2-add-one-line-ZONE-public\"><a href=\"#3-2-add-one-line-ZONE-public\" class=\"headerlink\" title=\"3.2 add one line ZONE=public\"></a>3.2 add one line <code>ZONE=public</code></h4>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;/etc/sysconfig/network/ifcfg-eth0&quot; 3L, 46B                                                                                        3,11         </span><br><span class=\"line\">BOOTPROTO=&#x27;dhcp&#x27;</span><br><span class=\"line\">STARTMODE=&#x27;auto&#x27;</span><br><span class=\"line\">ZONE=public</span><br><span class=\"line\">~</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-zypper-update\"><a href=\"#4-zypper-update\" class=\"headerlink\" title=\"4. zypper update\"></a>4. <code>zypper update</code></h3><h3 id=\"5-zypper-install-net-tools-deprecated\"><a href=\"#5-zypper-install-net-tools-deprecated\" class=\"headerlink\" title=\"5. zypper install net-tools-deprecated\"></a>5. <code>zypper install net-tools-deprecated</code></h3><h3 id=\"6-zypper-install-cnf\"><a href=\"#6-zypper-install-cnf\" class=\"headerlink\" title=\"6. zypper install cnf\"></a>6. <code>zypper install cnf</code></h3><h3 id=\"7-cnf-yum\"><a href=\"#7-cnf-yum\" class=\"headerlink\" title=\"7. cnf yum\"></a>7. <code>cnf yum</code></h3>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-02-11T12:33:59.480Z","updated":"2023-02-11T12:33:59.481Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cldzyok7h0008c6oa25j3633u","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"layout":"posts","title":"metadata","date":"2023-02-11T12:42:46.000Z","_content":"\n\n#### ask Pytest to automatically provision the environment\n`pytest --provision`\n```\nali1@remotedev-ali1-rdu:~$ pytest --provision\nlogdir 'log/helix' does not exist; fallback to '/ifs/home/ali1/.cache/helix/log'\n============================================================================== test session starts ===============================================================================\nplatform linux -- Python 3.6.9, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\nrootdir: /ifs/home/ali1\nplugins: timeout-1.4.2, helix-3.0.25, isilon-marks-0.3.3, isilon-accountant-0.4.2\ncollected 0 items / 1 error\nPassword:\n[2022-12-14 11:11:32.605863+00:00] QUEUED_FOR_ALLOCATION... waiting 30 seconds\n[2022-12-14 11:12:02.887701+00:00] QUEUED_FOR_ALLOCATION... waiting 30 seconds\n[2022-12-14 11:12:33.175448+00:00] READY\n[2022-12-14 11:12:33.499574+00:00] QUEUED_FOR_DELETION... waiting 30 seconds\n```\n\n","source":"_posts/metadata.md","raw":"---\nlayout: posts\ntitle: metadata\ndate: 2023-02-11 20:42:46\ntags: metadata \ncategories: Teckknowledge\n---\n\n\n#### ask Pytest to automatically provision the environment\n`pytest --provision`\n```\nali1@remotedev-ali1-rdu:~$ pytest --provision\nlogdir 'log/helix' does not exist; fallback to '/ifs/home/ali1/.cache/helix/log'\n============================================================================== test session starts ===============================================================================\nplatform linux -- Python 3.6.9, pytest-6.2.4, py-1.10.0, pluggy-0.13.1\nrootdir: /ifs/home/ali1\nplugins: timeout-1.4.2, helix-3.0.25, isilon-marks-0.3.3, isilon-accountant-0.4.2\ncollected 0 items / 1 error\nPassword:\n[2022-12-14 11:11:32.605863+00:00] QUEUED_FOR_ALLOCATION... waiting 30 seconds\n[2022-12-14 11:12:02.887701+00:00] QUEUED_FOR_ALLOCATION... waiting 30 seconds\n[2022-12-14 11:12:33.175448+00:00] READY\n[2022-12-14 11:12:33.499574+00:00] QUEUED_FOR_DELETION... waiting 30 seconds\n```\n\n","slug":"metadata","published":1,"updated":"2023-02-11T12:42:56.586Z","comments":1,"photos":[],"link":"","_id":"cldzyok7m0009c6oa2qaq2o68","content":"<h4 id=\"ask-Pytest-to-automatically-provision-the-environment\"><a href=\"#ask-Pytest-to-automatically-provision-the-environment\" class=\"headerlink\" title=\"ask Pytest to automatically provision the environment\"></a>ask Pytest to automatically provision the environment</h4><p><code>pytest --provision</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ali1@remotedev-ali1-rdu:~$ pytest --provision</span><br><span class=\"line\">logdir &#x27;log/helix&#x27; does not exist; fallback to &#x27;/ifs/home/ali1/.cache/helix/log&#x27;</span><br><span class=\"line\">============================================================================== test session starts ===============================================================================</span><br><span class=\"line\">platform linux -- Python 3.6.9, pytest-6.2.4, py-1.10.0, pluggy-0.13.1</span><br><span class=\"line\">rootdir: /ifs/home/ali1</span><br><span class=\"line\">plugins: timeout-1.4.2, helix-3.0.25, isilon-marks-0.3.3, isilon-accountant-0.4.2</span><br><span class=\"line\">collected 0 items / 1 error</span><br><span class=\"line\">Password:</span><br><span class=\"line\">[2022-12-14 11:11:32.605863+00:00] QUEUED_FOR_ALLOCATION... waiting 30 seconds</span><br><span class=\"line\">[2022-12-14 11:12:02.887701+00:00] QUEUED_FOR_ALLOCATION... waiting 30 seconds</span><br><span class=\"line\">[2022-12-14 11:12:33.175448+00:00] READY</span><br><span class=\"line\">[2022-12-14 11:12:33.499574+00:00] QUEUED_FOR_DELETION... waiting 30 seconds</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"ask-Pytest-to-automatically-provision-the-environment\"><a href=\"#ask-Pytest-to-automatically-provision-the-environment\" class=\"headerlink\" title=\"ask Pytest to automatically provision the environment\"></a>ask Pytest to automatically provision the environment</h4><p><code>pytest --provision</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ali1@remotedev-ali1-rdu:~$ pytest --provision</span><br><span class=\"line\">logdir &#x27;log/helix&#x27; does not exist; fallback to &#x27;/ifs/home/ali1/.cache/helix/log&#x27;</span><br><span class=\"line\">============================================================================== test session starts ===============================================================================</span><br><span class=\"line\">platform linux -- Python 3.6.9, pytest-6.2.4, py-1.10.0, pluggy-0.13.1</span><br><span class=\"line\">rootdir: /ifs/home/ali1</span><br><span class=\"line\">plugins: timeout-1.4.2, helix-3.0.25, isilon-marks-0.3.3, isilon-accountant-0.4.2</span><br><span class=\"line\">collected 0 items / 1 error</span><br><span class=\"line\">Password:</span><br><span class=\"line\">[2022-12-14 11:11:32.605863+00:00] QUEUED_FOR_ALLOCATION... waiting 30 seconds</span><br><span class=\"line\">[2022-12-14 11:12:02.887701+00:00] QUEUED_FOR_ALLOCATION... waiting 30 seconds</span><br><span class=\"line\">[2022-12-14 11:12:33.175448+00:00] READY</span><br><span class=\"line\">[2022-12-14 11:12:33.499574+00:00] QUEUED_FOR_DELETION... waiting 30 seconds</span><br></pre></td></tr></table></figure>\n\n"},{"layout":"posts","title":"flask","date":"2023-02-11T05:30:46.000Z","updated":"2023-02-11T05:31:43.000Z","_content":"\n# flask\n\nFLASK_APP=/usr/local/devcodes/powerload-web FLASK_ENV=development python3 -m flask run --host=10.219.61.224  --port=2222\n\n<font color=#063060 size=2>1. 命令行启动 flask：先export FLASK_APP指向启动file.py；再flask run;\n2. 命令行启动debug模式，export FLASK_DEBUG=1； 此模式可changes reloaded authmatically.\n3. python 启动 flask,  if __name__ == '__main__'，可在其中设置debug模式\n**4. 用装饰器 app.route(\"/\")  route decorators 来管理页面路径 what we type into the browsing to go to different pages.**</font>\n\n\n17. login logout, 验证注册是否使用存在了的username 或者email。 登录后不再显示login 和 注册按钮，\n只显示logout按钮。 logout之后，不可以再访问account页面。  首次登陆直接展示account页面，再次登录直接展示home页面。\n\n##### 先做点简单的\n`pip install flask`\n`mkdir Flask_blog`\n`touch flasklog.py`\n```python\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/')  # root page\ndef hello_world():\n    return 'Hello, World!'\n```\n---\n##### 增加venv\n\n1. `export FLASK_APP=flaskblog.py`\n2. flask run\n\n**只要做了改动，就要restart flask，才能生效**\n3. 开启debug模式： `export FLASK_DEBUG=1`，就可以实时更新改动:thoes changes reload automatically.\n\n4. 增加  main 之后，用python来run\n    1. `python flaskblog.py`\n   \n```python\nfrom flask import Flask\napp = Flask(__name__)\n\n<!--more-->\n\n@app.route('/')  # root page, two routes are handled by the same function\n@app.route('/home')\ndef home():\n    return '<h1>Hello, World!</h1>' \n\n\n\n@app.route('/about')  # root page\ndef about():\n    return '<h1>About Page!</h1>' \n\nif __name__ == \"__main__\":\n    app.run(debug=True)\n```\n\n---\n\n\n5. 在layout.html中，包含网站主要css样式，其中，body中添加 block模块，可以用来让\nthe block section that the child templates can override. 调用它的其他html可以重写覆盖。\n\n\n6. mkdir static 来存放 css样式， main.css\n7. 从 snippets中复制过来的navigation.html样式，放在了body标签里面；\n`https://github.com/CoreyMSchafer/code_snippets/blob/master/Python/Flask_Blog/snippets/navigation.html`\n8. 添加main.html 到layout.html的 body中 head下面：\n9. 在layout.html的head中，title前面，添加link，来引用static中的css样式\n    1. 注意 flaskblog.py 中 import ulr_for: `from flask import Flask, render_template, url_for`\n    2. 改写layout.html，增加如下：\n`<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ url_for('static', filename='main.css') }}\">`\n\n---\n\n10. 安装flask-wtf： `pip install flask-wtf`\n\n\n11. register.html中 各种div 之内的 form.username/password/confirm_password都来自于 forms.py中 class 中定义的变量名字\n\n12. 但是最后一个div中， 指的是flaskblog.py中的fun name:\n@app.route('/login')\ndef <font color=#FF0000>login():</font>\n\n```html\n    <div class=\"border-top pt-3\">\n        <small class=\"text-muted\">\n            Already Have An Account? <a class=\"ml-2\"  href=\"{{ url_for('login') }}\"></a>\n        </small>\n    </div>\n```\n13. flash :  redirect  --- flasklog.py\n在register中，添加，如果submit验证成功，就返回到home page ，这个home，\n调用的是 flasklog.py中的 home fun\nflash message 是一次性的，当再次刷新时，因为未触发到那个条件，所以flash message不再出现，除非再次注册。\n\n加入flash 和 redirect 来控制，做了注册之后，页面的刷新跳转；\n\n```python\n@app.route('/')  # root page, two routes are handled by the same function\n@app.route('/home')\ndef home():\n    return render_template('home.html', posts=posts)\n\n@app.route('/about')  # root page\ndef about():\n    return render_template('about.html', title='About')\n\n@app.route('/register', methods=['GET', 'POST'])  \ndef register():\n    form = RegistrationForm()\n    if form.validate_on_submit():\n        flash(f'Account created for {form.username.data}!', 'success')\n        return redirect(url_for('home'))\n    return render_template('register.html', title='Register', form=form)\n\n\n```\n13.2  但是当register 失败后，并无feedback 来告诉用户  why it was invalid\n\n添加了一些验证在 register.html， 用的是如果拿到error信息就展示出来\n\n![](_v_images/20201019234332261_1025641223.png =300x)\n\n\n14. 在login 加了 flash信息 ，hardcode写了 用户名和密码\n![](_v_images/20201020002527262_100800492.png =300x)\n\n\n---\n\n15. `pip install flask-sqlalchemy`\n\n~~export  PIP_DEFAULT_TIMEOUT=100~~  无效\nsudo pip install --default-timeout=100 future\npip install --default-timeout=220 future\n因为sudo 调用的pip 是3.6\n\n![](_v_images/20201021220751159_1841048205.png =600x)\n\n\n\npython\n```python\nfrom flaskblog import db\ndb.create_all()    ---> site.db file\n\nfrom flaskblog import User, Post\nuser_1 = User(username='Corey', email='C@demo.com', password='password')\n\ndb.session.add(user_1)\nuser_2 = User(username='johnDone', email='jd@demo.com', password='password')\n\ndb.session.add(user_2)\n\n\ndb.session.commit()\n\nUser.query.all()\n\nUser.query.first()\n\nUser.query.filter_by(username='Corey').all()\n\n\nUser.query.filter_by(username='Corey').first()\n\nuser = User.query.filter_by(username='Corey').first()\n\nuser.id\nuser = User.query.get(1)\nuser\n\nuser.posts\n\npost_1 = Post(title='Blog 1 ', content = 'first post content!', user_id = user.id)\n\npost_2 = Post(title='Blog 2 ', content = 'Second post content!', user_id = user.id)\n\ndb.session.add(post_1)\n\ndb.session.add(post_2)\n\ndb.session.commit()\n\nuser.posts\nfor post in user.posts:\n    print(post.title)\n\npost = Post.query.first()\n\npost.user_id\npost.author\n\ndb.drop_all()\ndb.create_all()\nUser.query.all()\nPost.query.all()\n```\n\n\n---\n\n16. `pip install flask-bcrypt`\n用bcrypt 来生成hash 加密，每次生成都不一样，\n但是反之check却可以验证真伪。\n```python\n~ 🔥» python                      vivi@vivideMacBook-Pro\nPython 3.8.5 (v3.8.5:580fbb018f, Jul 20 2020, 12:11:27)\n[Clang 6.0 (clang-600.0.57)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from flask_bcrypt import Bcrypt\n>>> bcrypt = Bcrypt()\n>>> bcrypt.generate_password_hash('testing')\nb'$2b$12$mwleE8U2426VUFW1ZfjI0OsrWatmzYla/hCHhiH5t/xsLxQl/ob6i'\n>>> bcrypt.generate_password_hash('testing').decode('utf-8')\n'$2b$12$6kcDKHgJJDhlwaZZV9l0f.DPEqxcJFx01axApkdAVm/v5uoiQKyHe'\n>>> bcrypt.generate_password_hash('testing').decode('utf-8')\n'$2b$12$8LMjQhBOdUqT.ZLF08SreOf7CrOYCtgOaEEXHal5okuXclqgviR1e'\n>>> hashed_pw = bcrypt.generate_password_hash('testing').decode('utf-8')\n>>> bcrypt.check_password_hash(hashed_pw,\"password\")\nFalse\n>>> bcrypt.check_password_hash(hashed_pw,\"testing\")\nTrue\n>>>\n```\n\n添加了一些校验之后，在首页注册成功\n\n```python\n~/Desktop/Flask_Blog 🔥» python   vivi@vivideMacBook-Pro\nPython 3.8.5 (v3.8.5:580fbb018f, Jul 20 2020, 12:11:27)\n[Clang 6.0 (clang-600.0.57)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from flaskblog import db\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask_sqlalchemy/__init__.py:833: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.\n  warnings.warn(FSADeprecationWarning(\n>>> from flaskblog.models import User\n>>> user = User.query.first()\n>>> user\nUser('ali1', 'ali1@flask.com', 'default.jpg')\n>>> user.password\n'$2b$12$JM7NPMUz6329UQmMtj8p7uDFWtKRHmpQujnffwW0U/W1WNOfWHThG'\n>>>\n```\n\n 用已经存在的用户来注册，页面报错\n```python\nsqlalchemy.exc.IntegrityError\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: user.email\n[SQL: INSERT INTO user (username, email, image_file, password) VALUES (?, ?, ?, ?)]\n[parameters: ('ali1', 'ali1@flask.com', 'default.jpg', '$2b$12$HjaXxkdNbmjhLSLTu7CSsO9Nx/HLJG8.1cUrBL9TwS79/Zui9wvSm')]\n(Background on this error at: http://sqlalche.me/e/13/gkpj)\n```\n\n\n在浏览器页面，到某个地方想执行，输入pin码即可调用python生成各种信息\n所以，不可以生产环境使用debug模式，暴露的信息太多。\n![](_v_images/20201022210758556_1552795459.png =500x)![](_v_images/20201022210936423_1612001069.png =500x)\n\n添加了一些验证之后：\n![](_v_images/20201022212003059_248276131.png =500x)\n\n\n\n\n17. `pip install flask-login`  安装login 模块\n\n\n\n----\n\n\nUser Account and Profile Picture\n\n\n","source":"_posts/flask.md","raw":"---\nlayout: posts\ntitle: flask\ndate: 2023-02-11 13:30:46\nupdated: 2023-02-11 13:31:43\ntags: [flask]\ncategories: Teckknowledge\n---\n\n# flask\n\nFLASK_APP=/usr/local/devcodes/powerload-web FLASK_ENV=development python3 -m flask run --host=10.219.61.224  --port=2222\n\n<font color=#063060 size=2>1. 命令行启动 flask：先export FLASK_APP指向启动file.py；再flask run;\n2. 命令行启动debug模式，export FLASK_DEBUG=1； 此模式可changes reloaded authmatically.\n3. python 启动 flask,  if __name__ == '__main__'，可在其中设置debug模式\n**4. 用装饰器 app.route(\"/\")  route decorators 来管理页面路径 what we type into the browsing to go to different pages.**</font>\n\n\n17. login logout, 验证注册是否使用存在了的username 或者email。 登录后不再显示login 和 注册按钮，\n只显示logout按钮。 logout之后，不可以再访问account页面。  首次登陆直接展示account页面，再次登录直接展示home页面。\n\n##### 先做点简单的\n`pip install flask`\n`mkdir Flask_blog`\n`touch flasklog.py`\n```python\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route('/')  # root page\ndef hello_world():\n    return 'Hello, World!'\n```\n---\n##### 增加venv\n\n1. `export FLASK_APP=flaskblog.py`\n2. flask run\n\n**只要做了改动，就要restart flask，才能生效**\n3. 开启debug模式： `export FLASK_DEBUG=1`，就可以实时更新改动:thoes changes reload automatically.\n\n4. 增加  main 之后，用python来run\n    1. `python flaskblog.py`\n   \n```python\nfrom flask import Flask\napp = Flask(__name__)\n\n<!--more-->\n\n@app.route('/')  # root page, two routes are handled by the same function\n@app.route('/home')\ndef home():\n    return '<h1>Hello, World!</h1>' \n\n\n\n@app.route('/about')  # root page\ndef about():\n    return '<h1>About Page!</h1>' \n\nif __name__ == \"__main__\":\n    app.run(debug=True)\n```\n\n---\n\n\n5. 在layout.html中，包含网站主要css样式，其中，body中添加 block模块，可以用来让\nthe block section that the child templates can override. 调用它的其他html可以重写覆盖。\n\n\n6. mkdir static 来存放 css样式， main.css\n7. 从 snippets中复制过来的navigation.html样式，放在了body标签里面；\n`https://github.com/CoreyMSchafer/code_snippets/blob/master/Python/Flask_Blog/snippets/navigation.html`\n8. 添加main.html 到layout.html的 body中 head下面：\n9. 在layout.html的head中，title前面，添加link，来引用static中的css样式\n    1. 注意 flaskblog.py 中 import ulr_for: `from flask import Flask, render_template, url_for`\n    2. 改写layout.html，增加如下：\n`<link rel=\"stylesheet\" type=\"text/css\" href=\"{{ url_for('static', filename='main.css') }}\">`\n\n---\n\n10. 安装flask-wtf： `pip install flask-wtf`\n\n\n11. register.html中 各种div 之内的 form.username/password/confirm_password都来自于 forms.py中 class 中定义的变量名字\n\n12. 但是最后一个div中， 指的是flaskblog.py中的fun name:\n@app.route('/login')\ndef <font color=#FF0000>login():</font>\n\n```html\n    <div class=\"border-top pt-3\">\n        <small class=\"text-muted\">\n            Already Have An Account? <a class=\"ml-2\"  href=\"{{ url_for('login') }}\"></a>\n        </small>\n    </div>\n```\n13. flash :  redirect  --- flasklog.py\n在register中，添加，如果submit验证成功，就返回到home page ，这个home，\n调用的是 flasklog.py中的 home fun\nflash message 是一次性的，当再次刷新时，因为未触发到那个条件，所以flash message不再出现，除非再次注册。\n\n加入flash 和 redirect 来控制，做了注册之后，页面的刷新跳转；\n\n```python\n@app.route('/')  # root page, two routes are handled by the same function\n@app.route('/home')\ndef home():\n    return render_template('home.html', posts=posts)\n\n@app.route('/about')  # root page\ndef about():\n    return render_template('about.html', title='About')\n\n@app.route('/register', methods=['GET', 'POST'])  \ndef register():\n    form = RegistrationForm()\n    if form.validate_on_submit():\n        flash(f'Account created for {form.username.data}!', 'success')\n        return redirect(url_for('home'))\n    return render_template('register.html', title='Register', form=form)\n\n\n```\n13.2  但是当register 失败后，并无feedback 来告诉用户  why it was invalid\n\n添加了一些验证在 register.html， 用的是如果拿到error信息就展示出来\n\n![](_v_images/20201019234332261_1025641223.png =300x)\n\n\n14. 在login 加了 flash信息 ，hardcode写了 用户名和密码\n![](_v_images/20201020002527262_100800492.png =300x)\n\n\n---\n\n15. `pip install flask-sqlalchemy`\n\n~~export  PIP_DEFAULT_TIMEOUT=100~~  无效\nsudo pip install --default-timeout=100 future\npip install --default-timeout=220 future\n因为sudo 调用的pip 是3.6\n\n![](_v_images/20201021220751159_1841048205.png =600x)\n\n\n\npython\n```python\nfrom flaskblog import db\ndb.create_all()    ---> site.db file\n\nfrom flaskblog import User, Post\nuser_1 = User(username='Corey', email='C@demo.com', password='password')\n\ndb.session.add(user_1)\nuser_2 = User(username='johnDone', email='jd@demo.com', password='password')\n\ndb.session.add(user_2)\n\n\ndb.session.commit()\n\nUser.query.all()\n\nUser.query.first()\n\nUser.query.filter_by(username='Corey').all()\n\n\nUser.query.filter_by(username='Corey').first()\n\nuser = User.query.filter_by(username='Corey').first()\n\nuser.id\nuser = User.query.get(1)\nuser\n\nuser.posts\n\npost_1 = Post(title='Blog 1 ', content = 'first post content!', user_id = user.id)\n\npost_2 = Post(title='Blog 2 ', content = 'Second post content!', user_id = user.id)\n\ndb.session.add(post_1)\n\ndb.session.add(post_2)\n\ndb.session.commit()\n\nuser.posts\nfor post in user.posts:\n    print(post.title)\n\npost = Post.query.first()\n\npost.user_id\npost.author\n\ndb.drop_all()\ndb.create_all()\nUser.query.all()\nPost.query.all()\n```\n\n\n---\n\n16. `pip install flask-bcrypt`\n用bcrypt 来生成hash 加密，每次生成都不一样，\n但是反之check却可以验证真伪。\n```python\n~ 🔥» python                      vivi@vivideMacBook-Pro\nPython 3.8.5 (v3.8.5:580fbb018f, Jul 20 2020, 12:11:27)\n[Clang 6.0 (clang-600.0.57)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from flask_bcrypt import Bcrypt\n>>> bcrypt = Bcrypt()\n>>> bcrypt.generate_password_hash('testing')\nb'$2b$12$mwleE8U2426VUFW1ZfjI0OsrWatmzYla/hCHhiH5t/xsLxQl/ob6i'\n>>> bcrypt.generate_password_hash('testing').decode('utf-8')\n'$2b$12$6kcDKHgJJDhlwaZZV9l0f.DPEqxcJFx01axApkdAVm/v5uoiQKyHe'\n>>> bcrypt.generate_password_hash('testing').decode('utf-8')\n'$2b$12$8LMjQhBOdUqT.ZLF08SreOf7CrOYCtgOaEEXHal5okuXclqgviR1e'\n>>> hashed_pw = bcrypt.generate_password_hash('testing').decode('utf-8')\n>>> bcrypt.check_password_hash(hashed_pw,\"password\")\nFalse\n>>> bcrypt.check_password_hash(hashed_pw,\"testing\")\nTrue\n>>>\n```\n\n添加了一些校验之后，在首页注册成功\n\n```python\n~/Desktop/Flask_Blog 🔥» python   vivi@vivideMacBook-Pro\nPython 3.8.5 (v3.8.5:580fbb018f, Jul 20 2020, 12:11:27)\n[Clang 6.0 (clang-600.0.57)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from flaskblog import db\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/site-packages/flask_sqlalchemy/__init__.py:833: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.\n  warnings.warn(FSADeprecationWarning(\n>>> from flaskblog.models import User\n>>> user = User.query.first()\n>>> user\nUser('ali1', 'ali1@flask.com', 'default.jpg')\n>>> user.password\n'$2b$12$JM7NPMUz6329UQmMtj8p7uDFWtKRHmpQujnffwW0U/W1WNOfWHThG'\n>>>\n```\n\n 用已经存在的用户来注册，页面报错\n```python\nsqlalchemy.exc.IntegrityError\nsqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: user.email\n[SQL: INSERT INTO user (username, email, image_file, password) VALUES (?, ?, ?, ?)]\n[parameters: ('ali1', 'ali1@flask.com', 'default.jpg', '$2b$12$HjaXxkdNbmjhLSLTu7CSsO9Nx/HLJG8.1cUrBL9TwS79/Zui9wvSm')]\n(Background on this error at: http://sqlalche.me/e/13/gkpj)\n```\n\n\n在浏览器页面，到某个地方想执行，输入pin码即可调用python生成各种信息\n所以，不可以生产环境使用debug模式，暴露的信息太多。\n![](_v_images/20201022210758556_1552795459.png =500x)![](_v_images/20201022210936423_1612001069.png =500x)\n\n添加了一些验证之后：\n![](_v_images/20201022212003059_248276131.png =500x)\n\n\n\n\n17. `pip install flask-login`  安装login 模块\n\n\n\n----\n\n\nUser Account and Profile Picture\n\n\n","slug":"flask","published":1,"comments":1,"photos":[],"link":"","_id":"cldzyok80000nc6oaegd96enf","content":"<h1 id=\"flask\"><a href=\"#flask\" class=\"headerlink\" title=\"flask\"></a>flask</h1><p>FLASK_APP=/usr/local/devcodes/powerload-web FLASK_ENV=development python3 -m flask run –host=10.219.61.224  –port=2222</p>\n<p><font color=#063060 size=2>1. 命令行启动 flask：先export FLASK_APP指向启动file.py；再flask run;<br>2. 命令行启动debug模式，export FLASK_DEBUG=1； 此模式可changes reloaded authmatically.<br>3. python 启动 flask,  if <strong>name</strong> == ‘<strong>main</strong>‘，可在其中设置debug模式<br><strong>4. 用装饰器 app.route(“/“)  route decorators 来管理页面路径 what we type into the browsing to go to different pages.</strong></font></p>\n<ol start=\"17\">\n<li>login logout, 验证注册是否使用存在了的username 或者email。 登录后不再显示login 和 注册按钮，<br>只显示logout按钮。 logout之后，不可以再访问account页面。  首次登陆直接展示account页面，再次登录直接展示home页面。</li>\n</ol>\n<h5 id=\"先做点简单的\"><a href=\"#先做点简单的\" class=\"headerlink\" title=\"先做点简单的\"></a>先做点简单的</h5><p><code>pip install flask</code><br><code>mkdir Flask_blog</code><br><code>touch flasklog.py</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)  </span><span class=\"comment\"># root page</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello_world</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello, World!&#x27;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"增加venv\"><a href=\"#增加venv\" class=\"headerlink\" title=\"增加venv\"></a>增加venv</h5><ol>\n<li><code>export FLASK_APP=flaskblog.py</code></li>\n<li>flask run</li>\n</ol>\n<p><strong>只要做了改动，就要restart flask，才能生效</strong><br>3. 开启debug模式： <code>export FLASK_DEBUG=1</code>，就可以实时更新改动:thoes changes reload automatically.</p>\n<ol start=\"4\">\n<li>增加  main 之后，用python来run<ol>\n<li><code>python flaskblog.py</code></li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--more--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)  </span><span class=\"comment\"># root page, two routes are handled by the same function</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/home&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">home</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&lt;h1&gt;Hello, World!&lt;/h1&gt;&#x27;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/about&#x27;</span></span>)  </span><span class=\"comment\"># root page</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">about</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&lt;h1&gt;About Page!&lt;/h1&gt;&#x27;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<ol start=\"5\">\n<li>在layout.html中，包含网站主要css样式，其中，body中添加 block模块，可以用来让<br>the block section that the child templates can override. 调用它的其他html可以重写覆盖。</li>\n</ol>\n<ol start=\"6\">\n<li>mkdir static 来存放 css样式， main.css</li>\n<li>从 snippets中复制过来的navigation.html样式，放在了body标签里面；<br><code>https://github.com/CoreyMSchafer/code_snippets/blob/master/Python/Flask_Blog/snippets/navigation.html</code></li>\n<li>添加main.html 到layout.html的 body中 head下面：</li>\n<li>在layout.html的head中，title前面，添加link，来引用static中的css样式<ol>\n<li>注意 flaskblog.py 中 import ulr_for: <code>from flask import Flask, render_template, url_for</code></li>\n<li>改写layout.html，增加如下：<br><code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&#123;&#123; url_for('static', filename='main.css') &#125;&#125;&quot;&gt;</code></li>\n</ol>\n</li>\n</ol>\n<hr>\n<ol start=\"10\">\n<li>安装flask-wtf： <code>pip install flask-wtf</code></li>\n</ol>\n<ol start=\"11\">\n<li><p>register.html中 各种div 之内的 form.username/password/confirm_password都来自于 forms.py中 class 中定义的变量名字</p>\n</li>\n<li><p>但是最后一个div中， 指的是flaskblog.py中的fun name:<br>@app.route(‘/login’)<br>def <font color=#FF0000>login():</font></p>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;border-top pt-3&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">small</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-muted&quot;</span>&gt;</span></span><br><span class=\"line\">        Already Have An Account? <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ml-2&quot;</span>  <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;login&#x27;) &#125;&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"13\">\n<li>flash :  redirect  — flasklog.py<br>在register中，添加，如果submit验证成功，就返回到home page ，这个home，<br>调用的是 flasklog.py中的 home fun<br>flash message 是一次性的，当再次刷新时，因为未触发到那个条件，所以flash message不再出现，除非再次注册。</li>\n</ol>\n<p>加入flash 和 redirect 来控制，做了注册之后，页面的刷新跳转；</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)  </span><span class=\"comment\"># root page, two routes are handled by the same function</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/home&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">home</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;home.html&#x27;</span>, posts=posts)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/about&#x27;</span></span>)  </span><span class=\"comment\"># root page</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">about</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;about.html&#x27;</span>, title=<span class=\"string\">&#x27;About&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/register&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)  </span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">    form = RegistrationForm()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> form.validate_on_submit():</span><br><span class=\"line\">        flash(<span class=\"string\">f&#x27;Account created for <span class=\"subst\">&#123;form.username.data&#125;</span>!&#x27;</span>, <span class=\"string\">&#x27;success&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;home&#x27;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;register.html&#x27;</span>, title=<span class=\"string\">&#x27;Register&#x27;</span>, form=form)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>13.2  但是当register 失败后，并无feedback 来告诉用户  why it was invalid</p>\n<p>添加了一些验证在 register.html， 用的是如果拿到error信息就展示出来</p>\n<p>![](_v_images/20201019234332261_1025641223.png =300x)</p>\n<ol start=\"14\">\n<li>在login 加了 flash信息 ，hardcode写了 用户名和密码<br>![](_v_images/20201020002527262_100800492.png =300x)</li>\n</ol>\n<hr>\n<ol start=\"15\">\n<li><code>pip install flask-sqlalchemy</code></li>\n</ol>\n<p><del>export  PIP_DEFAULT_TIMEOUT=100</del>  无效<br>sudo pip install –default-timeout=100 future<br>pip install –default-timeout=220 future<br>因为sudo 调用的pip 是3.6</p>\n<p>![](_v_images/20201021220751159_1841048205.png =600x)</p>\n<p>python</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flaskblog <span class=\"keyword\">import</span> db</span><br><span class=\"line\">db.create_all()    ---&gt; site.db file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flaskblog <span class=\"keyword\">import</span> User, Post</span><br><span class=\"line\">user_1 = User(username=<span class=\"string\">&#x27;Corey&#x27;</span>, email=<span class=\"string\">&#x27;C@demo.com&#x27;</span>, password=<span class=\"string\">&#x27;password&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">db.session.add(user_1)</span><br><span class=\"line\">user_2 = User(username=<span class=\"string\">&#x27;johnDone&#x27;</span>, email=<span class=\"string\">&#x27;jd@demo.com&#x27;</span>, password=<span class=\"string\">&#x27;password&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">db.session.add(user_2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.session.commit()</span><br><span class=\"line\"></span><br><span class=\"line\">User.query.<span class=\"built_in\">all</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">User.query.first()</span><br><span class=\"line\"></span><br><span class=\"line\">User.query.filter_by(username=<span class=\"string\">&#x27;Corey&#x27;</span>).<span class=\"built_in\">all</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">User.query.filter_by(username=<span class=\"string\">&#x27;Corey&#x27;</span>).first()</span><br><span class=\"line\"></span><br><span class=\"line\">user = User.query.filter_by(username=<span class=\"string\">&#x27;Corey&#x27;</span>).first()</span><br><span class=\"line\"></span><br><span class=\"line\">user.<span class=\"built_in\">id</span></span><br><span class=\"line\">user = User.query.get(<span class=\"number\">1</span>)</span><br><span class=\"line\">user</span><br><span class=\"line\"></span><br><span class=\"line\">user.posts</span><br><span class=\"line\"></span><br><span class=\"line\">post_1 = Post(title=<span class=\"string\">&#x27;Blog 1 &#x27;</span>, content = <span class=\"string\">&#x27;first post content!&#x27;</span>, user_id = user.<span class=\"built_in\">id</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">post_2 = Post(title=<span class=\"string\">&#x27;Blog 2 &#x27;</span>, content = <span class=\"string\">&#x27;Second post content!&#x27;</span>, user_id = user.<span class=\"built_in\">id</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">db.session.add(post_1)</span><br><span class=\"line\"></span><br><span class=\"line\">db.session.add(post_2)</span><br><span class=\"line\"></span><br><span class=\"line\">db.session.commit()</span><br><span class=\"line\"></span><br><span class=\"line\">user.posts</span><br><span class=\"line\"><span class=\"keyword\">for</span> post <span class=\"keyword\">in</span> user.posts:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(post.title)</span><br><span class=\"line\"></span><br><span class=\"line\">post = Post.query.first()</span><br><span class=\"line\"></span><br><span class=\"line\">post.user_id</span><br><span class=\"line\">post.author</span><br><span class=\"line\"></span><br><span class=\"line\">db.drop_all()</span><br><span class=\"line\">db.create_all()</span><br><span class=\"line\">User.query.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">Post.query.<span class=\"built_in\">all</span>()</span><br></pre></td></tr></table></figure>\n\n\n<hr>\n<ol start=\"16\">\n<li><code>pip install flask-bcrypt</code><br>用bcrypt 来生成hash 加密，每次生成都不一样，<br>但是反之check却可以验证真伪。<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~ 🔥» python                      vivi@vivideMacBook-Pro</span><br><span class=\"line\">Python <span class=\"number\">3.8</span><span class=\"number\">.5</span> (v3<span class=\"number\">.8</span><span class=\"number\">.5</span>:580fbb018f, Jul <span class=\"number\">20</span> <span class=\"number\">2020</span>, <span class=\"number\">12</span>:<span class=\"number\">11</span>:<span class=\"number\">27</span>)</span><br><span class=\"line\">[Clang <span class=\"number\">6.0</span> (clang-<span class=\"number\">600.0</span><span class=\"number\">.57</span>)] on darwin</span><br><span class=\"line\"><span class=\"type\">Type</span> <span class=\"string\">&quot;help&quot;</span>, <span class=\"string\">&quot;copyright&quot;</span>, <span class=\"string\">&quot;credits&quot;</span> <span class=\"keyword\">or</span> <span class=\"string\">&quot;license&quot;</span> <span class=\"keyword\">for</span> more information.</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> flask_bcrypt <span class=\"keyword\">import</span> Bcrypt</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>bcrypt = Bcrypt()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>bcrypt.generate_password_hash(<span class=\"string\">&#x27;testing&#x27;</span>)</span><br><span class=\"line\"><span class=\"string\">b&#x27;$2b$12$mwleE8U2426VUFW1ZfjI0OsrWatmzYla/hCHhiH5t/xsLxQl/ob6i&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>bcrypt.generate_password_hash(<span class=\"string\">&#x27;testing&#x27;</span>).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"><span class=\"string\">&#x27;$2b$12$6kcDKHgJJDhlwaZZV9l0f.DPEqxcJFx01axApkdAVm/v5uoiQKyHe&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>bcrypt.generate_password_hash(<span class=\"string\">&#x27;testing&#x27;</span>).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"><span class=\"string\">&#x27;$2b$12$8LMjQhBOdUqT.ZLF08SreOf7CrOYCtgOaEEXHal5okuXclqgviR1e&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>hashed_pw = bcrypt.generate_password_hash(<span class=\"string\">&#x27;testing&#x27;</span>).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>bcrypt.check_password_hash(hashed_pw,<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\"><span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>bcrypt.check_password_hash(hashed_pw,<span class=\"string\">&quot;testing&quot;</span>)</span><br><span class=\"line\"><span class=\"literal\">True</span></span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>添加了一些校验之后，在首页注册成功</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Desktop/Flask_Blog 🔥» python   vivi@vivideMacBook-Pro</span><br><span class=\"line\">Python <span class=\"number\">3.8</span><span class=\"number\">.5</span> (v3<span class=\"number\">.8</span><span class=\"number\">.5</span>:580fbb018f, Jul <span class=\"number\">20</span> <span class=\"number\">2020</span>, <span class=\"number\">12</span>:<span class=\"number\">11</span>:<span class=\"number\">27</span>)</span><br><span class=\"line\">[Clang <span class=\"number\">6.0</span> (clang-<span class=\"number\">600.0</span><span class=\"number\">.57</span>)] on darwin</span><br><span class=\"line\"><span class=\"type\">Type</span> <span class=\"string\">&quot;help&quot;</span>, <span class=\"string\">&quot;copyright&quot;</span>, <span class=\"string\">&quot;credits&quot;</span> <span class=\"keyword\">or</span> <span class=\"string\">&quot;license&quot;</span> <span class=\"keyword\">for</span> more information.</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> flaskblog <span class=\"keyword\">import</span> db</span><br><span class=\"line\">/Library/Frameworks/Python.framework/Versions/<span class=\"number\">3.8</span>/lib/python3<span class=\"number\">.8</span>/site-packages/flask_sqlalchemy/__init__.py:<span class=\"number\">833</span>: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead <span class=\"keyword\">and</span> will be disabled by default <span class=\"keyword\">in</span> the future.  <span class=\"type\">Set</span> it to <span class=\"literal\">True</span> <span class=\"keyword\">or</span> <span class=\"literal\">False</span> to suppress this warning.</span><br><span class=\"line\">  warnings.warn(FSADeprecationWarning(</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> flaskblog.models <span class=\"keyword\">import</span> User</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user = User.query.first()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user</span><br><span class=\"line\">User(<span class=\"string\">&#x27;ali1&#x27;</span>, <span class=\"string\">&#x27;ali1@flask.com&#x27;</span>, <span class=\"string\">&#x27;default.jpg&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user.password</span><br><span class=\"line\"><span class=\"string\">&#x27;$2b$12$JM7NPMUz6329UQmMtj8p7uDFWtKRHmpQujnffwW0U/W1WNOfWHThG&#x27;</span></span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n\n<p> 用已经存在的用户来注册，页面报错</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlalchemy.exc.IntegrityError</span><br><span class=\"line\">sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: user.email</span><br><span class=\"line\">[SQL: INSERT INTO user (username, email, image_file, password) VALUES (?, ?, ?, ?)]</span><br><span class=\"line\">[parameters: (<span class=\"string\">&#x27;ali1&#x27;</span>, <span class=\"string\">&#x27;ali1@flask.com&#x27;</span>, <span class=\"string\">&#x27;default.jpg&#x27;</span>, <span class=\"string\">&#x27;$2b$12$HjaXxkdNbmjhLSLTu7CSsO9Nx/HLJG8.1cUrBL9TwS79/Zui9wvSm&#x27;</span>)]</span><br><span class=\"line\">(Background on this error at: http://sqlalche.me/e/<span class=\"number\">13</span>/gkpj)</span><br></pre></td></tr></table></figure>\n\n\n<p>在浏览器页面，到某个地方想执行，输入pin码即可调用python生成各种信息<br>所以，不可以生产环境使用debug模式，暴露的信息太多。<br>![](_v_images/20201022210758556_1552795459.png =500x)![](_v_images/20201022210936423_1612001069.png =500x)</p>\n<p>添加了一些验证之后：<br>![](_v_images/20201022212003059_248276131.png =500x)</p>\n<ol start=\"17\">\n<li><code>pip install flask-login</code>  安装login 模块</li>\n</ol>\n<hr>\n<p>User Account and Profile Picture</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"flask\"><a href=\"#flask\" class=\"headerlink\" title=\"flask\"></a>flask</h1><p>FLASK_APP=/usr/local/devcodes/powerload-web FLASK_ENV=development python3 -m flask run –host=10.219.61.224  –port=2222</p>\n<p><font color=#063060 size=2>1. 命令行启动 flask：先export FLASK_APP指向启动file.py；再flask run;<br>2. 命令行启动debug模式，export FLASK_DEBUG=1； 此模式可changes reloaded authmatically.<br>3. python 启动 flask,  if <strong>name</strong> == ‘<strong>main</strong>‘，可在其中设置debug模式<br><strong>4. 用装饰器 app.route(“/“)  route decorators 来管理页面路径 what we type into the browsing to go to different pages.</strong></font></p>\n<ol start=\"17\">\n<li>login logout, 验证注册是否使用存在了的username 或者email。 登录后不再显示login 和 注册按钮，<br>只显示logout按钮。 logout之后，不可以再访问account页面。  首次登陆直接展示account页面，再次登录直接展示home页面。</li>\n</ol>\n<h5 id=\"先做点简单的\"><a href=\"#先做点简单的\" class=\"headerlink\" title=\"先做点简单的\"></a>先做点简单的</h5><p><code>pip install flask</code><br><code>mkdir Flask_blog</code><br><code>touch flasklog.py</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)  </span><span class=\"comment\"># root page</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello_world</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Hello, World!&#x27;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h5 id=\"增加venv\"><a href=\"#增加venv\" class=\"headerlink\" title=\"增加venv\"></a>增加venv</h5><ol>\n<li><code>export FLASK_APP=flaskblog.py</code></li>\n<li>flask run</li>\n</ol>\n<p><strong>只要做了改动，就要restart flask，才能生效</strong><br>3. 开启debug模式： <code>export FLASK_DEBUG=1</code>，就可以实时更新改动:thoes changes reload automatically.</p>\n<ol start=\"4\">\n<li>增加  main 之后，用python来run<ol>\n<li><code>python flaskblog.py</code></li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--more--&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)  </span><span class=\"comment\"># root page, two routes are handled by the same function</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/home&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">home</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&lt;h1&gt;Hello, World!&lt;/h1&gt;&#x27;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/about&#x27;</span></span>)  </span><span class=\"comment\"># root page</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">about</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&lt;h1&gt;About Page!&lt;/h1&gt;&#x27;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n\n<hr>\n<ol start=\"5\">\n<li>在layout.html中，包含网站主要css样式，其中，body中添加 block模块，可以用来让<br>the block section that the child templates can override. 调用它的其他html可以重写覆盖。</li>\n</ol>\n<ol start=\"6\">\n<li>mkdir static 来存放 css样式， main.css</li>\n<li>从 snippets中复制过来的navigation.html样式，放在了body标签里面；<br><code>https://github.com/CoreyMSchafer/code_snippets/blob/master/Python/Flask_Blog/snippets/navigation.html</code></li>\n<li>添加main.html 到layout.html的 body中 head下面：</li>\n<li>在layout.html的head中，title前面，添加link，来引用static中的css样式<ol>\n<li>注意 flaskblog.py 中 import ulr_for: <code>from flask import Flask, render_template, url_for</code></li>\n<li>改写layout.html，增加如下：<br><code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;&#123;&#123; url_for('static', filename='main.css') &#125;&#125;&quot;&gt;</code></li>\n</ol>\n</li>\n</ol>\n<hr>\n<ol start=\"10\">\n<li>安装flask-wtf： <code>pip install flask-wtf</code></li>\n</ol>\n<ol start=\"11\">\n<li><p>register.html中 各种div 之内的 form.username/password/confirm_password都来自于 forms.py中 class 中定义的变量名字</p>\n</li>\n<li><p>但是最后一个div中， 指的是flaskblog.py中的fun name:<br>@app.route(‘/login’)<br>def <font color=#FF0000>login():</font></p>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;border-top pt-3&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">small</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;text-muted&quot;</span>&gt;</span></span><br><span class=\"line\">        Already Have An Account? <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;ml-2&quot;</span>  <span class=\"attr\">href</span>=<span class=\"string\">&quot;&#123;&#123; url_for(&#x27;login&#x27;) &#125;&#125;&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">small</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"13\">\n<li>flash :  redirect  — flasklog.py<br>在register中，添加，如果submit验证成功，就返回到home page ，这个home，<br>调用的是 flasklog.py中的 home fun<br>flash message 是一次性的，当再次刷新时，因为未触发到那个条件，所以flash message不再出现，除非再次注册。</li>\n</ol>\n<p>加入flash 和 redirect 来控制，做了注册之后，页面的刷新跳转；</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)  </span><span class=\"comment\"># root page, two routes are handled by the same function</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/home&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">home</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;home.html&#x27;</span>, posts=posts)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/about&#x27;</span></span>)  </span><span class=\"comment\"># root page</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">about</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;about.html&#x27;</span>, title=<span class=\"string\">&#x27;About&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/register&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)  </span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">    form = RegistrationForm()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> form.validate_on_submit():</span><br><span class=\"line\">        flash(<span class=\"string\">f&#x27;Account created for <span class=\"subst\">&#123;form.username.data&#125;</span>!&#x27;</span>, <span class=\"string\">&#x27;success&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">&#x27;home&#x27;</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;register.html&#x27;</span>, title=<span class=\"string\">&#x27;Register&#x27;</span>, form=form)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>13.2  但是当register 失败后，并无feedback 来告诉用户  why it was invalid</p>\n<p>添加了一些验证在 register.html， 用的是如果拿到error信息就展示出来</p>\n<p>![](_v_images/20201019234332261_1025641223.png =300x)</p>\n<ol start=\"14\">\n<li>在login 加了 flash信息 ，hardcode写了 用户名和密码<br>![](_v_images/20201020002527262_100800492.png =300x)</li>\n</ol>\n<hr>\n<ol start=\"15\">\n<li><code>pip install flask-sqlalchemy</code></li>\n</ol>\n<p><del>export  PIP_DEFAULT_TIMEOUT=100</del>  无效<br>sudo pip install –default-timeout=100 future<br>pip install –default-timeout=220 future<br>因为sudo 调用的pip 是3.6</p>\n<p>![](_v_images/20201021220751159_1841048205.png =600x)</p>\n<p>python</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flaskblog <span class=\"keyword\">import</span> db</span><br><span class=\"line\">db.create_all()    ---&gt; site.db file</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flaskblog <span class=\"keyword\">import</span> User, Post</span><br><span class=\"line\">user_1 = User(username=<span class=\"string\">&#x27;Corey&#x27;</span>, email=<span class=\"string\">&#x27;C@demo.com&#x27;</span>, password=<span class=\"string\">&#x27;password&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">db.session.add(user_1)</span><br><span class=\"line\">user_2 = User(username=<span class=\"string\">&#x27;johnDone&#x27;</span>, email=<span class=\"string\">&#x27;jd@demo.com&#x27;</span>, password=<span class=\"string\">&#x27;password&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">db.session.add(user_2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">db.session.commit()</span><br><span class=\"line\"></span><br><span class=\"line\">User.query.<span class=\"built_in\">all</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">User.query.first()</span><br><span class=\"line\"></span><br><span class=\"line\">User.query.filter_by(username=<span class=\"string\">&#x27;Corey&#x27;</span>).<span class=\"built_in\">all</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">User.query.filter_by(username=<span class=\"string\">&#x27;Corey&#x27;</span>).first()</span><br><span class=\"line\"></span><br><span class=\"line\">user = User.query.filter_by(username=<span class=\"string\">&#x27;Corey&#x27;</span>).first()</span><br><span class=\"line\"></span><br><span class=\"line\">user.<span class=\"built_in\">id</span></span><br><span class=\"line\">user = User.query.get(<span class=\"number\">1</span>)</span><br><span class=\"line\">user</span><br><span class=\"line\"></span><br><span class=\"line\">user.posts</span><br><span class=\"line\"></span><br><span class=\"line\">post_1 = Post(title=<span class=\"string\">&#x27;Blog 1 &#x27;</span>, content = <span class=\"string\">&#x27;first post content!&#x27;</span>, user_id = user.<span class=\"built_in\">id</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">post_2 = Post(title=<span class=\"string\">&#x27;Blog 2 &#x27;</span>, content = <span class=\"string\">&#x27;Second post content!&#x27;</span>, user_id = user.<span class=\"built_in\">id</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">db.session.add(post_1)</span><br><span class=\"line\"></span><br><span class=\"line\">db.session.add(post_2)</span><br><span class=\"line\"></span><br><span class=\"line\">db.session.commit()</span><br><span class=\"line\"></span><br><span class=\"line\">user.posts</span><br><span class=\"line\"><span class=\"keyword\">for</span> post <span class=\"keyword\">in</span> user.posts:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(post.title)</span><br><span class=\"line\"></span><br><span class=\"line\">post = Post.query.first()</span><br><span class=\"line\"></span><br><span class=\"line\">post.user_id</span><br><span class=\"line\">post.author</span><br><span class=\"line\"></span><br><span class=\"line\">db.drop_all()</span><br><span class=\"line\">db.create_all()</span><br><span class=\"line\">User.query.<span class=\"built_in\">all</span>()</span><br><span class=\"line\">Post.query.<span class=\"built_in\">all</span>()</span><br></pre></td></tr></table></figure>\n\n\n<hr>\n<ol start=\"16\">\n<li><code>pip install flask-bcrypt</code><br>用bcrypt 来生成hash 加密，每次生成都不一样，<br>但是反之check却可以验证真伪。<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~ 🔥» python                      vivi@vivideMacBook-Pro</span><br><span class=\"line\">Python <span class=\"number\">3.8</span><span class=\"number\">.5</span> (v3<span class=\"number\">.8</span><span class=\"number\">.5</span>:580fbb018f, Jul <span class=\"number\">20</span> <span class=\"number\">2020</span>, <span class=\"number\">12</span>:<span class=\"number\">11</span>:<span class=\"number\">27</span>)</span><br><span class=\"line\">[Clang <span class=\"number\">6.0</span> (clang-<span class=\"number\">600.0</span><span class=\"number\">.57</span>)] on darwin</span><br><span class=\"line\"><span class=\"type\">Type</span> <span class=\"string\">&quot;help&quot;</span>, <span class=\"string\">&quot;copyright&quot;</span>, <span class=\"string\">&quot;credits&quot;</span> <span class=\"keyword\">or</span> <span class=\"string\">&quot;license&quot;</span> <span class=\"keyword\">for</span> more information.</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> flask_bcrypt <span class=\"keyword\">import</span> Bcrypt</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>bcrypt = Bcrypt()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>bcrypt.generate_password_hash(<span class=\"string\">&#x27;testing&#x27;</span>)</span><br><span class=\"line\"><span class=\"string\">b&#x27;$2b$12$mwleE8U2426VUFW1ZfjI0OsrWatmzYla/hCHhiH5t/xsLxQl/ob6i&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>bcrypt.generate_password_hash(<span class=\"string\">&#x27;testing&#x27;</span>).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"><span class=\"string\">&#x27;$2b$12$6kcDKHgJJDhlwaZZV9l0f.DPEqxcJFx01axApkdAVm/v5uoiQKyHe&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>bcrypt.generate_password_hash(<span class=\"string\">&#x27;testing&#x27;</span>).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"><span class=\"string\">&#x27;$2b$12$8LMjQhBOdUqT.ZLF08SreOf7CrOYCtgOaEEXHal5okuXclqgviR1e&#x27;</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>hashed_pw = bcrypt.generate_password_hash(<span class=\"string\">&#x27;testing&#x27;</span>).decode(<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>bcrypt.check_password_hash(hashed_pw,<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\"><span class=\"literal\">False</span></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>bcrypt.check_password_hash(hashed_pw,<span class=\"string\">&quot;testing&quot;</span>)</span><br><span class=\"line\"><span class=\"literal\">True</span></span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>添加了一些校验之后，在首页注册成功</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">~/Desktop/Flask_Blog 🔥» python   vivi@vivideMacBook-Pro</span><br><span class=\"line\">Python <span class=\"number\">3.8</span><span class=\"number\">.5</span> (v3<span class=\"number\">.8</span><span class=\"number\">.5</span>:580fbb018f, Jul <span class=\"number\">20</span> <span class=\"number\">2020</span>, <span class=\"number\">12</span>:<span class=\"number\">11</span>:<span class=\"number\">27</span>)</span><br><span class=\"line\">[Clang <span class=\"number\">6.0</span> (clang-<span class=\"number\">600.0</span><span class=\"number\">.57</span>)] on darwin</span><br><span class=\"line\"><span class=\"type\">Type</span> <span class=\"string\">&quot;help&quot;</span>, <span class=\"string\">&quot;copyright&quot;</span>, <span class=\"string\">&quot;credits&quot;</span> <span class=\"keyword\">or</span> <span class=\"string\">&quot;license&quot;</span> <span class=\"keyword\">for</span> more information.</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> flaskblog <span class=\"keyword\">import</span> db</span><br><span class=\"line\">/Library/Frameworks/Python.framework/Versions/<span class=\"number\">3.8</span>/lib/python3<span class=\"number\">.8</span>/site-packages/flask_sqlalchemy/__init__.py:<span class=\"number\">833</span>: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead <span class=\"keyword\">and</span> will be disabled by default <span class=\"keyword\">in</span> the future.  <span class=\"type\">Set</span> it to <span class=\"literal\">True</span> <span class=\"keyword\">or</span> <span class=\"literal\">False</span> to suppress this warning.</span><br><span class=\"line\">  warnings.warn(FSADeprecationWarning(</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span><span class=\"keyword\">from</span> flaskblog.models <span class=\"keyword\">import</span> User</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user = User.query.first()</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user</span><br><span class=\"line\">User(<span class=\"string\">&#x27;ali1&#x27;</span>, <span class=\"string\">&#x27;ali1@flask.com&#x27;</span>, <span class=\"string\">&#x27;default.jpg&#x27;</span>)</span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>user.password</span><br><span class=\"line\"><span class=\"string\">&#x27;$2b$12$JM7NPMUz6329UQmMtj8p7uDFWtKRHmpQujnffwW0U/W1WNOfWHThG&#x27;</span></span><br><span class=\"line\">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure>\n\n<p> 用已经存在的用户来注册，页面报错</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlalchemy.exc.IntegrityError</span><br><span class=\"line\">sqlalchemy.exc.IntegrityError: (sqlite3.IntegrityError) UNIQUE constraint failed: user.email</span><br><span class=\"line\">[SQL: INSERT INTO user (username, email, image_file, password) VALUES (?, ?, ?, ?)]</span><br><span class=\"line\">[parameters: (<span class=\"string\">&#x27;ali1&#x27;</span>, <span class=\"string\">&#x27;ali1@flask.com&#x27;</span>, <span class=\"string\">&#x27;default.jpg&#x27;</span>, <span class=\"string\">&#x27;$2b$12$HjaXxkdNbmjhLSLTu7CSsO9Nx/HLJG8.1cUrBL9TwS79/Zui9wvSm&#x27;</span>)]</span><br><span class=\"line\">(Background on this error at: http://sqlalche.me/e/<span class=\"number\">13</span>/gkpj)</span><br></pre></td></tr></table></figure>\n\n\n<p>在浏览器页面，到某个地方想执行，输入pin码即可调用python生成各种信息<br>所以，不可以生产环境使用debug模式，暴露的信息太多。<br>![](_v_images/20201022210758556_1552795459.png =500x)![](_v_images/20201022210936423_1612001069.png =500x)</p>\n<p>添加了一些验证之后：<br>![](_v_images/20201022212003059_248276131.png =500x)</p>\n<ol start=\"17\">\n<li><code>pip install flask-login</code>  安装login 模块</li>\n</ol>\n<hr>\n<p>User Account and Profile Picture</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cldzyok6r0001c6oac8ua0i6t","category_id":"cldzyok750004c6oa4va5dl5q","_id":"cldzyok7t000ec6oa9awl3032"},{"post_id":"cldzyok7m0009c6oa2qaq2o68","category_id":"cldzyok750004c6oa4va5dl5q","_id":"cldzyok7t000gc6oagpb98skc"},{"post_id":"cldzyok700003c6oa1rrqfj83","category_id":"cldzyok750004c6oa4va5dl5q","_id":"cldzyok7u000ic6oa9qhibjj3"},{"post_id":"cldzyok7d0007c6oacthk5ch8","category_id":"cldzyok750004c6oa4va5dl5q","_id":"cldzyok7x000lc6oaahae61ny"},{"post_id":"cldzyok80000nc6oaegd96enf","category_id":"cldzyok750004c6oa4va5dl5q","_id":"cldzyok86000pc6oaaeae07xw"}],"PostTag":[{"post_id":"cldzyok6r0001c6oac8ua0i6t","tag_id":"cldzyok770005c6oa6ma238sz","_id":"cldzyok7r000cc6oagli2hhtx"},{"post_id":"cldzyok700003c6oa1rrqfj83","tag_id":"cldzyok7q000bc6oac5kq3re0","_id":"cldzyok7t000hc6oadei36syc"},{"post_id":"cldzyok7d0007c6oacthk5ch8","tag_id":"cldzyok770005c6oa6ma238sz","_id":"cldzyok7x000kc6oa0fg02jf9"},{"post_id":"cldzyok7m0009c6oa2qaq2o68","tag_id":"cldzyok7u000jc6oagwxi5ui6","_id":"cldzyok7x000mc6oaerase44s"},{"post_id":"cldzyok80000nc6oaegd96enf","tag_id":"cldzyok85000oc6oahh748yqr","_id":"cldzyok86000qc6oa6okmgujj"}],"Tag":[{"name":"ES","_id":"cldzyok770005c6oa6ma238sz"},{"name":"django","_id":"cldzyok7q000bc6oac5kq3re0"},{"name":"metadata","_id":"cldzyok7u000jc6oagwxi5ui6"},{"name":"flask","_id":"cldzyok85000oc6oahh748yqr"}]}}